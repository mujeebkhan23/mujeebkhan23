{"version":3,"file":"loading-page.directive.d.ts","sources":["loading-page.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, ViewContainerRef, OnChanges, SimpleChange } from '@angular/core';\nimport { HttpObservableService } from './interceptors/http-observable.service';\nimport { RouteInterceptorService } from './interceptors/route-interceptor.service';\nexport interface MkLoadingPage {\n    checkPendingHttp: boolean;\n    checkPendingRoute: boolean;\n}\nexport declare class LoadingPageDirective implements OnChanges {\n    private httpObservableService;\n    private routeInterceptorService;\n    private templateRef;\n    private viewContainer;\n    isPendingRequests: boolean;\n    isPendingRoute: boolean;\n    private hasView;\n    mkLoadingPage: MkLoadingPage;\n    /**\n     * @method constructor\n     * @param privatehttpObservableService   [description]\n     * @param privaterouteInterceptorService [description]\n     * @param privatetemplateRef             [description]\n     * @param privateviewContainer           [description]                                              [description]\n     */\n    constructor(httpObservableService: HttpObservableService, routeInterceptorService: RouteInterceptorService, templateRef: TemplateRef<any>, viewContainer: ViewContainerRef);\n    /**\n     * @method ngOnChanges\n     * @param changes [description]\n     */\n    ngOnChanges(changes: {\n        [propKey: string]: SimpleChange;\n    }): void;\n    /**\n     * [init description]\n     * @method init\n     * @return [description]\n     */\n    private init;\n    /**\n     * [isVisible description]\n     * @method isVisible\n     * @return [description]\n     */\n    private isVisible;\n}\n"]}