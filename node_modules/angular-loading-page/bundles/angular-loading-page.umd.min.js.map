{"version":3,"sources":["../library/angular-loading-page/src/lib/interceptors/route-interceptor.service.ts","../library/angular-loading-page/src/lib/interceptors/http-observable.service.ts","../library/angular-loading-page/src/lib/interceptors/http-interceptor.service.ts","../../library/angular-loading-page/src/lib/loading-page.directive.ts","../../library/angular-loading-page/src/lib/loading-page.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/chasing-dots/chasing-dots.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/chasing-dots/chasing-dots.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/circle/circle.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/circle/circle.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/cube-grid/cube-grid.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/cube-grid/cube-grid.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/double-bounce/double-bounce.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/double-bounce/double-bounce.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/fading-circle/fading-circle.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/fading-circle/fading-circle.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/folding-cube/folding-cube.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/folding-cube/folding-cube.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/material-bar/material-bar.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/material-bar/material-bar.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/pulse/pulse.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/pulse/pulse.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/sliding-bar/sliding-bar.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/sliding-bar/sliding-bar.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/three-bounce/three-bounce.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/three-bounce/three-bounce.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/wandering-cubes/wandering-cubes.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/wandering-cubes/wandering-cubes.module.ts","../esm2015/library/angular-loading-page/src/lib/loaders/wave/wave.component.ts","../esm2015/library/angular-loading-page/src/lib/loaders/wave/wave.module.ts"],"names":["RouteInterceptorService","router","_this","this","isPendingRouteSubject","Subject","events","subscribe","event","routerInterceptor","Object","defineProperty","prototype","asObservable","NavigationStart","onRouteStart","NavigationEnd","NavigationCancel","NavigationError","onRouteDone","next","Injectable","Router","decorators","type","Optional","HttpObservableService","pendingRequestsCounter","isPendingRequestsSubject","onRequestStart","onRequestDone","HttpInterceptorService","injector","httpObservableService","get","intercept","request","handle","pipe","finalize","HttpInterceptorServiceFactory","Injector","LoadingPageDirective","routeInterceptorService","templateRef","viewContainer","isPendingRequests","isPendingRoute","hasView","ngOnChanges","changes","mkLoadingPage","currentValue","firstChange","init","checkPendingHttp","value","isVisible","checkPendingRoute","createEmbeddedView","clear","Directive","args","selector","TemplateRef","ViewContainerRef","Input","HttpInterceptorServiceExistingProvider","provide","HTTP_INTERCEPTORS","useExisting","multi","NgModule","imports","CommonModule","HttpClientModule","declarations","exports","providers","useFactory","Éµ0","deps","colorOne","colorTwo","Component","template","ChasingDotsComponent","color","CircleComponent","CubeGridComponent","DoubleBounceComponent","FadingCircleComponent","FoldingCubeComponent","colorThree","MaterialbarComponent","PulseComponent","SlidingBarComponent","ThreeBounceComponent","WanderingCubesComponent","WaveComponent"],"mappings":"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","sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { Router, Event as RouterEvent, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\n\nimport { Observable ,  Subject } from 'rxjs';\n\n@Injectable()\nexport class RouteInterceptorService {\n  private isPendingRouteSubject = new Subject<boolean>();\n\n  /**\n   * @method constructor\n   */\n  constructor(@Optional() private router: Router) {\n    if (this.router) {\n      router.events.subscribe((event: RouterEvent) => {\n        this.routerInterceptor(event);\n      });\n    }\n  }\n\n  /**\n   * [isPendingRoute description]\n   * @method isPendingRoute\n   * @return [description]\n   */\n  get isPendingRoute(): Observable<boolean> {\n    return this.isPendingRouteSubject.asObservable();\n  }\n\n  /**\n   * [routerInterceptor description]\n   * @method routerInterceptor\n   * @param event [description]\n   */\n  private routerInterceptor(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this.onRouteStart();\n    }\n    if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n      this.onRouteDone();\n    }\n  }\n\n  /**\n   * [onRequestStart description]\n   * @method onRequestStart\n   */\n  private onRouteStart(): void {\n    this.isPendingRouteSubject.next(true);\n  }\n\n  /**\n   * [onRequestDone description]\n   * @method onRequestDone\n   */\n  private onRouteDone(): void {\n    this.isPendingRouteSubject.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable ,  Subject } from 'rxjs';\n\n\n\n@Injectable()\nexport class HttpObservableService {\n  private pendingRequestsCounter = 0;\n  private isPendingRequestsSubject = new Subject<boolean>();\n\n  /**\n   * [isPendingRequests description]\n   * @method isPendingRequests\n   * @return [description]\n   */\n  get isPendingRequests(): Observable<boolean> {\n    return this.isPendingRequestsSubject.asObservable();\n  }\n\n  /**\n   * [pendingRequests description]\n   * @method pendingRequests\n   * @return [description]\n   */\n  get pendingRequests(): number {\n    return this.pendingRequestsCounter;\n  }\n\n  /**\n   * [onRequestStart description]\n   * @method onRequestStart\n   */\n  public onRequestStart(): void {\n    this.pendingRequestsCounter ++;\n\n    if (this.pendingRequestsCounter === 1) {\n      this.isPendingRequestsSubject.next(true);\n    }\n  }\n\n  /**\n   * [onRequestDone description]\n   * @method onRequestDone\n   */\n  public onRequestDone(): void {\n    this.pendingRequestsCounter --;\n\n    if (this.pendingRequestsCounter === 0) {\n      this.isPendingRequestsSubject.next(false);\n    }\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { HttpObservableService } from './http-observable.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n  private httpObservableService: HttpObservableService;\n\n  /**\n   * @method constructor\n   * @param injector [description]\n   */\n  constructor(private injector: Injector) {\n    this.httpObservableService = injector.get(HttpObservableService);\n  }\n\n  /**\n   * @method intercept\n   * @param request [description]\n   * @param next [description]\n   */\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.httpObservableService.onRequestStart();\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.httpObservableService.onRequestDone();\n      })\n    );\n  }\n}\n\n\nexport function HttpInterceptorServiceFactory(injector: Injector): HttpInterceptorService {\n  return new HttpInterceptorService(injector);\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef, OnChanges, SimpleChange } from '@angular/core';\nimport { HttpObservableService } from './interceptors/http-observable.service';\nimport { RouteInterceptorService } from './interceptors/route-interceptor.service';\n\n/*\n * MkLoadingPage Interface\n */\nexport interface MkLoadingPage {\n  checkPendingHttp: boolean;\n  checkPendingRoute: boolean;\n}\n\n/*\n * mkLoadingPage Directive\n */\n@Directive({\n  selector: '[mkLoadingPage]',\n})\nexport class LoadingPageDirective implements OnChanges {\n  public isPendingRequests = false;\n  public isPendingRoute = false;\n\n  private hasView = false;\n\n  @Input() mkLoadingPage!: MkLoadingPage;\n\n  /**\n   * @method constructor\n   * @param privatehttpObservableService   [description]\n   * @param privaterouteInterceptorService [description]\n   * @param privatetemplateRef             [description]\n   * @param privateviewContainer           [description]                                              [description]\n   */\n  constructor(\n    private httpObservableService: HttpObservableService,\n    private routeInterceptorService: RouteInterceptorService,\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef\n  ) {}\n\n  /**\n   * @method ngOnChanges\n   * @param changes [description]\n   */\n  ngOnChanges(changes: {[propKey: string]: SimpleChange}): void {\n    if (changes.mkLoadingPage.currentValue) {\n      this.mkLoadingPage = changes.mkLoadingPage.currentValue;\n    }\n    if (changes.mkLoadingPage.firstChange) {\n      this.init();\n    }\n  }\n\n  /**\n   * [init description]\n   * @method init\n   * @return [description]\n   */\n  private init(): void {\n    if (!this.mkLoadingPage || this.mkLoadingPage.checkPendingHttp) {\n      this.httpObservableService.isPendingRequests.subscribe(value => {\n        this.isPendingRequests = value;\n        this.isVisible();\n      });\n    }\n\n    if (!this.mkLoadingPage || this.mkLoadingPage.checkPendingRoute) {\n      this.routeInterceptorService.isPendingRoute.subscribe(value => {\n        this.isPendingRoute = value;\n        this.isVisible();\n      });\n    }\n  }\n\n  /**\n   * [isVisible description]\n   * @method isVisible\n   * @return [description]\n   */\n  private isVisible(): void {\n    if (this.hasView && !this.isPendingRequests && !this.isPendingRoute) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    } else if (!this.hasView && (this.isPendingRequests || this.isPendingRoute)) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    }\n  }\n}\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { RouteInterceptorService } from './interceptors/route-interceptor.service';\nimport { HttpInterceptorService, HttpInterceptorServiceFactory } from './interceptors/http-interceptor.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpObservableService } from './interceptors/http-observable.service';\n\nimport { LoadingPageDirective } from './loading-page.directive';\n\nconst HttpInterceptorServiceExistingProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useExisting: HttpInterceptorService,\n  multi: true\n};\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  declarations: [\n    LoadingPageDirective\n  ],\n  exports: [\n    HttpClientModule,\n    LoadingPageDirective\n  ],\n  providers: [\n    RouteInterceptorService,\n    HttpObservableService,\n    HttpInterceptorServiceExistingProvider,\n    {\n      provide: HttpInterceptorService,\n      useFactory: HttpInterceptorServiceFactory,\n      deps: [Injector]\n    }\n  ]\n})\nexport class LoadingPageModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-chasing-dots',\n  template: `\n    <div class=\"sk-chasing-dots\">\n      <div class=\"sk-child sk-dot1\" [style.background-color]=\"colorOne\"></div>\n      <div class=\"sk-child sk-dot2\" [style.background-color]=\"colorTwo\"></div>\n    </div>`,\n  styleUrls: ['./chasing-dots.component.css']\n})\nexport class ChasingDotsComponent {\n  @Input() colorOne = '#da4733';\n  @Input() colorTwo = '#3b78e7';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChasingDotsComponent } from './chasing-dots.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ChasingDotsComponent,\n  ],\n  exports: [\n    ChasingDotsComponent\n  ]\n})\nexport class ChasingDotsModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-circle',\n  template: `\n    <div class=\"sk-circle\">\n      <div class=\"sk-circle1 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle2 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle3 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle4 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle5 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle6 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle7 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle8 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle9 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle10 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle11 sk-child\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle12 sk-child\"><div [style.background-color]=\"color\"></div></div>\n    </div>`,\n  styleUrls: ['./circle.component.css']\n})\nexport class CircleComponent {\n  @Input() color = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CircleComponent } from './circle.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CircleComponent,\n  ],\n  exports: [\n    CircleComponent\n  ]\n})\nexport class CircleModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-cube-grid',\n  template: `\n    <div class=\"sk-cube-grid\">\n      <div class=\"sk-cube sk-cube1\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube2\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube3\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube4\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube5\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube6\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube7\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube8\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-cube sk-cube9\" [style.background-color]=\"color\"></div>\n    </div>`,\n  styleUrls: ['./cube-grid.component.css']\n})\nexport class CubeGridComponent {\n  @Input() color = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CubeGridComponent } from './cube-grid.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CubeGridComponent,\n  ],\n  exports: [\n    CubeGridComponent\n  ]\n})\nexport class CubeGridModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-double-bounce',\n  template: `\n    <div class=\"sk-double-bounce\">\n      <div class=\"sk-child sk-double-bounce1\" [style.background-color]=\"colorOne\"></div>\n      <div class=\"sk-child sk-double-bounce2\" [style.background-color]=\"colorTwo\"></div>\n    </div>`,\n  styleUrls: ['./double-bounce.component.css']\n})\nexport class DoubleBounceComponent {\n  @Input() colorOne = '#da4733';\n  @Input() colorTwo = '#3b78e7';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DoubleBounceComponent } from './double-bounce.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DoubleBounceComponent,\n  ],\n  exports: [\n    DoubleBounceComponent\n  ]\n})\nexport class DoubleBounceModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-fading-circle',\n  template: `\n    <div class=\"sk-fading-circle\">\n      <div class=\"sk-circle1 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle2 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle3 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle4 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle5 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle6 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle7 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle8 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle9 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle10 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle11 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-circle12 sk-circle\"><div [style.background-color]=\"color\"></div></div>\n    </div>`,\n  styleUrls: ['./fading-circle.component.css']\n})\nexport class FadingCircleComponent {\n  @Input() color = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FadingCircleComponent } from './fading-circle.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FadingCircleComponent,\n  ],\n  exports: [\n    FadingCircleComponent\n  ]\n})\nexport class FadingCircleModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-folding-cube',\n  template: `\n    <div class=\"sk-folding-cube\">\n      <div class=\"sk-cube1 sk-cube\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-cube2 sk-cube\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-cube4 sk-cube\"><div [style.background-color]=\"color\"></div></div>\n      <div class=\"sk-cube3 sk-cube\"><div [style.background-color]=\"color\"></div></div>\n    </div>`,\n  styleUrls: ['./folding-cube.component.css']\n})\nexport class FoldingCubeComponent {\n  @Input() color = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FoldingCubeComponent } from './folding-cube.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    FoldingCubeComponent,\n  ],\n  exports: [\n    FoldingCubeComponent\n  ]\n})\nexport class FoldingCubeModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-material-bar',\n  template: `\n  <div class=\"material-bar\">\n    <div class=\"bar\" [style.background-color]=\"colorOne\"></div>\n    <div class=\"bar\" [style.background-color]=\"colorTwo\"></div>\n    <div class=\"bar\" [style.background-color]=\"colorThree\"></div>\n  </div>`,\n  styleUrls: ['./material-bar.component.css']\n})\nexport class MaterialbarComponent {\n  @Input() colorOne = '#da4733';\n  @Input() colorTwo = '#3b78e7';\n  @Input() colorThree = '#fdba2c';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialbarComponent } from './material-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MaterialbarComponent,\n  ],\n  exports: [\n    MaterialbarComponent\n  ]\n})\nexport class MaterialBarModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-pulse',\n  template: `<div class=\"sk-spinner sk-spinner-pulse\" [style.background-color]=\"color\"></div>`,\n  styleUrls: ['./pulse.component.css']\n})\nexport class PulseComponent {\n  @Input() color = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PulseComponent } from './pulse.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PulseComponent,\n  ],\n  exports: [\n    PulseComponent\n  ]\n})\nexport class PulseModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-sliding-bar',\n  template: `<div class=\"sliding-bar\" [style.background-color]=\"colorOne\"><div [style.background-color]=\"colorTwo\"></div></div>`,\n  styleUrls: ['./sliding-bar.component.css']\n})\nexport class SlidingBarComponent {\n  @Input() colorOne = '#ddd';\n  @Input() colorTwo = '#3c8dbc';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SlidingBarComponent } from './sliding-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlidingBarComponent,\n  ],\n  exports: [\n    SlidingBarComponent\n  ]\n})\nexport class SlidingBarModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-three-bounce',\n  template: `\n    <div class=\"sk-three-bounce\">\n       <div class=\"sk-child sk-bounce1\" [style.background-color]=\"colorOne\"></div>\n       <div class=\"sk-child sk-bounce2\" [style.background-color]=\"colorTwo\"></div>\n       <div class=\"sk-child sk-bounce3\" [style.background-color]=\"colorThree\"></div>\n     </div>`,\n  styleUrls: ['./three-bounce.component.css']\n})\nexport class ThreeBounceComponent {\n  @Input() colorOne = '#00a65a';\n  @Input() colorTwo = '#fdba2c';\n  @Input() colorThree = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThreeBounceComponent } from './three-bounce.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ThreeBounceComponent,\n  ],\n  exports: [\n    ThreeBounceComponent\n  ]\n})\nexport class ThreeBounceModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-wandering-cubes',\n  template: `\n    <div class=\"sk-wandering-cubes\">\n      <div class=\"sk-cube sk-cube1\" [style.background-color]=\"colorOne\"></div>\n      <div class=\"sk-cube sk-cube2\" [style.background-color]=\"colorTwo\"></div>\n    </div>`,\n  styleUrls: ['./wandering-cubes.component.css']\n})\nexport class WanderingCubesComponent {\n  @Input() colorOne = '#da4733';\n  @Input() colorTwo = '#3b78e7';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WanderingCubesComponent } from './wandering-cubes.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    WanderingCubesComponent,\n  ],\n  exports: [\n    WanderingCubesComponent\n  ]\n})\nexport class WanderingCubesModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'mk-wave',\n  template: `\n    <div class=\"sk-wave\">\n      <div class=\"sk-rect sk-rect1\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-rect sk-rect2\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-rect sk-rect3\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-rect sk-rect4\" [style.background-color]=\"color\"></div>\n      <div class=\"sk-rect sk-rect5\" [style.background-color]=\"color\"></div>\n    </div>`,\n  styleUrls: ['./wave.component.css']\n})\nexport class WaveComponent {\n  @Input() color = '#da4733';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WaveComponent } from './wave.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    WaveComponent,\n  ],\n  exports: [\n    WaveComponent\n  ]\n})\nexport class WaveModule {}\n"]}