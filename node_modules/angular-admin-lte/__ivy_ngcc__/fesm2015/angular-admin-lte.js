import { Injectable, Component, ChangeDetectorRef, Input, NgModule, ChangeDetectionStrategy, ElementRef, ViewChild, ContentChild, NgZone, Renderer2, EventEmitter, Directive, Output, ViewChildren, InjectionToken, Optional, SkipSelf, ContentChildren, ViewContainerRef, HostListener } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NavigationEnd, PRIMARY_OUTLET, Router, RouterModule, NavigationStart, ActivationStart } from '@angular/router';
import { BehaviorSubject, Subject } from 'rxjs';
import { Title } from '@angular/platform-browser';
import { pluck, distinctUntilChanged } from 'rxjs/operators';
import { NgControl, FormsModule } from '@angular/forms';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/platform-browser';
import * as ɵngcc4 from '@angular/forms';

function BreadcrumbsComponent_li_1_a_1_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 7);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵpropertyInterpolate("ngClass", ctx_r7.homeIcon);
} }
function BreadcrumbsComponent_li_1_a_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r1.data.breadcrumbs);
} }
function BreadcrumbsComponent_li_1_a_1_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r1.data.title);
} }
function BreadcrumbsComponent_li_1_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 4);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbsComponent_li_1_a_1_i_1_Template, 1, 1, "i", 5);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbsComponent_li_1_a_1_ng_template_2_Template, 1, 1, "ng-template", 6);
    ɵngcc0.ɵɵtemplate(3, BreadcrumbsComponent_li_1_a_1_ng_template_3_Template, 1, 1, "ng-template", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    const breadcrumb_r1 = ctx_r12.$implicit;
    const first_r2 = ctx_r12.first;
    ɵngcc0.ɵɵproperty("routerLink", breadcrumb_r1.url);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", first_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", breadcrumb_r1.data.breadcrumbs);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", breadcrumb_r1.data.title);
} }
function BreadcrumbsComponent_li_1_ng_template_2_i_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 7);
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵpropertyInterpolate("ngClass", ctx_r13.homeIcon);
} }
function BreadcrumbsComponent_li_1_ng_template_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r1.data.breadcrumbs);
} }
function BreadcrumbsComponent_li_1_ng_template_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const breadcrumb_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵtextInterpolate(breadcrumb_r1.data.title);
} }
function BreadcrumbsComponent_li_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, BreadcrumbsComponent_li_1_ng_template_2_i_0_Template, 1, 1, "i", 5);
    ɵngcc0.ɵɵtemplate(1, BreadcrumbsComponent_li_1_ng_template_2_ng_template_1_Template, 1, 1, "ng-template", 6);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbsComponent_li_1_ng_template_2_ng_template_2_Template, 1, 1, "ng-template", 6);
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext();
    const first_r2 = ctx_r18.first;
    const breadcrumb_r1 = ctx_r18.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", first_r2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", breadcrumb_r1.data.breadcrumbs);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", breadcrumb_r1.data.title);
} }
function BreadcrumbsComponent_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtemplate(1, BreadcrumbsComponent_li_1_a_1_Template, 4, 4, "a", 2);
    ɵngcc0.ɵɵtemplate(2, BreadcrumbsComponent_li_1_ng_template_2_Template, 3, 3, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const breadcrumb_r1 = ctx.$implicit;
    const last_r3 = ctx.last;
    const _r5 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassProp("active", last_r3 || !breadcrumb_r1.url);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", breadcrumb_r1.url && !last_r3)("ngIfElse", _r5);
} }
const _c0 = ["contentInnerElement"];
function ContentComponent_section_4_small_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.description);
} }
function ContentComponent_section_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "section", 5);
    ɵngcc0.ɵɵelementStart(1, "h1");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵtemplate(3, ContentComponent_section_4_small_3_Template, 2, 1, "small", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "mk-breadcrumbs");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.description);
} }
const _c1 = [[["", "mk-layout-content-before-header", ""]], [["", "mk-layout-content-after-header", ""]], "*"];
const _c2 = ["[mk-layout-content-before-header]", "[mk-layout-content-after-header]", "*"];
const _c3 = ["templateRef"];
function FooterLeftComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
const _c4 = ["*"];
function FooterRightComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function FooterComponent_2_ng_template_0_Template(rf, ctx) { }
function FooterComponent_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FooterComponent_2_ng_template_0_Template, 0, 0, "ng-template", 3);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.footerRightComponent.templateRef);
} }
function FooterComponent_3_ng_template_0_Template(rf, ctx) { }
function FooterComponent_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, FooterComponent_3_ng_template_0_Template, 0, 0, "ng-template", 3);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.footerLeftComponent.templateRef);
} }
function HeaderLogoComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function HeaderLogoMiniComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
const _c5 = ["headerElement"];
const _c6 = ["sidebarLeftToggleElement"];
const _c7 = ["sidebarRightToggleElement"];
function HeaderComponent_span_3_ng_template_1_Template(rf, ctx) { }
function HeaderComponent_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 8);
    ɵngcc0.ɵɵtemplate(1, HeaderComponent_span_3_ng_template_1_Template, 0, 0, "ng-template", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.headerLogoMiniComponent.templateRef);
} }
function HeaderComponent_span_4_ng_template_1_Template(rf, ctx) { }
function HeaderComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 10);
    ɵngcc0.ɵɵtemplate(1, HeaderComponent_span_4_ng_template_1_Template, 0, 0, "ng-template", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.headerLogoComponent.templateRef);
} }
function HeaderComponent_a_6_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "i");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r8.sidebarLeftToggleIconClasses);
} }
function HeaderComponent_a_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 11, 12);
    ɵngcc0.ɵɵelementStart(2, "span", 13);
    ɵngcc0.ɵɵtext(3, "Toggle navigation");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, HeaderComponent_a_6_ng_container_4_Template, 2, 2, "ng-container", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("sidebar-toggle ", ctx_r3.sidebarLeftToggleIconClasses ? "sidebar-toggle-custom-icon" : "", "");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.sidebarLeftToggleIconClasses);
} }
function HeaderComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 15);
    ɵngcc0.ɵɵelementStart(1, "a", 11, 16);
    ɵngcc0.ɵɵelement(3, "i");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵclassMap(ctx_r4.sidebarRightToggleIconClasses ? ctx_r4.sidebarRightToggleIconClasses : "fa fa-gears");
} }
const _c8 = ["sidebarElement"];
function SidebarLeftComponent_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c9 = function (a0) { return { item: a0 }; };
function SidebarLeftComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SidebarLeftComponent_ng_container_5_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r4 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext();
    const _r2 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c9, item_r4));
} }
function SidebarLeftComponent_ng_template_6_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ɵngcc0.ɵɵnextContext().item;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(item_r6.label);
} }
function SidebarLeftComponent_ng_template_6_a_2_span_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rightItem_r15 = ctx.$implicit;
    ɵngcc0.ɵɵclassMapInterpolate1("pull-right ", rightItem_r15.classes, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(rightItem_r15.text);
} }
function SidebarLeftComponent_ng_template_6_a_2_span_4_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 16);
} }
function SidebarLeftComponent_ng_template_6_a_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, SidebarLeftComponent_ng_template_6_a_2_span_4_span_1_Template, 2, 4, "span", 14);
    ɵngcc0.ɵɵtemplate(2, SidebarLeftComponent_ng_template_6_a_2_span_4_i_2_Template, 1, 0, "i", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ɵngcc0.ɵɵnextContext(2).item;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", item_r6.pullRights);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r6.pullRights);
} }
function SidebarLeftComponent_ng_template_6_a_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 11);
    ɵngcc0.ɵɵelement(1, "i");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SidebarLeftComponent_ng_template_6_a_2_span_4_Template, 3, 2, "span", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ɵngcc0.ɵɵnextContext().item;
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("routerLink", item_r6.route);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r8.getIconClasses(item_r6));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r6.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r6.children || item_r6.pullRights);
} }
function SidebarLeftComponent_ng_template_6_a_3_span_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rightItem_r21 = ctx.$implicit;
    ɵngcc0.ɵɵclassMapInterpolate1("pull-right ", rightItem_r21.classes, "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(rightItem_r21.text);
} }
function SidebarLeftComponent_ng_template_6_a_3_span_4_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 16);
} }
function SidebarLeftComponent_ng_template_6_a_3_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 13);
    ɵngcc0.ɵɵtemplate(1, SidebarLeftComponent_ng_template_6_a_3_span_4_span_1_Template, 2, 4, "span", 14);
    ɵngcc0.ɵɵtemplate(2, SidebarLeftComponent_ng_template_6_a_3_span_4_i_2_Template, 1, 0, "i", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ɵngcc0.ɵɵnextContext(2).item;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", item_r6.pullRights);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r6.pullRights);
} }
function SidebarLeftComponent_ng_template_6_a_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 17);
    ɵngcc0.ɵɵelement(1, "i");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, SidebarLeftComponent_ng_template_6_a_3_span_4_Template, 3, 2, "span", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ɵngcc0.ɵɵnextContext().item;
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("mkMenuToggle", item_r6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r9.getIconClasses(item_r6));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(item_r6.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r6.children || item_r6.pullRights);
} }
function SidebarLeftComponent_ng_template_6_ul_4_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function SidebarLeftComponent_ng_template_6_ul_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, SidebarLeftComponent_ng_template_6_ul_4_ng_container_1_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r25 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext(3);
    const _r2 = ɵngcc0.ɵɵreference(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r2)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c9, item_r25));
} }
function SidebarLeftComponent_ng_template_6_ul_4_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 18);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.start", function SidebarLeftComponent_ng_template_6_ul_4_Template_ul_mkCollapseAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(2); return ctx_r27.visibilityStateStart($event); });
    ɵngcc0.ɵɵtemplate(1, SidebarLeftComponent_ng_template_6_ul_4_ng_container_1_Template, 2, 4, "ng-container", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ɵngcc0.ɵɵnextContext().item;
    ɵngcc0.ɵɵproperty("mkCollapseAnimation", item_r6.isCollapsed);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", item_r6.children);
} }
function SidebarLeftComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtemplate(1, SidebarLeftComponent_ng_template_6_span_1_Template, 2, 1, "span", 7);
    ɵngcc0.ɵɵtemplate(2, SidebarLeftComponent_ng_template_6_a_2_Template, 5, 5, "a", 8);
    ɵngcc0.ɵɵtemplate(3, SidebarLeftComponent_ng_template_6_a_3_Template, 5, 5, "a", 9);
    ɵngcc0.ɵɵtemplate(4, SidebarLeftComponent_ng_template_6_ul_4_Template, 2, 2, "ul", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ctx.item;
    ɵngcc0.ɵɵclassProp("active", item_r6.isActive)("header", item_r6.separator)("menu-open", !item_r6.isCollapsed);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r6.separator);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r6.separator && item_r6.route);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !item_r6.separator && !item_r6.route);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r6.children);
} }
const _c10 = ["sidebarContentElement"];
function AccordionHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function AccordionContentComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function AccordionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function AccordionGroupComponent_div_1_5_ng_template_0_Template(rf, ctx) { }
function AccordionGroupComponent_div_1_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccordionGroupComponent_div_1_5_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const accordion_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", accordion_r1.accordionHeaderComponent.templateRef);
} }
function AccordionGroupComponent_div_1_8_ng_template_0_Template(rf, ctx) { }
function AccordionGroupComponent_div_1_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccordionGroupComponent_div_1_8_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const accordion_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", accordion_r1.templateRef);
} }
function AccordionGroupComponent_div_1_9_ng_template_0_Template(rf, ctx) { }
function AccordionGroupComponent_div_1_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccordionGroupComponent_div_1_9_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const accordion_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", accordion_r1.accordionContentComponent.templateRef);
} }
function AccordionGroupComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 0);
    ɵngcc0.ɵɵelementStart(2, "h4", 3);
    ɵngcc0.ɵɵelementStart(3, "a", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵtemplate(5, AccordionGroupComponent_div_1_5_Template, 1, 1, undefined, 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.start", function AccordionGroupComponent_div_1_Template_div_mkCollapseAnimation_start_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const accordion_r1 = ctx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onCollapseStart($event, accordion_r1); })("mkCollapseAnimation.done", function AccordionGroupComponent_div_1_Template_div_mkCollapseAnimation_done_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const accordion_r1 = ctx.$implicit; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onCollapseDone($event, accordion_r1); });
    ɵngcc0.ɵɵelementStart(7, "div", 7);
    ɵngcc0.ɵɵtemplate(8, AccordionGroupComponent_div_1_8_Template, 1, 1, undefined, 5);
    ɵngcc0.ɵɵtemplate(9, AccordionGroupComponent_div_1_9_Template, 1, 1, undefined, 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const accordion_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("mkColor", accordion_r1.borderColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("no-border", accordion_r1.isCollapsed && !accordion_r1.isCollapsing);
    ɵngcc0.ɵɵproperty("ngClass", accordion_r1.headerStyleClass);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("collapsed", accordion_r1.isCollapsed);
    ɵngcc0.ɵɵproperty("mkAccordionToggle", accordion_r1)("mkFontColor", accordion_r1.headerStyleColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", accordion_r1.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !accordion_r1.header && accordion_r1.accordionHeaderComponent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("mkCollapseAnimation", accordion_r1.isCollapsed);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", accordion_r1.contentStyleClass)("mkFontColor", accordion_r1.contentColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !accordion_r1.accordionContentComponent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", accordion_r1.accordionContentComponent);
} }
const _c11 = ["removeButtonElement"];
function AlertComponent_div_0_button_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 4, 5);
    ɵngcc0.ɵɵtext(2, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
} }
const _c12 = function (a0, a1, a2) { return [a0, a1, a2]; };
function AlertComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.start", function AlertComponent_div_0_Template_div_mkCollapseAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onCollapseStart($event); })("mkCollapseAnimation.done", function AlertComponent_div_0_Template_div_mkCollapseAnimation_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onCollapseDone($event); });
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵtemplate(2, AlertComponent_div_0_button_2_Template, 3, 0, "button", 3);
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("mkCollapseAnimation", ctx_r0.remove);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("mkColor", ctx_r0.backgroundColor)("mkColorPrefix", ctx_r0.type)("mkFontColor", ctx_r0.color)("ngClass", ɵngcc0.ɵɵpureFunction3(6, _c12, ctx_r0.styleClass, ctx_r0.dismissibleClass, ctx_r0.type));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isDismissible);
} }
const _c13 = ["toggleButtonElement"];
const _c14 = function (a0, a1) { return { "fa-plus": a0, "fa-minus": a1 }; };
function BoxComponent_div_0_div_1_button_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 13, 14);
    ɵngcc0.ɵɵelement(2, "i", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r7.buttonsStyleClass);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(2, _c14, ctx_r7.isCollapsed, !ctx_r7.isCollapsed));
} }
function BoxComponent_div_0_div_1_button_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 13, 16);
    ɵngcc0.ɵɵelement(2, "i", 17);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r8.buttonsStyleClass);
} }
function BoxComponent_div_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "h3", 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 11);
    ɵngcc0.ɵɵprojection(5, 1);
    ɵngcc0.ɵɵtemplate(6, BoxComponent_div_0_div_1_button_6_Template, 3, 5, "button", 12);
    ɵngcc0.ɵɵtemplate(7, BoxComponent_div_0_div_1_button_7_Template, 3, 1, "button", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("with-border", ctx_r1.headerBorder);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.headerStyleClass)("mkColor", ctx_r1.boxColor)("mkColorCondition", ctx_r1.isSolid);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("mkFontColor", ctx_r1.headerColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.header, " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isCollapsable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isRemovable);
} }
function BoxComponent_div_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵprojection(1, 2);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function BoxComponent_div_0_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 3);
} }
function BoxComponent_div_0_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2, 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r5.footerStyleClass)("mkFontColor", ctx_r5.footerColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.footer, " ");
} }
function BoxComponent_div_0_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 19);
    ɵngcc0.ɵɵelement(1, "i", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r6.loadingStyleClass)("mkFontColor", ctx_r6.loadingColor);
} }
function BoxComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.done", function BoxComponent_div_0_Template_div_mkCollapseAnimation_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.removedDone($event); });
    ɵngcc0.ɵɵtemplate(1, BoxComponent_div_0_div_1_Template, 8, 9, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "div", 3);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.start", function BoxComponent_div_0_Template_div_mkCollapseAnimation_start_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onCollapseStart($event); })("mkCollapseAnimation.done", function BoxComponent_div_0_Template_div_mkCollapseAnimation_done_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onCollapseDone($event); });
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵtemplate(4, BoxComponent_div_0_ng_container_4_Template, 2, 0, "ng-container", 5);
    ɵngcc0.ɵɵtemplate(5, BoxComponent_div_0_ng_template_5_Template, 1, 0, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, BoxComponent_div_0_div_7_Template, 3, 3, "div", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, BoxComponent_div_0_div_8_Template, 2, 2, "div", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r3 = ɵngcc0.ɵɵreference(6);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("collapsed-box", ctx_r0.isCollapsed && !ctx_r0.isCollapsing)("box-solid", ctx_r0.isSolid);
    ɵngcc0.ɵɵproperty("mkColor", ctx_r0.boxColor)("ngClass", ctx_r0.styleClass)("mkCollapseAnimation", ctx_r0.remove);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.header || ctx_r0.boxHeaderDirective);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.contentStyleClass)("mkFontColor", ctx_r0.contentColor)("mkCollapseAnimation", ctx_r0.isCollapsed);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.boxHeaderDirective || ctx_r0.boxContentDirective || ctx_r0.boxFooterDirective || ctx_r0.boxToolsDirective)("ngIfElse", _r3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.footer || ctx_r0.boxFooterDirective);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isLoading);
} }
const _c15 = [[["mk-box-header"]], [["mk-box-tools"]], [["mk-box-content"]], "*", [["mk-box-footer"]]];
const _c16 = ["mk-box-header", "mk-box-tools", "mk-box-content", "*", "mk-box-footer"];
function BoxInfoComponent_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.headerStyleClass)("mkFontColor", ctx_r0.headerColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.header, " ");
} }
function BoxInfoComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵprojection(1, 1);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function BoxInfoComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2);
} }
function BoxInfoComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelement(1, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r4.progressWidth, "%");
    ɵngcc0.ɵɵproperty("mkColor", ctx_r4.progressBarBg);
} }
function BoxInfoComponent_span_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2, 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r5.footerStyleClass)("mkFontColor", ctx_r5.footerColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.footer, " ");
} }
const _c17 = [[["mk-box-header"]], [["mk-box-content"]], "*", [["mk-box-footer"]]];
const _c18 = ["mk-box-header", "mk-box-content", "*", "mk-box-footer"];
function BoxSmallComponent_h3_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h3", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.headerStyleClass)("mkFontColor", ctx_r0.headerColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.header, " ");
} }
function BoxSmallComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵprojection(1, 1);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function BoxSmallComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 2);
} }
function BoxSmallComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelement(1, "i", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r4.iconStyleClass)("mkFontColor", ctx_r4.iconColor);
} }
function BoxSmallComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 3);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2, 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r5.footerStyleClass)("mkFontColor", ctx_r5.footerColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.footer, " ");
} }
const _c19 = [[["mk-box-small-header"]], [["mk-box-small-content"]], "*", [["mk-box-small-footer"]]];
const _c20 = ["mk-box-small-header", "mk-box-small-content", "*", "mk-box-small-footer"];
const _c21 = ["toggleElement"];
function DropdownToggleComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function DropdownMenuComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function DropdownComponent_ng_template_0_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r5.dropdownToggleComponent.templateRef);
} }
function DropdownComponent_ng_template_0_ng_template_1_button_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r13.dropdownToggleComponent.templateRef);
} }
function DropdownComponent_ng_template_0_ng_template_1_button_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 9, 10);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵtemplate(3, DropdownComponent_ng_template_0_ng_template_1_button_0_ng_container_3_Template, 1, 1, "ng-container", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("mkColor", ctx_r11.buttonBackgroundColor)("ngClass", ctx_r11.buttonStyleClass);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r11.toggleText, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r11.dropdownToggleComponent);
} }
function DropdownComponent_ng_template_0_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DropdownComponent_ng_template_0_ng_template_1_button_0_Template, 4, 4, "button", 8);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.toggleText || ctx_r7.dropdownToggleComponent);
} }
function DropdownComponent_ng_template_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r8.dropdownMenuComponent.templateRef);
} }
function DropdownComponent_ng_template_0_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function DropdownComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵtemplate(0, DropdownComponent_ng_template_0_ng_container_0_Template, 1, 1, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(1, DropdownComponent_ng_template_0_ng_template_1_Template, 1, 1, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementStart(3, "ul", 5);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.start", function DropdownComponent_ng_template_0_Template_ul_mkCollapseAnimation_start_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onCollapseStart($event); })("mkCollapseAnimation.done", function DropdownComponent_ng_template_0_Template_ul_mkCollapseAnimation_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.onCollapseDone($event); });
    ɵngcc0.ɵɵtemplate(4, DropdownComponent_ng_template_0_ng_container_4_Template, 1, 1, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(5, DropdownComponent_ng_template_0_ng_template_5_Template, 1, 0, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r6 = ɵngcc0.ɵɵreference(2);
    const _r9 = ɵngcc0.ɵɵreference(6);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.dropdownToggleComponent && ctx_r1.dropdownToggleComponent.toggleElement)("ngIfElse", _r6);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.contentStyleClass)("mkCollapseAnimation", ctx_r1.isCollapsed);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.dropdownMenuComponent)("ngIfElse", _r9);
} }
function DropdownComponent_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DropdownComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵtemplate(1, DropdownComponent_div_2_ng_container_1_Template, 1, 0, "ng-container", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r2.styleClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function DropdownComponent_ng_template_3_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DropdownComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DropdownComponent_ng_template_3_ng_container_0_Template, 1, 0, "ng-container", 13);
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function InputGroupComponent_label_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "label");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.label, " ");
} }
function InputGroupComponent_div_2_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2, 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.addonLeft, " ");
} }
function InputGroupComponent_div_2_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵprojection(2, 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.addonRight, " ");
} }
function InputGroupComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵtemplate(1, InputGroupComponent_div_2_span_1_Template, 3, 1, "span", 5);
    ɵngcc0.ɵɵprojection(2, 1);
    ɵngcc0.ɵɵtemplate(3, InputGroupComponent_div_2_span_3_Template, 3, 1, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.addonLeft || ctx_r1.inputGroupAddonLeftDirective);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.addonRight || ctx_r1.inputGroupAddonRightDirective);
} }
function InputGroupComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0, 4);
} }
const _c22 = [[["mk-input-group-label"]], [["mk-input-group-content"]], [["mk-input-group-addon-left"]], [["mk-input-group-addon-right"]], [["mk-input-group-content"]]];
const _c23 = ["mk-input-group-label", "mk-input-group-content", "mk-input-group-addon-left", "mk-input-group-addon-right", "mk-input-group-content"];
function TabHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function TabContentComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function TabComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function TabsHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function TabsComponent_li_2_a_1_2_ng_template_0_Template(rf, ctx) { }
function TabsComponent_li_2_a_1_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TabsComponent_li_2_a_1_2_ng_template_0_Template, 0, 0, "ng-template", 9);
} if (rf & 2) {
    const tab_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", tab_r3.tabHeaderComponent.templateRef);
} }
function TabsComponent_li_2_a_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "a", 7);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, TabsComponent_li_2_a_1_2_Template, 1, 1, undefined, 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("mkTabToggle", tab_r3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", tab_r3.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !tab_r3.header && tab_r3.tabHeaderComponent);
} }
function TabsComponent_li_2_ng_template_2_1_ng_template_0_Template(rf, ctx) { }
function TabsComponent_li_2_ng_template_2_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TabsComponent_li_2_ng_template_2_1_ng_template_0_Template, 0, 0, "ng-template", 9);
} if (rf & 2) {
    const tab_r3 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", tab_r3.tabHeaderComponent.templateRef);
} }
function TabsComponent_li_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵtemplate(1, TabsComponent_li_2_ng_template_2_1_Template, 1, 1, undefined, 8);
} if (rf & 2) {
    const tab_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵtextInterpolate1(" ", tab_r3.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !tab_r3.header && tab_r3.tabHeaderComponent);
} }
function TabsComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 4);
    ɵngcc0.ɵɵtemplate(1, TabsComponent_li_2_a_1_Template, 3, 3, "a", 5);
    ɵngcc0.ɵɵtemplate(2, TabsComponent_li_2_ng_template_2_Template, 2, 2, "ng-template", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r3 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("active", tab_r3.isActive);
    ɵngcc0.ɵɵproperty("mkColor", tab_r3.tabColor || ctx_r0.tabsColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !tab_r3.isDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", tab_r3.isDisabled);
} }
function TabsComponent_li_3_2_ng_template_0_Template(rf, ctx) { }
function TabsComponent_li_3_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TabsComponent_li_3_2_ng_template_0_Template, 0, 0, "ng-template", 9);
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r14.tabsHeaderComponent.templateRef);
} }
function TabsComponent_li_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, TabsComponent_li_3_2_Template, 1, 1, undefined, 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.headerStyleClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.tabsHeaderComponent);
} }
function TabsComponent_div_5_1_ng_template_0_Template(rf, ctx) { }
function TabsComponent_div_5_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TabsComponent_div_5_1_ng_template_0_Template, 0, 0, "ng-template", 9);
} if (rf & 2) {
    const tab_r16 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", tab_r16.templateRef);
} }
function TabsComponent_div_5_2_ng_template_0_Template(rf, ctx) { }
function TabsComponent_div_5_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TabsComponent_div_5_2_ng_template_0_Template, 0, 0, "ng-template", 9);
} if (rf & 2) {
    const tab_r16 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", tab_r16.tabContentComponent.templateRef);
} }
function TabsComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtemplate(1, TabsComponent_div_5_1_Template, 1, 1, undefined, 8);
    ɵngcc0.ɵɵtemplate(2, TabsComponent_div_5_2_Template, 1, 1, undefined, 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tab_r16 = ctx.$implicit;
    ɵngcc0.ɵɵclassProp("active", tab_r16.isActive);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !tab_r16.tabContentComponent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", tab_r16.tabContentComponent);
} }
class RoutingService {
    constructor(router) {
        this.router = router;
        this.onChange = new BehaviorSubject(undefined);
        this.events = new BehaviorSubject(undefined);
        this.init();
    }
    static createUrl(route) {
        const url = route.url.map(urlSegment => urlSegment.toString()).join('/');
        return url;
    }
    static isChildrenSelfRoute(route) {
        var _a, _b;
        let test = false;
        (_b = (_a = route === null || route === void 0 ? void 0 : route.routeConfig) === null || _a === void 0 ? void 0 : _a.children) === null || _b === void 0 ? void 0 : _b.forEach(child => {
            if (child.path === '' && (child.component || child.loadChildren)) {
                test = true;
            }
        });
        return test;
    }
    static createBreadcrumb(route, url) {
        var _a, _b, _c, _d;
        let isUrl = true;
        if (route.children.length !== 0 && ((_b = (_a = route === null || route === void 0 ? void 0 : route.firstChild) === null || _a === void 0 ? void 0 : _a.routeConfig) === null || _b === void 0 ? void 0 : _b.path)) {
            if (url !== '/' && !((_c = route === null || route === void 0 ? void 0 : route.routeConfig) === null || _c === void 0 ? void 0 : _c.loadChildren)
                && !((_d = route === null || route === void 0 ? void 0 : route.routeConfig) === null || _d === void 0 ? void 0 : _d.component) && !RoutingService.isChildrenSelfRoute(route)) {
                isUrl = false;
            }
        }
        return {
            data: route.data,
            params: route.params,
            url: isUrl ? url : null
        };
    }
    init() {
        this.router.events.subscribe(routeEvent => {
            var _a;
            // https://github.com/angular/angular/issues/17473: event not fired anymore on load for routed component.
            if (routeEvent instanceof NavigationEnd) {
                this.events.next(routeEvent);
                let route = this.router.routerState.root.snapshot;
                let tmpUrl = '';
                let url = '';
                let rootRoot = true;
                const paths = [];
                while (route.children.length) {
                    route = route.firstChild || route;
                    tmpUrl = `/${RoutingService.createUrl(route)}`;
                    if (route.outlet !== PRIMARY_OUTLET || (!((_a = route === null || route === void 0 ? void 0 : route.routeConfig) === null || _a === void 0 ? void 0 : _a.path) && !rootRoot)) {
                        continue;
                    }
                    rootRoot = false;
                    if (route.params && route.data) {
                        for (const key in route.params) {
                            if (!key) {
                                continue;
                            }
                            if (route.data.hasOwnProperty('title')) {
                                route.data.title = route.data.title.replace(`:${key}`, route.params[key]);
                                route.data.title = route.data.title.replace(`:${key}`, route.params[key]);
                            }
                            if (route.data.hasOwnProperty('breadcrumbs')) {
                                route.data.breadcrumbs = route.data.breadcrumbs.replace(`:${key}`, route.params[key]);
                            }
                            if (route.data.hasOwnProperty('description')) {
                                route.data.description = route.data.description.replace(`:${key}`, route.params[key]);
                            }
                        }
                    }
                    if (tmpUrl === '/') {
                        paths.push(RoutingService.createBreadcrumb(route, tmpUrl));
                    }
                    else {
                        url += tmpUrl;
                        paths.push(RoutingService.createBreadcrumb(route, url));
                    }
                }
                this.onChange.next(paths);
            }
        });
    }
}
RoutingService.ɵfac = function RoutingService_Factory(t) { return new (t || RoutingService)(ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
RoutingService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RoutingService, factory: RoutingService.ɵfac });
RoutingService.ctorParameters = () => [
    { type: Router }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RoutingService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Router }]; }, null); })();

class BreadcrumbsComponent {
    constructor(routingService, changeDetectorRef) {
        this.routingService = routingService;
        this.changeDetectorRef = changeDetectorRef;
        this.homeIcon = 'fa fa-home';
    }
    ngOnInit() {
        this.subscription = this.routingService.onChange.subscribe(paths => {
            this.breadcrumbs = paths;
        });
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
}
BreadcrumbsComponent.ɵfac = function BreadcrumbsComponent_Factory(t) { return new (t || BreadcrumbsComponent)(ɵngcc0.ɵɵdirectiveInject(RoutingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
BreadcrumbsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BreadcrumbsComponent, selectors: [["mk-breadcrumbs"]], inputs: { homeIcon: "homeIcon" }, decls: 2, vars: 1, consts: [[1, "breadcrumb"], [3, "active", 4, "ngFor", "ngForOf"], [3, "routerLink", 4, "ngIf", "ngIfElse"], ["noLink", ""], [3, "routerLink"], [3, "ngClass", 4, "ngIf"], [3, "ngIf"], [3, "ngClass"]], template: function BreadcrumbsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ol", 0);
        ɵngcc0.ɵɵtemplate(1, BreadcrumbsComponent_li_1_Template, 4, 4, "li", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.breadcrumbs);
    } }, directives: [ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc1.RouterLinkWithHref, ɵngcc2.NgClass], styles: [".breadcrumb[_ngcontent-%COMP%]{background:transparent;border-radius:2px;float:right;font-size:12px;margin-bottom:0;margin-top:0;padding:7px 5px;position:absolute;right:10px;top:15px}.breadcrumb[_ngcontent-%COMP%] > li[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{color:#444;display:inline-block;text-decoration:none}.breadcrumb[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   .fa[_ngcontent-%COMP%], .breadcrumb[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   .glyphicon[_ngcontent-%COMP%], .breadcrumb[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]   .ion[_ngcontent-%COMP%]{margin-right:5px}"] });
BreadcrumbsComponent.ctorParameters = () => [
    { type: RoutingService },
    { type: ChangeDetectorRef }
];
BreadcrumbsComponent.propDecorators = {
    homeIcon: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbsComponent, [{
        type: Component,
        args: [{
                selector: 'mk-breadcrumbs',
                template: "<ol class=\"breadcrumb\">\n  <li *ngFor=\"let breadcrumb of breadcrumbs; let first = first; let last = last\" [class.active]=\"last || !breadcrumb.url\">\n    <a *ngIf=\"breadcrumb.url && !last; else noLink\" [routerLink]=\"breadcrumb.url\">\n      <i *ngIf=\"first\" ngClass=\"{{homeIcon}}\"></i>\n      <ng-template [ngIf]=\"breadcrumb.data.breadcrumbs\">{{breadcrumb.data.breadcrumbs}}</ng-template>\n      <ng-template [ngIf]=\"breadcrumb.data.title\">{{breadcrumb.data.title}}</ng-template>\n    </a>\n    <ng-template #noLink>\n      <i *ngIf=\"first\" ngClass=\"{{homeIcon}}\"></i>\n      <ng-template [ngIf]=\"breadcrumb.data.breadcrumbs\">{{breadcrumb.data.breadcrumbs}}</ng-template>\n      <ng-template [ngIf]=\"breadcrumb.data.title\">{{breadcrumb.data.title}}</ng-template>\n    </ng-template>\n  </li>\n</ol>\n",
                styles: [".breadcrumb{background:transparent;border-radius:2px;float:right;font-size:12px;margin-bottom:0;margin-top:0;padding:7px 5px;position:absolute;right:10px;top:15px}.breadcrumb>li>a{color:#444;display:inline-block;text-decoration:none}.breadcrumb>li .fa,.breadcrumb>li .glyphicon,.breadcrumb>li .ion{margin-right:5px}"]
            }]
    }], function () { return [{ type: RoutingService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { homeIcon: [{
            type: Input
        }] }); })();

class BreadcrumbsModule {
}
BreadcrumbsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BreadcrumbsModule });
BreadcrumbsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BreadcrumbsModule_Factory(t) { return new (t || BreadcrumbsModule)(); }, imports: [[CommonModule, RouterModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbsModule, { declarations: function () { return [BreadcrumbsComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [BreadcrumbsComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreadcrumbsModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                exports: [BreadcrumbsComponent],
                declarations: [BreadcrumbsComponent]
            }]
    }], null, null); })();

class LayoutState {
    constructor(config) {
        this.isSidebarLeftCollapsed = false;
        this.isSidebarLeftExpandOnOver = false;
        this.isSidebarLeftMouseOver = false;
        this.isSidebarLeftMini = true;
        this.sidebarRightSkin = 'dark';
        this.isSidebarRightCollapsed = true;
        this.isSidebarRightOverContent = true;
        this.layout = 'normal';
        this.sidebarLeftMenu = [];
        this.sidebarLeftMenuActiveUrl = '';
        this.skin = 'blue';
        Object.assign(this, config);
    }
}

class LayoutStore {
    constructor(layoutConfig) {
        this.initialLayoutState = new LayoutState(layoutConfig);
        this.state = new BehaviorSubject(this.initialLayoutState);
        this.layoutState = this.state.asObservable();
    }
    get windowInnerHeight() {
        return this.layoutState.pipe(pluck('windowInnerHeight'), distinctUntilChanged());
    }
    get windowInnerWidth() {
        return this.layoutState.pipe(pluck('windowInnerWidth'), distinctUntilChanged());
    }
    get isSidebarLeftCollapsed() {
        return this.layoutState.pipe(pluck('isSidebarLeftCollapsed'), distinctUntilChanged());
    }
    get isSidebarLeftExpandOnOver() {
        return this.layoutState.pipe(pluck('isSidebarLeftExpandOnOver'), distinctUntilChanged());
    }
    get isSidebarLeftMouseOver() {
        return this.layoutState.pipe(pluck('isSidebarLeftMouseOver'), distinctUntilChanged());
    }
    get isSidebarLeftMini() {
        return this.layoutState.pipe(pluck('isSidebarLeftMini'), distinctUntilChanged());
    }
    get sidebarRightSkin() {
        return this.layoutState.pipe(pluck('sidebarRightSkin'), distinctUntilChanged());
    }
    get isSidebarRightCollapsed() {
        return this.layoutState.pipe(pluck('isSidebarRightCollapsed'), distinctUntilChanged());
    }
    get isSidebarRightOverContent() {
        return this.layoutState.pipe(pluck('isSidebarRightOverContent'), distinctUntilChanged());
    }
    get sidebarLeftMenu() {
        return this.layoutState.pipe(pluck('sidebarLeftMenu'), distinctUntilChanged());
    }
    get sidebarLeftMenuActiveUrl() {
        return this.layoutState.pipe(pluck('sidebarLeftMenuActiveUrl'), distinctUntilChanged());
    }
    get sidebarLeftElementHeight() {
        return this.layoutState.pipe(pluck('sidebarLeftElementHeight'), distinctUntilChanged());
    }
    get layout() {
        return this.layoutState.pipe(pluck('layout'), distinctUntilChanged());
    }
    get skin() {
        return this.layoutState.pipe(pluck('skin'), distinctUntilChanged());
    }
    sidebarLeftCollapsed(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftCollapsed: value }));
    }
    sidebarLeftExpandOnOver(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftExpandOnOver: value }));
    }
    setSidebarLeftElementHeight(value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftElementHeight: value }));
    }
    setSidebarRightSkin(value) {
        this.state.next(Object.assign(this.state.value, { sidebarRightSkin: value }));
    }
    sidebarLeftMouseOver(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftMouseOver: value }));
    }
    sidebarLeftMini(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftMini: value }));
    }
    sidebarRightCollapsed(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarRightCollapsed: value }));
    }
    sidebarRightOverContent(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarRightOverContent: value }));
    }
    setSidebarLeftMenu(value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftMenu: value }));
    }
    setSidebarLeftMenuActiveUrl(value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftMenuActiveUrl: value }));
    }
    setLayout(value) {
        this.state.next(Object.assign(this.state.value, { layout: value }));
    }
    setSkin(value) {
        this.state.next(Object.assign(this.state.value, { skin: value }));
    }
    setWindowInnerHeight(value) {
        this.state.next(Object.assign(this.state.value, { windowInnerHeight: value }));
    }
    setWindowInnerWidth(value) {
        this.state.next(Object.assign(this.state.value, { windowInnerWidth: value }));
    }
}

class SidebarRightService {
    get scrollHeight() {
        return this.elementRef ? this.elementRef.nativeElement.scrollHeight : 0;
    }
}
SidebarRightService.ɵfac = function SidebarRightService_Factory(t) { return new (t || SidebarRightService)(); };
SidebarRightService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SidebarRightService, factory: SidebarRightService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SidebarRightService, [{
        type: Injectable
    }], null, null); })();

class HeaderService {
    get offsetHeight() {
        return this.elementRef ? this.elementRef.nativeElement.offsetHeight : 0;
    }
}
HeaderService.ɵfac = function HeaderService_Factory(t) { return new (t || HeaderService)(); };
HeaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HeaderService, factory: HeaderService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderService, [{
        type: Injectable
    }], null, null); })();

class FooterService {
    get offsetHeight() {
        return this.elementRef ? this.elementRef.nativeElement.offsetHeight : 0;
    }
}
FooterService.ɵfac = function FooterService_Factory(t) { return new (t || FooterService)(); };
FooterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FooterService, factory: FooterService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterService, [{
        type: Injectable
    }], null, null); })();

function throttle(callback, delay) {
    let timeout = 0;
    return (...args) => {
        if (!timeout) {
            timeout = setTimeout(() => {
                // @ts-ignore
                callback.call(this, ...args);
                timeout = 0;
            }, delay);
        }
    };
}
function removeSubscriptions(subscriptions) {
    if (subscriptions) {
        subscriptions.forEach((subscription) => {
            subscription.unsubscribe();
        });
    }
    return [];
}
function removeListeners(listeners = []) {
    if (listeners) {
        listeners.forEach((listener) => {
            listener();
        });
    }
    return [];
}

class ContentComponent {
    constructor(layoutStore, routingService, titleService, elementRef, changeDetectorRef, sidebarRightService, headerService, footerService, router) {
        this.layoutStore = layoutStore;
        this.routingService = routingService;
        this.titleService = titleService;
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this.sidebarRightService = sidebarRightService;
        this.headerService = headerService;
        this.footerService = footerService;
        this.router = router;
        this.navigationEnd = false;
        this.subscriptions = [];
    }
    ngOnInit() {
        this.titleTag = this.titleService.getTitle();
        this.subscriptions.push(this.routingService.onChange.subscribe(value => {
            if (value && value[value.length - 1] && value[value.length - 1].data) {
                const data = value[value.length - 1].data;
                this.titleService.setTitle(this.getTitle(data.title) || '');
                this.header = data.title;
                this.description = data.description;
            }
            this.changeDetectorRef.markForCheck();
        }));
        this.subscriptions.push(this.router.events.subscribe(routeEvent => {
            if (routeEvent instanceof NavigationStart) {
                this.navigationEnd = false;
            }
            if (routeEvent instanceof NavigationEnd) {
                this.navigationEnd = true;
                this.setContentMinHeight();
            }
        }));
        this.subscriptions.push(this.layoutStore.sidebarLeftElementHeight.subscribe(value => {
            this.sidebarLeftHeight = value;
            this.setContentMinHeight();
        }));
        this.subscriptions.push(this.layoutStore.layout.subscribe(value => {
            this.layout = value;
            this.setContentMinHeight();
        }));
        this.subscriptions.push(this.layoutStore.windowInnerHeight.subscribe(value => {
            this.windowInnerHeight = value;
            this.setContentMinHeight();
        }));
        this.heightStyle = this.windowInnerHeight;
    }
    ngOnDestroy() {
        this.subscriptions = removeSubscriptions(this.subscriptions);
    }
    get scrollHeight() {
        return this.contentInnerElement.nativeElement.scrollHeight;
    }
    getTitle(title) {
        return title ? `${title} - ${this.titleTag}` : this.titleTag;
    }
    setContentMinHeight() {
        if (this.navigationEnd) {
            let heightStyle = 0;
            const headerFooterOffsetHeight = this.headerService.offsetHeight + this.footerService.offsetHeight;
            if (this.layout === 'fixed' && this.windowInnerHeight) {
                heightStyle = this.windowInnerHeight - this.footerService.offsetHeight;
            }
            else if (this.windowInnerHeight && this.sidebarLeftHeight) {
                const sidebarRight = this.sidebarRightService.scrollHeight ?
                    this.sidebarRightService.scrollHeight - this.headerService.offsetHeight : 0;
                heightStyle = Math.max(this.windowInnerHeight - headerFooterOffsetHeight, this.sidebarLeftHeight - this.headerService.offsetHeight, sidebarRight);
            }
            if (heightStyle && heightStyle !== this.heightStyle) {
                if (this.scrollHeight > heightStyle) {
                    heightStyle = 0;
                }
                this.heightStyle = heightStyle;
                this.changeDetectorRef.detectChanges();
            }
        }
    }
}
ContentComponent.ɵfac = function ContentComponent_Factory(t) { return new (t || ContentComponent)(ɵngcc0.ɵɵdirectiveInject(LayoutStore), ɵngcc0.ɵɵdirectiveInject(RoutingService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Title), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(SidebarRightService), ɵngcc0.ɵɵdirectiveInject(HeaderService), ɵngcc0.ɵɵdirectiveInject(FooterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router)); };
ContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ContentComponent, selectors: [["mk-layout-content"]], viewQuery: function ContentComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentInnerElement = _t.first);
    } }, ngContentSelectors: _c2, decls: 8, vars: 3, consts: [[1, "content-wrapper"], [1, "content-inner"], ["contentInnerElement", ""], ["class", "content-header", 4, "ngIf"], [1, "content"], [1, "content-header"], [4, "ngIf"]], template: function ContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c1);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1, 2);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵtemplate(4, ContentComponent_section_4_Template, 5, 2, "section", 3);
        ɵngcc0.ɵɵprojection(5, 1);
        ɵngcc0.ɵɵelementStart(6, "section", 4);
        ɵngcc0.ɵɵprojection(7, 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("min-height", ctx.heightStyle, "px");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header || ctx.description);
    } }, directives: [ɵngcc2.NgIf, BreadcrumbsComponent], styles: ["[_nghost-%COMP%]{display:block}.content-wrapper[_ngcontent-%COMP%]{position:relative}"], changeDetection: 0 });
ContentComponent.ctorParameters = () => [
    { type: LayoutStore },
    { type: RoutingService },
    { type: Title },
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: SidebarRightService },
    { type: HeaderService },
    { type: FooterService },
    { type: Router }
];
ContentComponent.propDecorators = {
    contentInnerElement: [{ type: ViewChild, args: ['contentInnerElement', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-content',
                template: "<div class=\"content-wrapper\" [style.min-height.px]=\"heightStyle\">\n  <div #contentInnerElement class=\"content-inner\">\n    <ng-content select=\"[mk-layout-content-before-header]\"></ng-content>\n    <section *ngIf=\"header || description\" class=\"content-header\">\n      <h1>\n        {{header}}\n        <small *ngIf=\"description\">{{description}}</small>\n      </h1>\n      <mk-breadcrumbs></mk-breadcrumbs>\n    </section>\n    <ng-content select=\"[mk-layout-content-after-header]\"></ng-content>\n    <section class=\"content\">\n      <ng-content></ng-content>\n    </section>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block}.content-wrapper{position:relative}"]
            }]
    }], function () { return [{ type: LayoutStore }, { type: RoutingService }, { type: ɵngcc3.Title }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: SidebarRightService }, { type: HeaderService }, { type: FooterService }, { type: ɵngcc1.Router }]; }, { contentInnerElement: [{
            type: ViewChild,
            args: ['contentInnerElement', { static: true }]
        }] }); })();

class ContentModule {
}
ContentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ContentModule });
ContentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ContentModule_Factory(t) { return new (t || ContentModule)(); }, imports: [[CommonModule, RouterModule, BreadcrumbsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ContentModule, { declarations: function () { return [ContentComponent]; }, imports: function () { return [CommonModule, RouterModule, BreadcrumbsModule]; }, exports: function () { return [ContentComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, BreadcrumbsModule],
                exports: [ContentComponent],
                declarations: [ContentComponent]
            }]
    }], null, null); })();

class FooterLeftComponent {
}
FooterLeftComponent.ɵfac = function FooterLeftComponent_Factory(t) { return new (t || FooterLeftComponent)(); };
FooterLeftComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FooterLeftComponent, selectors: [["mk-layout-footer-left"]], viewQuery: function FooterLeftComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function FooterLeftComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, FooterLeftComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
FooterLeftComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterLeftComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-footer-left',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class FooterRightComponent {
}
FooterRightComponent.ɵfac = function FooterRightComponent_Factory(t) { return new (t || FooterRightComponent)(); };
FooterRightComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FooterRightComponent, selectors: [["mk-layout-footer-right"]], viewQuery: function FooterRightComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function FooterRightComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, FooterRightComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
FooterRightComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRightComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-footer-right',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class FooterComponent {
    constructor(elementRef, footerService) {
        this.elementRef = elementRef;
        this.footerService = footerService;
    }
    ngOnInit() {
        this.footerService.elementRef = this.elementRef;
    }
}
FooterComponent.ɵfac = function FooterComponent_Factory(t) { return new (t || FooterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FooterService)); };
FooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FooterComponent, selectors: [["mk-layout-footer"]], contentQueries: function FooterComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, FooterLeftComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, FooterRightComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerLeftComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerRightComponent = _t.first);
    } }, decls: 4, vars: 2, consts: [[1, "main-footer"], [1, "pull-right", "hidden-xs"], [4, "ngIf"], [3, "ngTemplateOutlet"]], template: function FooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "footer", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, FooterComponent_2_Template, 1, 1, undefined, 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, FooterComponent_3_Template, 1, 1, undefined, 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footerRightComponent);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footerLeftComponent);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet], styles: ["[_nghost-%COMP%]{display:block}"] });
FooterComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: FooterService }
];
FooterComponent.propDecorators = {
    footerLeftComponent: [{ type: ContentChild, args: [FooterLeftComponent,] }],
    footerRightComponent: [{ type: ContentChild, args: [FooterRightComponent,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-footer',
                template: "<footer class=\"main-footer\">\n  <div class=\"pull-right hidden-xs\">\n    <ng-template *ngIf=\"footerRightComponent\" [ngTemplateOutlet]=\"footerRightComponent.templateRef\"></ng-template>\n  </div>\n  <ng-template *ngIf=\"footerLeftComponent\" [ngTemplateOutlet]=\"footerLeftComponent.templateRef\"></ng-template>\n</footer>\n",
                styles: [":host{display:block}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FooterService }]; }, { footerLeftComponent: [{
            type: ContentChild,
            args: [FooterLeftComponent]
        }], footerRightComponent: [{
            type: ContentChild,
            args: [FooterRightComponent]
        }] }); })();

class FooterModule {
}
FooterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FooterModule });
FooterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FooterModule_Factory(t) { return new (t || FooterModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FooterModule, { declarations: function () { return [FooterComponent, FooterLeftComponent, FooterRightComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FooterComponent, FooterLeftComponent, FooterRightComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [FooterComponent, FooterLeftComponent, FooterRightComponent],
                declarations: [FooterComponent, FooterLeftComponent, FooterRightComponent]
            }]
    }], null, null); })();

class HeaderLogoComponent {
}
HeaderLogoComponent.ɵfac = function HeaderLogoComponent_Factory(t) { return new (t || HeaderLogoComponent)(); };
HeaderLogoComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderLogoComponent, selectors: [["mk-layout-header-logo"]], viewQuery: function HeaderLogoComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function HeaderLogoComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, HeaderLogoComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
HeaderLogoComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderLogoComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-header-logo',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class HeaderLogoMiniComponent {
}
HeaderLogoMiniComponent.ɵfac = function HeaderLogoMiniComponent_Factory(t) { return new (t || HeaderLogoMiniComponent)(); };
HeaderLogoMiniComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderLogoMiniComponent, selectors: [["mk-layout-header-logo-mini"]], viewQuery: function HeaderLogoMiniComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function HeaderLogoMiniComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, HeaderLogoMiniComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
HeaderLogoMiniComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderLogoMiniComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-header-logo-mini',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class HeaderComponent {
    constructor(layoutStore, ngZone, renderer2, elementRef, headerService) {
        this.layoutStore = layoutStore;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.elementRef = elementRef;
        this.headerService = headerService;
        this.isSidebarLeftToggle = true;
        this.isSidebarRightToggle = true;
        this.logoLink = '/';
        this.listeners = [];
        this.subscriptions = [];
    }
    ngAfterViewInit() {
        this.headerService.elementRef = this.headerElement;
        if (this.sidebarLeftToggleElement) {
            this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe(value => {
                this.isSidebarLeftCollapsed = value;
            }));
            this.ngZone.runOutsideAngular(() => {
                var _a;
                this.listeners.push(this.renderer2.listen((_a = this.sidebarLeftToggleElement) === null || _a === void 0 ? void 0 : _a.nativeElement, 'click', event => {
                    event.preventDefault();
                    this.layoutStore.sidebarLeftCollapsed(!this.isSidebarLeftCollapsed);
                }));
            });
        }
        if (this.sidebarRightToggleElement) {
            this.subscriptions.push(this.layoutStore.isSidebarRightCollapsed.subscribe(value => {
                this.isSidebarRightCollapsed = value;
            }));
            this.ngZone.runOutsideAngular(() => {
                var _a;
                this.listeners.push(this.renderer2.listen((_a = this.sidebarRightToggleElement) === null || _a === void 0 ? void 0 : _a.nativeElement, 'click', event => {
                    event.preventDefault();
                    this.layoutStore.sidebarRightCollapsed(!this.isSidebarRightCollapsed);
                }));
            });
        }
    }
    ngOnDestroy() {
        this.listeners = removeListeners(this.listeners);
        this.subscriptions = removeSubscriptions(this.subscriptions);
    }
}
HeaderComponent.ɵfac = function HeaderComponent_Factory(t) { return new (t || HeaderComponent)(ɵngcc0.ɵɵdirectiveInject(LayoutStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(HeaderService)); };
HeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderComponent, selectors: [["mk-layout-header"]], contentQueries: function HeaderComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderLogoComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderLogoMiniComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerLogoComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerLogoMiniComponent = _t.first);
    } }, viewQuery: function HeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c5, true);
        ɵngcc0.ɵɵviewQuery(_c6, true);
        ɵngcc0.ɵɵviewQuery(_c7, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidebarLeftToggleElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidebarRightToggleElement = _t.first);
    } }, inputs: { isSidebarLeftToggle: "isSidebarLeftToggle", isSidebarRightToggle: "isSidebarRightToggle", logoLink: "logoLink", sidebarLeftToggleIconClasses: "sidebarLeftToggleIconClasses", sidebarRightToggleIconClasses: "sidebarRightToggleIconClasses" }, ngContentSelectors: _c4, decls: 9, vars: 5, consts: [[1, "main-header"], ["headerElement", ""], [1, "logo", 3, "routerLink"], ["class", "logo-mini", 4, "ngIf"], ["class", "logo-lg", 4, "ngIf"], [1, "navbar", "navbar-static-top"], ["href", "#", 3, "class", 4, "ngIf"], ["class", "sidebar-right-toggle", 4, "ngIf"], [1, "logo-mini"], [3, "ngTemplateOutlet"], [1, "logo-lg"], ["href", "#"], ["sidebarLeftToggleElement", ""], [1, "sr-only"], [4, "ngIf"], [1, "sidebar-right-toggle"], ["sidebarRightToggleElement", ""]], template: function HeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "header", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "a", 2);
        ɵngcc0.ɵɵtemplate(3, HeaderComponent_span_3_Template, 2, 1, "span", 3);
        ɵngcc0.ɵɵtemplate(4, HeaderComponent_span_4_Template, 2, 1, "span", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "nav", 5);
        ɵngcc0.ɵɵtemplate(6, HeaderComponent_a_6_Template, 5, 4, "a", 6);
        ɵngcc0.ɵɵtemplate(7, HeaderComponent_div_7_Template, 4, 2, "div", 7);
        ɵngcc0.ɵɵprojection(8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("routerLink", ctx.logoLink);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.headerLogoMiniComponent);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.headerLogoComponent);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSidebarLeftToggle);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSidebarRightToggle);
    } }, directives: [ɵngcc1.RouterLinkWithHref, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet], styles: ["[_nghost-%COMP%]{display:block}.sidebar-right-toggle[_ngcontent-%COMP%]{float:right}.sidebar-right-toggle[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{cursor:pointer;display:block;line-height:20px;padding:15px}.sidebar-toggle-custom-icon[_ngcontent-%COMP%]:before{content:\"\"}"] });
HeaderComponent.ctorParameters = () => [
    { type: LayoutStore },
    { type: NgZone },
    { type: Renderer2 },
    { type: ElementRef },
    { type: HeaderService }
];
HeaderComponent.propDecorators = {
    isSidebarLeftToggle: [{ type: Input }],
    sidebarLeftToggleIconClasses: [{ type: Input }],
    isSidebarRightToggle: [{ type: Input }],
    sidebarRightToggleIconClasses: [{ type: Input }],
    logoLink: [{ type: Input }],
    headerLogoComponent: [{ type: ContentChild, args: [HeaderLogoComponent,] }],
    headerLogoMiniComponent: [{ type: ContentChild, args: [HeaderLogoMiniComponent,] }],
    headerElement: [{ type: ViewChild, args: ['headerElement', { static: true },] }],
    sidebarLeftToggleElement: [{ type: ViewChild, args: ['sidebarLeftToggleElement',] }],
    sidebarRightToggleElement: [{ type: ViewChild, args: ['sidebarRightToggleElement',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-header',
                template: "<header #headerElement class=\"main-header\">\n  <a [routerLink]=\"logoLink\" class=\"logo\">\n    <span class=\"logo-mini\" *ngIf=\"headerLogoMiniComponent\"><ng-template [ngTemplateOutlet]=\"headerLogoMiniComponent.templateRef\"></ng-template></span>\n    <span class=\"logo-lg\" *ngIf=\"headerLogoComponent\"><ng-template [ngTemplateOutlet]=\"headerLogoComponent.templateRef\"></ng-template></span>\n  </a>\n  <nav class=\"navbar navbar-static-top\">\n    <a *ngIf=\"isSidebarLeftToggle\" #sidebarLeftToggleElement href=\"#\" class=\"sidebar-toggle {{sidebarLeftToggleIconClasses ? 'sidebar-toggle-custom-icon' : ''}}\">\n      <span class=\"sr-only\">Toggle navigation</span>\n      <ng-container *ngIf=\"sidebarLeftToggleIconClasses\">\n        <i [class]=\"sidebarLeftToggleIconClasses\"></i>\n      </ng-container>\n    </a>\n    <div *ngIf=\"isSidebarRightToggle\" class=\"sidebar-right-toggle\">\n      <a #sidebarRightToggleElement href=\"#\">\n        <i [class]=\"sidebarRightToggleIconClasses ? sidebarRightToggleIconClasses : 'fa fa-gears'\"></i>\n      </a>\n    </div>\n    <ng-content></ng-content>\n  </nav>\n</header>\n",
                styles: [":host{display:block}.sidebar-right-toggle{float:right}.sidebar-right-toggle a{cursor:pointer;display:block;line-height:20px;padding:15px}.sidebar-toggle-custom-icon:before{content:\"\"}"]
            }]
    }], function () { return [{ type: LayoutStore }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: HeaderService }]; }, { isSidebarLeftToggle: [{
            type: Input
        }], isSidebarRightToggle: [{
            type: Input
        }], logoLink: [{
            type: Input
        }], sidebarLeftToggleIconClasses: [{
            type: Input
        }], sidebarRightToggleIconClasses: [{
            type: Input
        }], headerLogoComponent: [{
            type: ContentChild,
            args: [HeaderLogoComponent]
        }], headerLogoMiniComponent: [{
            type: ContentChild,
            args: [HeaderLogoMiniComponent]
        }], headerElement: [{
            type: ViewChild,
            args: ['headerElement', { static: true }]
        }], sidebarLeftToggleElement: [{
            type: ViewChild,
            args: ['sidebarLeftToggleElement']
        }], sidebarRightToggleElement: [{
            type: ViewChild,
            args: ['sidebarRightToggleElement']
        }] }); })();

class HeaderModule {
}
HeaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HeaderModule });
HeaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HeaderModule_Factory(t) { return new (t || HeaderModule)(); }, imports: [[CommonModule, RouterModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HeaderModule, { declarations: function () { return [HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent]; }, imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                exports: [HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent],
                declarations: [HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent]
            }]
    }], null, null); })();

class CollapseAnimationDirective {
    constructor(elementRef, ngZone, renderer2) {
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.collapseAnimationDuration = 350;
        // tslint:disable-next-line:no-output-rename
        this.startEventEmitter = new EventEmitter();
        // tslint:disable-next-line:no-output-rename
        this.doneEventEmitter = new EventEmitter();
        this.firstStart = true;
        this.isCollapsed = false;
        this.lastIsCollapsed = false;
        this.transitioning = false;
    }
    set _isCollapsed(value) {
        this.lastIsCollapsed = this.isCollapsed;
        this.isCollapsed = value;
        if (!this.firstStart) {
            this.emit('start');
            if (value) {
                this.collapse();
            }
            else if (!value) {
                this.unCollapse();
            }
        }
    }
    ngOnInit() {
        if (this.collapseAnimationDuration && this.collapseAnimationDuration !== 350) {
            this.renderer2.setStyle(this.elementRef.nativeElement, 'transition-duration', `${this.collapseAnimationDuration}ms`);
        }
        if (this.collapseAnimationTiming) {
            this.renderer2.setStyle(this.elementRef.nativeElement, 'transition-timing-function', this.collapseAnimationTiming);
        }
    }
    ngAfterContentInit() {
        this.emit('start');
        if (this.isCollapsed) {
            this.renderer2.setStyle(this.elementRef.nativeElement, 'display', 'none');
            this.renderer2.addClass(this.elementRef.nativeElement, 'collapsing');
        }
        this.emit('done');
        this.firstStart = false;
        this.subscriptions();
    }
    ngOnDestroy() {
        if (this.listener) {
            this.listener();
        }
    }
    subscriptions() {
        this.ngZone.runOutsideAngular(() => {
            this.listener = this.renderer2.listen(this.elementRef.nativeElement, 'transitionend', () => {
                if (!this.isCollapsed) {
                    this.renderer2.removeClass(this.elementRef.nativeElement, 'un-collapse');
                    this.renderer2.removeClass(this.elementRef.nativeElement, 'collapsing');
                }
                else {
                    this.renderer2.setStyle(this.elementRef.nativeElement, 'display', 'none');
                }
                requestAnimationFrame(() => {
                    this.renderer2.removeStyle(this.elementRef.nativeElement, 'height');
                    this.emit('done');
                    this.transitioning = false;
                });
            });
        });
    }
    unCollapse() {
        this.transitioning = true;
        this.renderer2.addClass(this.elementRef.nativeElement, 'un-collapse');
        this.renderer2.removeStyle(this.elementRef.nativeElement, 'display');
        this.renderer2.setStyle(this.elementRef.nativeElement, 'height', `${this.elementRef.nativeElement.scrollHeight}px`);
    }
    collapse() {
        requestAnimationFrame(() => {
            if (!this.transitioning) {
                this.renderer2.setStyle(this.elementRef.nativeElement, 'height', `${this.elementRef.nativeElement.offsetHeight}px`);
                this.renderer2.addClass(this.elementRef.nativeElement, 'collapsing');
            }
            this.transitioning = true;
            requestAnimationFrame(() => {
                this.renderer2.setStyle(this.elementRef.nativeElement, 'height', `0px`);
            });
        });
    }
    emit(phaseName) {
        const event = {
            element: this.elementRef.nativeElement,
            fromState: this.lastIsCollapsed === undefined ? 'void' : this.lastIsCollapsed ? '1' : '0',
            phaseName,
            toState: this.isCollapsed === undefined ? 'void' : this.isCollapsed ? '1' : '0',
            totalTime: this.collapseAnimationDuration,
            triggerName: 'mkCollapseAnimation'
        };
        if (phaseName === 'done') {
            this.doneEventEmitter.emit(event);
        }
        else if (phaseName === 'start') {
            this.startEventEmitter.emit(event);
        }
    }
}
CollapseAnimationDirective.ɵfac = function CollapseAnimationDirective_Factory(t) { return new (t || CollapseAnimationDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
CollapseAnimationDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CollapseAnimationDirective, selectors: [["", "mkCollapseAnimation", ""]], inputs: { collapseAnimationDuration: "collapseAnimationDuration", _isCollapsed: ["mkCollapseAnimation", "_isCollapsed"], collapseAnimationTiming: "collapseAnimationTiming" }, outputs: { startEventEmitter: "mkCollapseAnimation.start", doneEventEmitter: "mkCollapseAnimation.done" } });
CollapseAnimationDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: NgZone },
    { type: Renderer2 }
];
CollapseAnimationDirective.propDecorators = {
    collapseAnimationDuration: [{ type: Input }],
    collapseAnimationTiming: [{ type: Input }],
    _isCollapsed: [{ type: Input, args: ['mkCollapseAnimation',] }],
    startEventEmitter: [{ type: Output, args: ['mkCollapseAnimation.start',] }],
    doneEventEmitter: [{ type: Output, args: ['mkCollapseAnimation.done',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CollapseAnimationDirective, [{
        type: Directive,
        args: [{
                selector: '[mkCollapseAnimation]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { collapseAnimationDuration: [{
            type: Input
        }], startEventEmitter: [{
            type: Output,
            args: ['mkCollapseAnimation.start']
        }], doneEventEmitter: [{
            type: Output,
            args: ['mkCollapseAnimation.done']
        }], _isCollapsed: [{
            type: Input,
            args: ['mkCollapseAnimation']
        }], collapseAnimationTiming: [{
            type: Input
        }] }); })();

class AnimationsModule {
}
AnimationsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AnimationsModule });
AnimationsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AnimationsModule_Factory(t) { return new (t || AnimationsModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AnimationsModule, { declarations: [CollapseAnimationDirective], exports: [CollapseAnimationDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AnimationsModule, [{
        type: NgModule,
        args: [{
                exports: [CollapseAnimationDirective],
                declarations: [CollapseAnimationDirective]
            }]
    }], null, null); })();

class SidebarLeftToggleDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
SidebarLeftToggleDirective.ɵfac = function SidebarLeftToggleDirective_Factory(t) { return new (t || SidebarLeftToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SidebarLeftToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SidebarLeftToggleDirective, selectors: [["", "mkMenuToggle", ""]], inputs: { item: ["mkMenuToggle", "item"] } });
SidebarLeftToggleDirective.ctorParameters = () => [
    { type: ElementRef }
];
SidebarLeftToggleDirective.propDecorators = {
    item: [{ type: Input, args: ['mkMenuToggle',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SidebarLeftToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[mkMenuToggle]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { item: [{
            type: Input,
            args: ['mkMenuToggle']
        }] }); })();

class WrapperService {
}
WrapperService.ɵfac = function WrapperService_Factory(t) { return new (t || WrapperService)(); };
WrapperService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: WrapperService, factory: WrapperService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WrapperService, [{
        type: Injectable
    }], null, null); })();

class SidebarLeftComponent {
    constructor(changeDetectorRef, layoutStore, ngZone, renderer2, router, routingService, wrapperService, headerService) {
        this.changeDetectorRef = changeDetectorRef;
        this.layoutStore = layoutStore;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.router = router;
        this.routingService = routingService;
        this.wrapperService = wrapperService;
        this.headerService = headerService;
        this.isSidebarLeftMouseOver = false;
        this.collapsedItems = [];
        this.activatedItems = [];
        this.toggleListeners = [];
        this.listeners = [];
        this.itemsByIds = {};
        this.runningAnimations = 0;
        this.subscriptions = [];
        this.initialized = false;
    }
    ngOnInit() {
        this.subscriptions.push(this.layoutStore.sidebarLeftMenu.subscribe(value => {
            this.menu = value;
            this.monkeyPatchMenu(this.menu);
            if (this.initialized) {
                this.setMenuListeners(this.activeUrl);
                this.setSidebarListeners();
                this.setMenuTogglesListeners();
            }
            this.initialized = true;
        }));
        this.subscriptions.push(this.layoutStore.sidebarLeftMenuActiveUrl.subscribe(value => {
            this.activeUrl = value;
            this.setMenuListeners(value);
        }));
        this.subscriptions.push(this.routingService.events.subscribe(event => {
            if (event instanceof NavigationEnd) {
                this.activeUrl = event.url;
                this.setMenuListeners(event.url);
            }
        }));
        this.setSidebarListeners();
    }
    ngAfterViewInit() {
        this.setMenuTogglesListeners();
        this.checkMenuWithoutChildren();
    }
    ngOnDestroy() {
        this.subscriptions = removeSubscriptions(this.subscriptions);
        this.listeners = removeListeners(this.listeners);
        this.toggleListeners = removeListeners(this.toggleListeners);
    }
    setSidebarListeners() {
        this.subscriptions.push(this.layoutStore.layout.subscribe((value) => {
            this.layout = value;
            this.setSidebarHeight();
        }));
        this.subscriptions.push(this.layoutStore.windowInnerHeight.subscribe(value => {
            this.windowInnerHeight = value;
            this.setSidebarHeight();
        }));
        this.subscriptions.push(this.layoutStore.sidebarLeftMenu.subscribe(() => {
            this.changeDetectorRef.detectChanges();
        }));
        this.ngZone.runOutsideAngular(() => {
            this.listeners.push(this.renderer2.listen(this.sidebarElement.nativeElement, 'mouseenter', () => {
                this.layoutStore.sidebarLeftMouseOver(true);
            }));
            this.listeners.push(this.renderer2.listen(this.sidebarElement.nativeElement, 'mouseleave', () => {
                this.layoutStore.sidebarLeftMouseOver(false);
            }));
        });
        this.subscriptions.push(this.layoutStore.windowInnerWidth.subscribe(value => {
            this.windowInnerWidth = value;
            if (!this.isSidebarLeftCollapsed && this.windowInnerWidth && this.windowInnerWidth <= 767) {
                this.layoutStore.sidebarLeftCollapsed(true);
            }
            else if (this.windowInnerWidth && this.windowInnerWidth > 767 && this.isSidebarLeftCollapsed && !this.isSidebarLeftExpandOnOver) {
                this.layoutStore.sidebarLeftCollapsed(false);
            }
        }));
        this.subscriptions.push(this.layoutStore.isSidebarLeftMouseOver.subscribe((value) => {
            this.isSidebarLeftMouseOver = value;
            if (this.isSidebarLeftExpandOnOver) {
                this.layoutStore.sidebarLeftCollapsed(!value);
            }
        }));
        this.subscriptions.push(this.layoutStore.isSidebarLeftExpandOnOver.subscribe((value) => {
            this.isSidebarLeftExpandOnOver = value;
            if (this.windowInnerWidth && this.windowInnerWidth > 767 && this.isSidebarLeftCollapsed !== undefined) {
                this.layoutStore.sidebarLeftCollapsed(value);
            }
        }));
        this.subscriptions.push(this.layoutStore.isSidebarLeftCollapsed.subscribe((value) => {
            this.isSidebarLeftCollapsed = value;
            if (this.windowInnerWidth && this.windowInnerWidth <= 767) {
                if (value) {
                    this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-open');
                }
                else {
                    this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-open');
                }
            }
            else {
                if (this.isSidebarLeftExpandOnOver && !this.isSidebarLeftMouseOver && !value) {
                    this.layoutStore.sidebarLeftExpandOnOver(false);
                }
                if (value) {
                    this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-collapse');
                    if (this.isSidebarLeftExpandOnOver) {
                        this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-expanded-on-hover');
                    }
                }
                else {
                    this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-collapse');
                    if (this.isSidebarLeftExpandOnOver) {
                        this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-expanded-on-hover');
                    }
                }
            }
        }));
        this.subscriptions.push(this.layoutStore.isSidebarLeftMini.subscribe((value) => {
            if (value) {
                this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-mini');
            }
            else {
                this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'sidebar-mini');
            }
        }));
    }
    getIconClasses(item) {
        if (item.iconClasses || item.iconClasses === '') {
            return item.iconClasses;
        }
        else {
            return 'fa fa-circle-o';
        }
    }
    visibilityStateStart(event) {
        this.runningAnimations++;
        this.ngZone.runOutsideAngular(() => {
            setTimeout(() => {
                this.runningAnimations--;
                if (!this.runningAnimations) {
                    this.layoutStore.setSidebarLeftElementHeight(this.sidebarElement.nativeElement.offsetHeight);
                }
            }, event.totalTime);
        });
    }
    setMenuListeners(url) {
        if (url === '/') {
            this.activeItems(url);
            this.changeDetectorRef.detectChanges();
        }
        else {
            const primaryOutlet = this.router.parseUrl(url).root.children[PRIMARY_OUTLET];
            if (primaryOutlet) {
                this.activeItems(primaryOutlet.toString());
                this.changeDetectorRef.detectChanges();
            }
        }
        if (this.windowInnerWidth && this.windowInnerWidth <= 767 || this.isSidebarLeftExpandOnOver) {
            this.layoutStore.sidebarLeftCollapsed(true);
        }
    }
    uncollapseItemParents(item, isActive = false) {
        if (isActive) {
            item.isActive = true;
            this.activatedItems.push(item);
        }
        item.isCollapsed = false;
        this.collapsedItems.push(item);
        if (item.parentId) {
            this.uncollapseItemParents(this.itemsByIds[item.parentId], isActive);
        }
    }
    findItemsByUrl(url, items, returnItems = []) {
        items.forEach((item) => {
            if (item.route === url) {
                returnItems.push(item);
            }
            else if (item.children) {
                this.findItemsByUrl(url, item.children, returnItems);
            }
        });
        return returnItems;
    }
    activeItems(url) {
        if (!this.menu) {
            return;
        }
        this.activatedItems.forEach((item) => {
            item.isActive = false;
        });
        this.activatedItems = [];
        this.collapsedItems.forEach((item) => {
            item.isActive = false;
            item.isCollapsed = true;
        });
        this.collapsedItems = [];
        const items = this.findItemsByUrl(url, this.menu);
        items.forEach(item => {
            item.isActive = true;
            this.uncollapseItemParents(item, true);
            this.activatedItems.push(item);
        });
    }
    monkeyPatchMenu(items, parentId) {
        items.forEach((item, index) => {
            item.id = parentId ? Number(parentId + '' + (index + 1)) : index + 1;
            if (parentId) {
                item.parentId = parentId;
            }
            if (!item.disableCollapse) {
                item.isCollapsed = true;
            }
            item.isActive = false;
            if (parentId || item.children) {
                this.itemsByIds[item.id] = item;
            }
            if (item.children) {
                this.monkeyPatchMenu(item.children, item.id);
            }
        });
    }
    setMenuTogglesListeners() {
        this.toggleListeners = removeListeners(this.toggleListeners);
        this.ngZone.runOutsideAngular(() => {
            this.sidebarLeftToggleDirectives.forEach((menuToggle) => {
                this.toggleListeners.push(this.renderer2.listen(menuToggle.elementRef.nativeElement, 'click', (event) => {
                    event.preventDefault();
                    if (menuToggle.item.isCollapsed) {
                        this.collapsedItems.forEach((item) => {
                            if (!item.disableCollapse) {
                                item.isCollapsed = true;
                            }
                        });
                        this.collapsedItems = [];
                        this.uncollapseItemParents(menuToggle.item);
                    }
                    else {
                        menuToggle.item.isCollapsed = !menuToggle.item.isCollapsed;
                    }
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
    checkMenuWithoutChildren() {
        if (!this.menu) {
            return;
        }
        let menuHaveChildren;
        this.menu.forEach(item => {
            if (item.children) {
                menuHaveChildren = true;
            }
        });
        if (!menuHaveChildren) {
            this.ngZone.runOutsideAngular(() => {
                setTimeout(() => {
                    this.layoutStore.setSidebarLeftElementHeight(this.sidebarElement.nativeElement.offsetHeight);
                });
            });
        }
    }
    setSidebarHeight() {
        if (this.layout === 'fixed' && this.windowInnerHeight) {
            const height = this.windowInnerHeight - this.headerService.offsetHeight;
            if (height && height !== this.sidebarHeight) {
                this.sidebarHeight = height;
                this.sidebarOverflow = 'auto';
                this.changeDetectorRef.detectChanges();
            }
        }
        else if (this.sidebarHeight) {
            this.sidebarOverflow = this.sidebarHeight = undefined;
            this.changeDetectorRef.detectChanges();
        }
    }
}
SidebarLeftComponent.ɵfac = function SidebarLeftComponent_Factory(t) { return new (t || SidebarLeftComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LayoutStore), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(RoutingService), ɵngcc0.ɵɵdirectiveInject(WrapperService), ɵngcc0.ɵɵdirectiveInject(HeaderService)); };
SidebarLeftComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarLeftComponent, selectors: [["mk-layout-sidebar-left"]], viewQuery: function SidebarLeftComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c8, true);
        ɵngcc0.ɵɵviewQuery(SidebarLeftToggleDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidebarElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidebarLeftToggleDirectives = _t);
    } }, ngContentSelectors: _c4, decls: 8, vars: 5, consts: [[1, "main-sidebar"], [1, "sidebar"], ["sidebarElement", ""], [1, "sidebar-menu"], [4, "ngFor", "ngForOf"], ["sidebarInner", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngIf"], [3, "routerLink", 4, "ngIf"], ["href", "#", 3, "mkMenuToggle", 4, "ngIf"], ["class", "treeview-menu", 3, "mkCollapseAnimation", "mkCollapseAnimation.start", 4, "ngIf"], [3, "routerLink"], ["class", "pull-right-container", 4, "ngIf"], [1, "pull-right-container"], [3, "class", 4, "ngFor", "ngForOf"], ["class", "fa fa-angle-left pull-right", 4, "ngIf"], [1, "fa", "fa-angle-left", "pull-right"], ["href", "#", 3, "mkMenuToggle"], [1, "treeview-menu", 3, "mkCollapseAnimation", "mkCollapseAnimation.start"]], template: function SidebarLeftComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "aside", 0);
        ɵngcc0.ɵɵelementStart(1, "section", 1, 2);
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementStart(4, "ul", 3);
        ɵngcc0.ɵɵtemplate(5, SidebarLeftComponent_ng_container_5_Template, 2, 4, "ng-container", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, SidebarLeftComponent_ng_template_6_Template, 5, 10, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.sidebarHeight, "px")("overflow", ctx.sidebarOverflow);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.menu);
    } }, directives: [ɵngcc2.NgForOf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgIf, ɵngcc1.RouterLinkWithHref, SidebarLeftToggleDirective, CollapseAnimationDirective], styles: [".treeview-menu.collapse[_ngcontent-%COMP%]{display:none}.treeview-menu[_ngcontent-%COMP%], .treeview-menu.collapse.in[_ngcontent-%COMP%]{display:block}"], changeDetection: 0 });
SidebarLeftComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: LayoutStore },
    { type: NgZone },
    { type: Renderer2 },
    { type: Router },
    { type: RoutingService },
    { type: WrapperService },
    { type: HeaderService }
];
SidebarLeftComponent.propDecorators = {
    sidebarElement: [{ type: ViewChild, args: ['sidebarElement', { static: true },] }],
    sidebarLeftToggleDirectives: [{ type: ViewChildren, args: [SidebarLeftToggleDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SidebarLeftComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-sidebar-left',
                template: "<aside class=\"main-sidebar\">\n  <section class=\"sidebar\" #sidebarElement [style.height.px]=\"sidebarHeight\" [style.overflow]=\"sidebarOverflow\">\n    <ng-content></ng-content>\n  \t<ul class=\"sidebar-menu\">\n      <ng-container *ngFor=\"let item of menu\">\n        <ng-container *ngTemplateOutlet=\"sidebarInner; context: {item: item}\"></ng-container>\n      </ng-container>\n  \t</ul>\n  </section>\n</aside>\n\n<ng-template #sidebarInner let-item=\"item\">\n  <li [class.active]=\"item.isActive\" [class.header]=\"item.separator\" [class.menu-open]=\"!item.isCollapsed\">\n    <span *ngIf=\"item.separator\">{{item.label}}</span>\n    <a *ngIf=\"!item.separator && item.route\" [routerLink]=\"item.route\">\n    \t<i [class]=\"getIconClasses(item)\"></i><span>{{item.label}}</span>\n    \t<span *ngIf=\"item.children || item.pullRights\" class=\"pull-right-container\">\n    \t\t<span *ngFor=\"let rightItem of item.pullRights\" class=\"pull-right {{rightItem.classes}}\">{{rightItem.text}}</span>\n    \t  <i *ngIf=\"!item.pullRights\" class=\"fa fa-angle-left pull-right\"></i>\n    \t</span>\n    </a>\n    <a *ngIf=\"!item.separator && !item.route\" href=\"#\" [mkMenuToggle]=\"item\">\n    \t<i [class]=\"getIconClasses(item)\"></i><span>{{item.label}}</span>\n    \t<span *ngIf=\"item.children || item.pullRights\" class=\"pull-right-container\">\n    \t\t<span *ngFor=\"let rightItem of item.pullRights\" class=\"pull-right {{rightItem.classes}}\">{{rightItem.text}}</span>\n    \t  <i *ngIf=\"!item.pullRights\" class=\"fa fa-angle-left pull-right\"></i>\n    \t</span>\n    </a>\n    <ul *ngIf=\"item.children\" [mkCollapseAnimation]=\"item.isCollapsed\" (mkCollapseAnimation.start)=\"visibilityStateStart($event)\" class=\"treeview-menu\">\n      <ng-container *ngFor=\"let item of item.children\">\n        <ng-container *ngTemplateOutlet=\"sidebarInner; context: {item: item}\"></ng-container>\n      </ng-container>\n    </ul>\n  </li>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".treeview-menu.collapse{display:none}.treeview-menu,.treeview-menu.collapse.in{display:block}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: LayoutStore }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc1.Router }, { type: RoutingService }, { type: WrapperService }, { type: HeaderService }]; }, { sidebarElement: [{
            type: ViewChild,
            args: ['sidebarElement', { static: true }]
        }], sidebarLeftToggleDirectives: [{
            type: ViewChildren,
            args: [SidebarLeftToggleDirective]
        }] }); })();

class SidebarLeftModule {
}
SidebarLeftModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SidebarLeftModule });
SidebarLeftModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SidebarLeftModule_Factory(t) { return new (t || SidebarLeftModule)(); }, imports: [[CommonModule, RouterModule, AnimationsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SidebarLeftModule, { declarations: function () { return [SidebarLeftToggleDirective, SidebarLeftComponent]; }, imports: function () { return [CommonModule, RouterModule, AnimationsModule]; }, exports: function () { return [SidebarLeftComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SidebarLeftModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule, AnimationsModule],
                exports: [SidebarLeftComponent],
                declarations: [SidebarLeftToggleDirective, SidebarLeftComponent]
            }]
    }], null, null); })();

class SidebarRightComponent {
    constructor(elementRef, renderer2, layoutStore, sidebarRightService, wrapperService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.layoutStore = layoutStore;
        this.sidebarRightService = sidebarRightService;
        this.wrapperService = wrapperService;
        this.listeners = [];
        this.subscriptions = [];
    }
    ngOnInit() {
        this.renderer2.addClass(this.elementRef.nativeElement, 'control-sidebar');
        this.subscriptions.push(this.layoutStore.isSidebarRightCollapsed.subscribe(value => {
            this.isSidebarRightCollapsed = value;
            if (!value) {
                this.renderer2.addClass(this.elementRef.nativeElement, 'control-sidebar-open');
                if (!this.isSidebarRightOverContent) {
                    this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');
                }
            }
            else {
                this.renderer2.removeClass(this.elementRef.nativeElement, 'control-sidebar-open');
                if (!this.isSidebarRightOverContent) {
                    this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');
                }
            }
        }));
        this.subscriptions.push(this.layoutStore.isSidebarRightOverContent.subscribe(value => {
            this.isSidebarRightOverContent = value;
            if (!this.isSidebarRightCollapsed) {
                if (value) {
                    this.renderer2.removeClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');
                }
                else {
                    this.renderer2.addClass(this.wrapperService.wrapperElementRef.nativeElement, 'control-sidebar-open');
                }
            }
        }));
        this.subscriptions.push(this.layoutStore.sidebarRightSkin.subscribe((value) => {
            if (this.skin !== value) {
                this.renderer2.removeClass(this.elementRef.nativeElement, `control-sidebar-${this.skin}`);
            }
            this.skin = value;
            this.renderer2.addClass(this.elementRef.nativeElement, `control-sidebar-${value}`);
        }));
    }
    ngAfterViewInit() {
        this.sidebarRightService.elementRef = this.sidebarContentElement;
    }
    ngOnDestroy() {
        this.listeners = removeListeners(this.listeners);
        this.subscriptions = removeSubscriptions(this.subscriptions);
    }
}
SidebarRightComponent.ɵfac = function SidebarRightComponent_Factory(t) { return new (t || SidebarRightComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(LayoutStore), ɵngcc0.ɵɵdirectiveInject(SidebarRightService), ɵngcc0.ɵɵdirectiveInject(WrapperService)); };
SidebarRightComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SidebarRightComponent, selectors: [["mk-layout-sidebar-right"]], viewQuery: function SidebarRightComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c10, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.sidebarContentElement = _t.first);
    } }, ngContentSelectors: _c4, decls: 4, vars: 0, consts: [[1, "control-sidebar-content"], ["sidebarContentElement", ""], [1, "control-sidebar-bg"]], template: function SidebarRightComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "div", 2);
    } }, styles: ["[_nghost-%COMP%]{display:block;height:100%}.control-sidebar-bg[_ngcontent-%COMP%]{z-index:-1}  .tab-content{padding:10px 15px}"], changeDetection: 0 });
SidebarRightComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: LayoutStore },
    { type: SidebarRightService },
    { type: WrapperService }
];
SidebarRightComponent.propDecorators = {
    sidebarContentElement: [{ type: ViewChild, args: ['sidebarContentElement', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SidebarRightComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-sidebar-right',
                template: "<div #sidebarContentElement class=\"control-sidebar-content\">\n  <ng-content></ng-content>\n</div>\n<div class=\"control-sidebar-bg\"></div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:block;height:100%}.control-sidebar-bg{z-index:-1}/deep/ .tab-content{padding:10px 15px}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: LayoutStore }, { type: SidebarRightService }, { type: WrapperService }]; }, { sidebarContentElement: [{
            type: ViewChild,
            args: ['sidebarContentElement', { static: true }]
        }] }); })();

class SidebarRightModule {
}
SidebarRightModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SidebarRightModule });
SidebarRightModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SidebarRightModule_Factory(t) { return new (t || SidebarRightModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SidebarRightModule, { declarations: function () { return [SidebarRightComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SidebarRightComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SidebarRightModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [SidebarRightComponent],
                declarations: [SidebarRightComponent]
            }]
    }], null, null); })();

class WrapperComponent {
    constructor(elementRef, renderer2, layoutStore, wrapperService, ngZone) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.layoutStore = layoutStore;
        this.wrapperService = wrapperService;
        this.ngZone = ngZone;
        this.listeners = [];
        this.subscriptions = [];
    }
    ngOnInit() {
        this.layoutStore.setWindowInnerHeight(window.innerHeight);
        this.layoutStore.setWindowInnerWidth(window.innerWidth);
        this.wrapperService.wrapperElementRef = this.elementRef;
        this.ngZone.runOutsideAngular(() => {
            this.listeners.push(this.renderer2.listen('window', 'resize', throttle(() => {
                this.layoutStore.setWindowInnerHeight(window.innerHeight);
                this.layoutStore.setWindowInnerWidth(window.innerWidth);
            }, 250)));
        });
        this.subscriptions.push(this.layoutStore.layout.subscribe(value => {
            value === 'fixed' ? this.renderer2.addClass(this.elementRef.nativeElement, 'fixed') :
                this.renderer2.removeClass(this.elementRef.nativeElement, 'fixed');
            value === 'boxed' ? this.renderer2.addClass(this.elementRef.nativeElement, 'layout-boxed') :
                this.renderer2.removeClass(this.elementRef.nativeElement, 'layout-boxed');
        }));
        this.subscriptions.push(this.layoutStore.skin.subscribe(value => {
            if (this.skin && this.skin !== value) {
                this.renderer2.removeClass(this.elementRef.nativeElement, `skin-${this.skin}`);
            }
            this.skin = value;
            this.renderer2.addClass(this.elementRef.nativeElement, `skin-${this.skin}`);
        }));
    }
    ngOnDestroy() {
        this.subscriptions = removeSubscriptions(this.subscriptions);
        this.listeners = removeListeners(this.listeners);
    }
}
WrapperComponent.ɵfac = function WrapperComponent_Factory(t) { return new (t || WrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(LayoutStore), ɵngcc0.ɵɵdirectiveInject(WrapperService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
WrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: WrapperComponent, selectors: [["mk-layout-wrapper"]], ngContentSelectors: _c4, decls: 2, vars: 0, consts: [[1, "wrapper", "overflow"]], template: function WrapperComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [".wrapper.overflow[_ngcontent-%COMP%]{overflow:hidden}[_nghost-%COMP%]{display:block}[_nghost-%COMP%]     .sidebar-right-toggle>a{color:#fff}.sidebar-mini.sidebar-collapse[_nghost-%COMP%]     .treeview-menu.collapsing{height:auto!important}[_nghost-%COMP%]     .sidebar-right-toggle>a:hover{background:rgba(0,0,0,.1)}.skin-black-light[_nghost-%COMP%]     .sidebar-right-toggle>a, .skin-black[_nghost-%COMP%]     .sidebar-right-toggle>a{border-right-width:0;color:#333}.skin-black-light[_nghost-%COMP%]     .sidebar-right-toggle>a:hover, .skin-black[_nghost-%COMP%]     .sidebar-right-toggle>a:hover{background-color:#fff;color:#999}.skin-black[_nghost-%COMP%]     .sidebar-right-toggle>a{border-left:1px solid #eee}.skin-black-light[_nghost-%COMP%]     .sidebar-right-toggle>a{border-left:1px solid #d2d6de}"] });
WrapperComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: LayoutStore },
    { type: WrapperService },
    { type: NgZone }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WrapperComponent, [{
        type: Component,
        args: [{
                selector: 'mk-layout-wrapper',
                template: "<div class=\"wrapper overflow\">\n  <ng-content></ng-content>\n</div>\n",
                styles: [".wrapper.overflow{overflow:hidden}:host{display:block}:host /deep/ .sidebar-right-toggle>a{color:#fff}:host.sidebar-mini.sidebar-collapse /deep/ .treeview-menu.collapsing{height:auto!important}:host /deep/ .sidebar-right-toggle>a:hover{background:rgba(0,0,0,.1)}:host.skin-black-light /deep/ .sidebar-right-toggle>a,:host.skin-black /deep/ .sidebar-right-toggle>a{border-right-width:0;color:#333}:host.skin-black-light /deep/ .sidebar-right-toggle>a:hover,:host.skin-black /deep/ .sidebar-right-toggle>a:hover{background-color:#fff;color:#999}:host.skin-black /deep/ .sidebar-right-toggle>a{border-left:1px solid #eee}:host.skin-black-light /deep/ .sidebar-right-toggle>a{border-left:1px solid #d2d6de}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: LayoutStore }, { type: WrapperService }, { type: ɵngcc0.NgZone }]; }, null); })();

class WrapperModule {
}
WrapperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: WrapperModule });
WrapperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function WrapperModule_Factory(t) { return new (t || WrapperModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WrapperModule, { declarations: function () { return [WrapperComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [WrapperComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(WrapperModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                exports: [WrapperComponent],
                declarations: [WrapperComponent]
            }]
    }], null, null); })();

class LayoutService {
    constructor(router) {
        this.router = router;
        this.isCustomLayout = new BehaviorSubject(false);
        this.customLayout = false;
        this.init();
    }
    init() {
        this.router.events.subscribe(event => {
            if (event instanceof ActivationStart) {
                this.customLayout = event.snapshot.data.customLayout;
                this.isCustomLayout.next(this.customLayout);
            }
        });
    }
}
LayoutService.ɵfac = function LayoutService_Factory(t) { return new (t || LayoutService)(ɵngcc0.ɵɵinject(ɵngcc1.Router)); };
LayoutService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LayoutService, factory: LayoutService.ɵfac });
LayoutService.ctorParameters = () => [
    { type: Router }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Router }]; }, null); })();

const LayoutConfigToken = new InjectionToken('layoutConfig');
function layoutStoreFactory(layoutConfig) {
    return new LayoutStore(layoutConfig);
}
function layoutProvider(layoutConfig) {
    return [{
            provide: LayoutStore,
            useFactory: layoutStoreFactory,
            deps: [LayoutConfigToken]
        }, {
            provide: LayoutConfigToken,
            useValue: layoutConfig
        }
    ];
}

class LayoutModule {
    constructor(parentModule) {
        if (parentModule) {
            throw new Error('LayoutModule is already loaded. Import it in the AppModule only!');
        }
    }
    static forRoot(layoutConfig) {
        return {
            ngModule: LayoutModule,
            providers: [...layoutProvider(layoutConfig), LayoutService]
        };
    }
}
LayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });
LayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(ɵngcc0.ɵɵinject(LayoutModule, 12)); }, providers: [RoutingService, WrapperService, SidebarRightService, HeaderService, FooterService], imports: [[CommonModule, RouterModule], ContentModule, FooterModule, HeaderModule, SidebarLeftModule, SidebarRightModule, WrapperModule] });
LayoutModule.ctorParameters = () => [
    { type: LayoutModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
];
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LayoutModule, { imports: function () { return [CommonModule, RouterModule]; }, exports: function () { return [ContentModule, FooterModule, HeaderModule, SidebarLeftModule, SidebarRightModule, WrapperModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, RouterModule],
                exports: [ContentModule, FooterModule, HeaderModule, SidebarLeftModule, SidebarRightModule, WrapperModule],
                providers: [RoutingService, WrapperService, SidebarRightService, HeaderService, FooterService]
            }]
    }], function () { return [{ type: LayoutModule, decorators: [{
                type: Optional
            }, {
                type: SkipSelf
            }] }]; }, null); })();

const colorsAliases = [
    'default',
    'primary',
    'danger',
    'warning',
    'info',
    'success'
];
const colors = {
    aqua: '#00c0ef',
    'aqua-active': '#00a7d0',
    black: '#111111',
    'black-active': '#000000',
    blue: '#0073b7',
    'blue-active': '#005384',
    fuchsia: '#f012be',
    'fuchsia-active': '#db0ead',
    green: '#00a65a',
    'green-active': '#008d4c',
    gray: '#d2d6de',
    'gray-active': '#b5bbc8',
    'gray-light': '#f7f7f7',
    'light-blue': '#3c8dbc',
    'light-blue-active': '#357ca5',
    lime: '#01ff70',
    'lime-active': '#00e765',
    maroon: '#d81b60',
    'maroon-active': '#ca195a',
    navy: '#001f3f',
    'navy-active': '#001a35',
    olive: '#3d9970',
    'olive-active': '#368763',
    orange: '#ff851b',
    'orange-active': '#ff7701',
    purple: '#605ca8',
    'purple-active': '#555299',
    red: '#dd4b39',
    'red-active': '#d33724',
    teal: '#39cccc',
    'teal-active': '#30bbbb',
    yellow: '#f39c12',
    'yellow-active': '#db8b0b',
};

class ColorService {
    constructor(renderer2, elementRef) {
        this.renderer2 = renderer2;
        this.elementRef = elementRef;
    }
    setBackgroundColor(color, condition, property, prefix) {
        if (color && condition) {
            this.resetBackgroundColor();
            if (colors.hasOwnProperty(color)) {
                const knownColor = colors[color];
                this.renderer2.addClass(this.elementRef.nativeElement, 'bg-color');
                this.currentBackgroundStyle = { property, color: knownColor };
                this.renderer2.setStyle(this.elementRef.nativeElement, property, knownColor);
            }
            else {
                this.renderer2.removeClass(this.elementRef.nativeElement, 'bg-color');
                if (color.indexOf('#') === 0 || color.indexOf('rgb') === 0) {
                    this.currentBackgroundStyle = { property, color };
                    this.renderer2.setStyle(this.elementRef.nativeElement, property, color);
                }
                else if (colorsAliases.indexOf(color) !== -1) {
                    this.currentBackgroundClass = prefix ? `${prefix}-${color}` : color;
                    this.renderer2.addClass(this.elementRef.nativeElement, this.currentBackgroundClass);
                }
            }
        }
    }
    resetBackgroundColor() {
        if (this.currentBackgroundStyle) {
            this.renderer2.removeStyle(this.elementRef.nativeElement, this.currentBackgroundStyle.property, this.currentBackgroundStyle.color);
        }
        else if (this.currentBackgroundClass) {
            this.renderer2.removeClass(this.elementRef.nativeElement, this.currentBackgroundClass);
        }
    }
    setFontColor(color) {
        this.resetFontColor();
        if (color) {
            if (color.startsWith('#') || color.startsWith('rgb')) {
                this.currentFontStyle = color;
                this.renderer2.setStyle(this.elementRef.nativeElement, 'color', color);
            }
            else {
                this.currentFontClass = `text-${color}`;
                this.renderer2.addClass(this.elementRef.nativeElement, this.currentFontClass);
            }
        }
    }
    resetFontColor() {
        if (this.currentFontStyle) {
            this.renderer2.removeStyle(this.elementRef.nativeElement, 'color', this.currentFontStyle);
        }
        else if (this.currentFontClass) {
            this.renderer2.removeClass(this.elementRef.nativeElement, this.currentFontClass);
        }
    }
}
ColorService.ɵfac = function ColorService_Factory(t) { return new (t || ColorService)(ɵngcc0.ɵɵinject(ɵngcc0.Renderer2), ɵngcc0.ɵɵinject(ɵngcc0.ElementRef)); };
ColorService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ColorService, factory: ColorService.ɵfac });
ColorService.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();

class BackgroundColorDirective {
    constructor(elementRef, renderer2, colorService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.colorService = colorService;
        // TODO: ADD @Required decorator
        this.condition = true;
    }
    set setPrefix(prefix) {
        this.prefix = prefix;
        this.colorService.setBackgroundColor(this.color, this.condition, this.property, this.prefix);
    }
    set setColor(color) {
        if (color) {
            this.color = color;
            this.colorService.setBackgroundColor(this.color, this.condition, this.property, this.prefix);
        }
    }
}
BackgroundColorDirective.ɵfac = function BackgroundColorDirective_Factory(t) { return new (t || BackgroundColorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ColorService)); };
BackgroundColorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BackgroundColorDirective, selectors: [["", "mkColor", ""]], inputs: { condition: ["mkColorCondition", "condition"], setPrefix: ["mkColorPrefix", "setPrefix"], setColor: ["mkColor", "setColor"], property: ["mkColorProperty", "property"] }, features: [ɵngcc0.ɵɵProvidersFeature([ColorService])] });
BackgroundColorDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ColorService }
];
BackgroundColorDirective.propDecorators = {
    condition: [{ type: Input, args: ['mkColorCondition',] }],
    setPrefix: [{ type: Input, args: ['mkColorPrefix',] }],
    property: [{ type: Input, args: ['mkColorProperty',] }],
    setColor: [{ type: Input, args: ['mkColor',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BackgroundColorDirective, [{
        type: Directive,
        args: [{
                selector: '[mkColor]',
                providers: [ColorService]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ColorService }]; }, { condition: [{
            type: Input,
            args: ['mkColorCondition']
        }], setPrefix: [{
            type: Input,
            args: ['mkColorPrefix']
        }], setColor: [{
            type: Input,
            args: ['mkColor']
        }], property: [{
            type: Input,
            args: ['mkColorProperty']
        }] }); })();
class ColorDirective {
    constructor(elementRef, renderer2, colorService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.colorService = colorService;
    }
    set color(color) {
        this.colorService.setFontColor(color);
    }
}
ColorDirective.ɵfac = function ColorDirective_Factory(t) { return new (t || ColorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ColorService)); };
ColorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ColorDirective, selectors: [["", "mkFontColor", ""]], inputs: { color: ["mkFontColor", "color"] }, features: [ɵngcc0.ɵɵProvidersFeature([ColorService])] });
ColorDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ColorService }
];
ColorDirective.propDecorators = {
    color: [{ type: Input, args: ['mkFontColor',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorDirective, [{
        type: Directive,
        args: [{
                selector: '[mkFontColor]',
                providers: [ColorService]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ColorService }]; }, { color: [{
            type: Input,
            args: ['mkFontColor']
        }] }); })();

class ColorModule {
}
ColorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ColorModule });
ColorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ColorModule_Factory(t) { return new (t || ColorModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColorModule, { declarations: [BackgroundColorDirective, ColorDirective], exports: [BackgroundColorDirective, ColorDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorModule, [{
        type: NgModule,
        args: [{
                exports: [BackgroundColorDirective, ColorDirective],
                declarations: [BackgroundColorDirective, ColorDirective]
            }]
    }], null, null); })();

class AccordionToggleDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
AccordionToggleDirective.ɵfac = function AccordionToggleDirective_Factory(t) { return new (t || AccordionToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
AccordionToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AccordionToggleDirective, selectors: [["", "mkAccordionToggle", ""]], inputs: { accordionComponent: ["mkAccordionToggle", "accordionComponent"] } });
AccordionToggleDirective.ctorParameters = () => [
    { type: ElementRef }
];
AccordionToggleDirective.propDecorators = {
    accordionComponent: [{ type: Input, args: ['mkAccordionToggle',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[mkAccordionToggle]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { accordionComponent: [{
            type: Input,
            args: ['mkAccordionToggle']
        }] }); })();

class AccordionHeaderComponent {
}
AccordionHeaderComponent.ɵfac = function AccordionHeaderComponent_Factory(t) { return new (t || AccordionHeaderComponent)(); };
AccordionHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionHeaderComponent, selectors: [["mk-accordion-header"]], viewQuery: function AccordionHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function AccordionHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AccordionHeaderComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
AccordionHeaderComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion-header',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class AccordionContentComponent {
}
AccordionContentComponent.ɵfac = function AccordionContentComponent_Factory(t) { return new (t || AccordionContentComponent)(); };
AccordionContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionContentComponent, selectors: [["mk-accordion-content"]], viewQuery: function AccordionContentComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function AccordionContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AccordionContentComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
AccordionContentComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionContentComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion-content',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class AccordionComponent {
    constructor() {
        this.contentStyleClass = 'box-body';
        this.headerStyleClass = 'box-header with-border';
        this.isCollapsing = false;
        this.isCollapsed = false;
        this.index = 0;
    }
    ngOnInit() {
        this.headerStyleColor = this.headerColor;
    }
    ngAfterViewInit() {
        if (!this.header && !this.accordionHeaderComponent) {
            throw new Error('Attribute "header" OR Component "mk-accordion-header" is required for component "mk-accordion"');
        }
    }
}
AccordionComponent.ɵfac = function AccordionComponent_Factory(t) { return new (t || AccordionComponent)(); };
AccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionComponent, selectors: [["mk-accordion"]], contentQueries: function AccordionComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionHeaderComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionContentComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionHeaderComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionContentComponent = _t.first);
    } }, viewQuery: function AccordionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, inputs: { contentStyleClass: "contentStyleClass", headerStyleClass: "headerStyleClass", borderColor: "borderColor", contentColor: "contentColor", header: "header", headerColor: "headerColor", headerColorHover: "headerColorHover" }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function AccordionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AccordionComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
AccordionComponent.propDecorators = {
    borderColor: [{ type: Input }],
    contentColor: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    header: [{ type: Input }],
    headerColor: [{ type: Input }],
    headerColorHover: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    accordionHeaderComponent: [{ type: ContentChild, args: [AccordionHeaderComponent,] }],
    accordionContentComponent: [{ type: ContentChild, args: [AccordionContentComponent,] }],
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], function () { return []; }, { contentStyleClass: [{
            type: Input
        }], headerStyleClass: [{
            type: Input
        }], borderColor: [{
            type: Input
        }], contentColor: [{
            type: Input
        }], header: [{
            type: Input
        }], headerColor: [{
            type: Input
        }], headerColorHover: [{
            type: Input
        }], accordionHeaderComponent: [{
            type: ContentChild,
            args: [AccordionHeaderComponent]
        }], accordionContentComponent: [{
            type: ContentChild,
            args: [AccordionContentComponent]
        }], templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class AccordionGroupComponent {
    constructor(changeDetectorRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.isMultiple = false;
        this.styleClass = 'box-group';
        this.collapseStart = new EventEmitter();
        this.collapseDone = new EventEmitter();
        this.activeIndex = [0];
        this.listeners = [];
        // @TODO change types for subscriptions to all files
        this.subscriptions = [];
    }
    set _activeIndex(value) {
        this.activeIndex = value instanceof Array ? value : [value];
    }
    static headerMouseLeave(accordion) {
        accordion.headerStyleColor = accordion.headerColor;
    }
    static headerMouseEnter(accordion) {
        if (accordion.headerColorHover) {
            accordion.headerStyleColor = accordion.headerColorHover;
        }
    }
    ngAfterContentInit() {
        this.setAccordionsIndex();
        this.updateAccordionIsCollapsed();
        this.subscriptions.push(this.accordionComponents.changes.subscribe(() => {
            this.setAccordionsIndex();
        }));
    }
    ngAfterViewInit() {
        this.setAccordionsToggle();
        this.subscriptions.push(this.accordionToggleDirectives.changes.subscribe(() => {
            this.setAccordionsToggle();
        }));
    }
    ngOnChanges(changes) {
        if (!changes._activeIndex.firstChange) {
            this.updateAccordionIsCollapsed();
        }
    }
    ngOnDestroy() {
        removeListeners(this.listeners);
        removeSubscriptions(this.subscriptions);
    }
    toggleAccordion(event, toggleIndex) {
        event.preventDefault();
        const indexOf = this.activeIndex.indexOf(toggleIndex);
        if (indexOf === -1) {
            if (this.isMultiple) {
                this.activeIndex.push(toggleIndex);
            }
            else {
                this.activeIndex = [toggleIndex];
            }
        }
        else {
            if (this.isMultiple) {
                this.activeIndex.splice(indexOf, 1);
            }
            else {
                this.activeIndex = [];
            }
        }
        this.updateAccordionIsCollapsed();
    }
    onCollapseStart(event, accordion) {
        accordion.isCollapsing = true;
        this.collapseStart.emit({ animationEvent: event, index: accordion.index });
    }
    onCollapseDone(event, accordion) {
        accordion.isCollapsing = false;
        this.collapseDone.emit({ animationEvent: event, index: accordion.index });
    }
    setAccordionsIndex() {
        this.accordionComponents.forEach((accordion, index) => {
            accordion.index = index;
        });
    }
    setAccordionsToggle() {
        this.listeners = removeListeners(this.listeners);
        this.ngZone.runOutsideAngular(() => {
            this.accordionToggleDirectives.forEach((accordionToggle) => {
                this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'click', (event) => {
                    this.toggleAccordion(event, accordionToggle.accordionComponent.index);
                    this.changeDetectorRef.detectChanges();
                }));
                this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseenter', () => {
                    AccordionGroupComponent.headerMouseEnter(accordionToggle.accordionComponent);
                    this.changeDetectorRef.detectChanges();
                }));
                this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseleave', () => {
                    AccordionGroupComponent.headerMouseLeave(accordionToggle.accordionComponent);
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
    updateAccordionIsCollapsed() {
        this.accordionComponents.forEach((accordion, index) => {
            accordion.isCollapsed = this.activeIndex.indexOf(index) === -1;
        });
    }
}
AccordionGroupComponent.ɵfac = function AccordionGroupComponent_Factory(t) { return new (t || AccordionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
AccordionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionGroupComponent, selectors: [["mk-accordion-group"]], contentQueries: function AccordionGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionComponent, false);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionComponents = _t);
    } }, viewQuery: function AccordionGroupComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(AccordionToggleDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionToggleDirectives = _t);
    } }, inputs: { isMultiple: "isMultiple", styleClass: "styleClass", _activeIndex: ["activeIndex", "_activeIndex"] }, outputs: { collapseStart: "collapseStart", collapseDone: "collapseDone" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[3, "ngClass"], ["class", "panel box", "mkColorProperty", "border-top-color", "mkColorPrefix", "box", 3, "mkColor", 4, "ngFor", "ngForOf"], ["mkColorProperty", "border-top-color", "mkColorPrefix", "box", 1, "panel", "box", 3, "mkColor"], [1, "box-title"], ["href", "#", 3, "mkAccordionToggle", "mkFontColor"], [4, "ngIf"], [1, "panel-collapse", 3, "mkCollapseAnimation", "mkCollapseAnimation.start", "mkCollapseAnimation.done"], [3, "ngClass", "mkFontColor"], [3, "ngTemplateOutlet"]], template: function AccordionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, AccordionGroupComponent_div_1_Template, 10, 15, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.styleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.accordionComponents);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgForOf, BackgroundColorDirective, AccordionToggleDirective, ColorDirective, ɵngcc2.NgIf, CollapseAnimationDirective, ɵngcc2.NgTemplateOutlet], encapsulation: 2 });
AccordionGroupComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NgZone },
    { type: Renderer2 }
];
AccordionGroupComponent.propDecorators = {
    _activeIndex: [{ type: Input, args: ['activeIndex',] }],
    isMultiple: [{ type: Input }],
    styleClass: [{ type: Input }],
    collapseStart: [{ type: Output }],
    collapseDone: [{ type: Output }],
    accordionComponents: [{ type: ContentChildren, args: [AccordionComponent,] }],
    accordionToggleDirectives: [{ type: ViewChildren, args: [AccordionToggleDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionGroupComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion-group',
                template: "<div [ngClass]=\"styleClass\">\n  <div *ngFor=\"let accordion of accordionComponents\" class=\"panel box\" [mkColor]=\"accordion.borderColor\" mkColorProperty=\"border-top-color\" mkColorPrefix=\"box\">\n    <div [ngClass]=\"accordion.headerStyleClass\" [class.no-border]=\"accordion.isCollapsed && !accordion.isCollapsing\">\n      <h4 class=\"box-title\">\n        <a [mkAccordionToggle]=\"accordion\" href=\"#\" [mkFontColor]=\"accordion.headerStyleColor\" [class.collapsed]=\"accordion.isCollapsed\">\n          {{accordion.header}}\n          <ng-template *ngIf=\"!accordion.header && accordion.accordionHeaderComponent\" [ngTemplateOutlet]=\"accordion.accordionHeaderComponent.templateRef\"></ng-template>\n        </a>\n      </h4>\n    </div>\n    <div class=\"panel-collapse\" [mkCollapseAnimation]=\"accordion.isCollapsed\" (mkCollapseAnimation.start)=\"onCollapseStart($event, accordion)\" (mkCollapseAnimation.done)=\"onCollapseDone($event, accordion)\">\n      <div [ngClass]=\"accordion.contentStyleClass\" [mkFontColor]=\"accordion.contentColor\">\n        <ng-template *ngIf=\"!accordion.accordionContentComponent\" [ngTemplateOutlet]=\"accordion.templateRef\"></ng-template>\n        <ng-template *ngIf=\"accordion.accordionContentComponent\" [ngTemplateOutlet]=\"accordion.accordionContentComponent.templateRef\"></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { isMultiple: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], collapseStart: [{
            type: Output
        }], collapseDone: [{
            type: Output
        }], _activeIndex: [{
            type: Input,
            args: ['activeIndex']
        }], accordionComponents: [{
            type: ContentChildren,
            args: [AccordionComponent]
        }], accordionToggleDirectives: [{
            type: ViewChildren,
            args: [AccordionToggleDirective]
        }] }); })();

class AccordionModule {
}
AccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AccordionModule });
AccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AccordionModule_Factory(t) { return new (t || AccordionModule)(); }, imports: [[CommonModule, AnimationsModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AccordionModule, { declarations: function () { return [AccordionToggleDirective, AccordionHeaderComponent, AccordionContentComponent, AccordionComponent, AccordionGroupComponent]; }, imports: function () { return [CommonModule, AnimationsModule, ColorModule]; }, exports: function () { return [AccordionHeaderComponent, AccordionContentComponent, AccordionComponent, AccordionGroupComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AnimationsModule, ColorModule],
                exports: [AccordionHeaderComponent, AccordionContentComponent, AccordionComponent, AccordionGroupComponent],
                declarations: [AccordionToggleDirective, AccordionHeaderComponent,
                    AccordionContentComponent, AccordionComponent, AccordionGroupComponent]
            }]
    }], null, null); })();

class AlertComponent {
    constructor(changeDetectorRef, ngZone, renderer2, viewContainerRef) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.viewContainerRef = viewContainerRef;
        this.backgroundColor = 'danger';
        this.styleClass = '';
        this.collapseStart = new EventEmitter();
        this.collapseDone = new EventEmitter();
        this.dismissibleClass = 'alert-dismissible';
        this.isDismissible = true;
        this.remove = false;
        this.removed = false;
        this.type = 'alert';
        this.listeners = [];
    }
    set callout(value) {
        this.type = value ? 'callout' : 'alert';
    }
    set _isDismissible(value) {
        this.isDismissible = value;
        if (value) {
            this.dismissibleClass = `${this.type}-dismissible`;
        }
        else {
            this.dismissibleClass = '';
        }
    }
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular(() => {
            if (this.dismissOnTimeout) {
                setTimeout(() => {
                    if (!this.changeDetectorRef.destroyed) {
                        this.remove = true;
                        this.changeDetectorRef.detectChanges();
                    }
                }, this.dismissOnTimeout);
            }
            if (this.removeButtonElement) {
                this.listeners.push(this.renderer2.listen(this.removeButtonElement.nativeElement, 'click', () => {
                    this.remove = true;
                    this.changeDetectorRef.detectChanges();
                }));
            }
        });
    }
    ngOnDestroy() {
        removeListeners(this.listeners);
    }
    onCollapseStart(event) {
        this.collapseStart.emit(event);
    }
    onCollapseDone(event) {
        if (event.toState === '1') {
            this.listeners = removeListeners(this.listeners);
            this.removed = true;
            this.viewContainerRef.clear();
            this.changeDetectorRef.detectChanges();
        }
        this.collapseDone.emit(event);
    }
}
AlertComponent.ɵfac = function AlertComponent_Factory(t) { return new (t || AlertComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
AlertComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AlertComponent, selectors: [["mk-alert"]], viewQuery: function AlertComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c11, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeButtonElement = _t.first);
    } }, inputs: { backgroundColor: "backgroundColor", styleClass: "styleClass", callout: "callout", _isDismissible: ["isDismissible", "_isDismissible"], color: "color", dismissOnTimeout: "dismissOnTimeout" }, outputs: { collapseStart: "collapseStart", collapseDone: "collapseDone" }, ngContentSelectors: _c4, decls: 1, vars: 1, consts: [[3, "mkCollapseAnimation", "mkCollapseAnimation.start", "mkCollapseAnimation.done", 4, "ngIf"], [3, "mkCollapseAnimation", "mkCollapseAnimation.start", "mkCollapseAnimation.done"], ["mkColorProperty", "background-color", 3, "mkColor", "mkColorPrefix", "mkFontColor", "ngClass"], ["type", "button", "class", "close", 4, "ngIf"], ["type", "button", 1, "close"], ["removeButtonElement", ""]], template: function AlertComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AlertComponent_div_0_Template, 4, 10, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.removed);
    } }, directives: [ɵngcc2.NgIf, CollapseAnimationDirective, BackgroundColorDirective, ColorDirective, ɵngcc2.NgClass], styles: [".callout-dismissable[_ngcontent-%COMP%], .callout-dismissible[_ngcontent-%COMP%]{padding-right:35px}.callout-dismissable[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%], .callout-dismissible[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{color:inherit;position:relative;right:-21px;top:-2px}.callout[_ngcontent-%COMP%]   .close[_ngcontent-%COMP%]{color:#000;filter:alpha(opacity=20);opacity:.2}.callout[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{margin-right:10px}"], changeDetection: 0 });
AlertComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NgZone },
    { type: Renderer2 },
    { type: ViewContainerRef }
];
AlertComponent.propDecorators = {
    backgroundColor: [{ type: Input }],
    callout: [{ type: Input }],
    color: [{ type: Input }],
    dismissOnTimeout: [{ type: Input }],
    _isDismissible: [{ type: Input, args: ['isDismissible',] }],
    styleClass: [{ type: Input }],
    collapseStart: [{ type: Output }],
    collapseDone: [{ type: Output }],
    removeButtonElement: [{ type: ViewChild, args: ['removeButtonElement',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AlertComponent, [{
        type: Component,
        args: [{
                selector: 'mk-alert',
                template: "<div *ngIf=\"!removed\" [mkCollapseAnimation]=\"remove\" (mkCollapseAnimation.start)=\"onCollapseStart($event)\" (mkCollapseAnimation.done)=\"onCollapseDone($event)\">\n  <div [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\" [mkColorPrefix]=\"type\" [mkFontColor]=\"color\" [ngClass]=\"[styleClass, dismissibleClass, type]\">\n    <button *ngIf=\"isDismissible\" type=\"button\" class=\"close\" #removeButtonElement>&times;</button>\n    <ng-content></ng-content>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".callout-dismissable,.callout-dismissible{padding-right:35px}.callout-dismissable .close,.callout-dismissible .close{color:inherit;position:relative;right:-21px;top:-2px}.callout .close{color:#000;filter:alpha(opacity=20);opacity:.2}.callout .icon{margin-right:10px}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ViewContainerRef }]; }, { backgroundColor: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], collapseStart: [{
            type: Output
        }], collapseDone: [{
            type: Output
        }], callout: [{
            type: Input
        }], _isDismissible: [{
            type: Input,
            args: ['isDismissible']
        }], color: [{
            type: Input
        }], dismissOnTimeout: [{
            type: Input
        }], removeButtonElement: [{
            type: ViewChild,
            args: ['removeButtonElement']
        }] }); })();

class AlertModule {
}
AlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AlertModule });
AlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AlertModule_Factory(t) { return new (t || AlertModule)(); }, imports: [[CommonModule, AnimationsModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AlertModule, { declarations: function () { return [AlertComponent]; }, imports: function () { return [CommonModule, AnimationsModule, ColorModule]; }, exports: function () { return [AlertComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AlertModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AnimationsModule, ColorModule],
                exports: [AlertComponent],
                declarations: [AlertComponent]
            }]
    }], null, null); })();

class BoxContentDirective {
}
BoxContentDirective.ɵfac = function BoxContentDirective_Factory(t) { return new (t || BoxContentDirective)(); };
BoxContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxContentDirective, selectors: [["mk-box-content"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxContentDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-content'
            }]
    }], null, null); })();
class BoxFooterDirective {
}
BoxFooterDirective.ɵfac = function BoxFooterDirective_Factory(t) { return new (t || BoxFooterDirective)(); };
BoxFooterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxFooterDirective, selectors: [["mk-box-footer"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxFooterDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-footer'
            }]
    }], null, null); })();
class BoxToolsDirective {
}
BoxToolsDirective.ɵfac = function BoxToolsDirective_Factory(t) { return new (t || BoxToolsDirective)(); };
BoxToolsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxToolsDirective, selectors: [["mk-box-tools"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxToolsDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-tools'
            }]
    }], null, null); })();
class BoxHeaderDirective {
}
BoxHeaderDirective.ɵfac = function BoxHeaderDirective_Factory(t) { return new (t || BoxHeaderDirective)(); };
BoxHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxHeaderDirective, selectors: [["mk-box-header"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxHeaderDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-header'
            }]
    }], null, null); })();

class BoxComponent {
    constructor(changeDetectorRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.boxColor = 'default';
        this.buttonsStyleClass = 'btn btn-box-tool';
        this.contentStyleClass = 'box-content-wrapper';
        this.footerStyleClass = 'box-footer';
        this.headerBorder = true;
        this.headerStyleClass = 'box-header';
        this.isCollapsable = true;
        this.isCollapsed = false;
        this.isLoading = false;
        this.isRemovable = true;
        this.isSolid = false;
        this.loadingStyleClass = 'fa fa-refresh fa-spin';
        this.styleClass = 'box';
        this.collapseDone = new EventEmitter();
        this.collapseStart = new EventEmitter();
        this.isCollapsing = false;
        this.remove = false;
        this.removed = false;
        this.listeners = [];
    }
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular(() => {
            if (this.toggleButtonElement) {
                this.listeners.push(this.renderer2.listen(this.toggleButtonElement.nativeElement, 'click', () => {
                    this.isCollapsed = !this.isCollapsed;
                    this.changeDetectorRef.detectChanges();
                }));
            }
            if (this.removeButtonElement) {
                this.listeners.push(this.renderer2.listen(this.removeButtonElement.nativeElement, 'click', () => {
                    this.remove = true;
                    this.changeDetectorRef.detectChanges();
                }));
            }
        });
    }
    ngOnDestroy() {
        removeListeners(this.listeners);
    }
    removedDone(event) {
        if (event.toState === '1') {
            this.removed = true;
        }
    }
    onCollapseStart(event) {
        if (event.fromState !== 'void') {
            this.isCollapsing = true;
            this.collapseStart.emit(event);
        }
    }
    onCollapseDone(event) {
        if (event.fromState !== 'void') {
            this.isCollapsing = false;
            this.collapseDone.emit(event);
        }
    }
}
BoxComponent.ɵfac = function BoxComponent_Factory(t) { return new (t || BoxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
BoxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BoxComponent, selectors: [["mk-box"]], contentQueries: function BoxComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxHeaderDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxFooterDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxContentDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxToolsDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxHeaderDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxFooterDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxContentDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxToolsDirective = _t.first);
    } }, viewQuery: function BoxComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c13, true);
        ɵngcc0.ɵɵviewQuery(_c11, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toggleButtonElement = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeButtonElement = _t.first);
    } }, inputs: { boxColor: "boxColor", buttonsStyleClass: "buttonsStyleClass", contentStyleClass: "contentStyleClass", footerStyleClass: "footerStyleClass", headerBorder: "headerBorder", headerStyleClass: "headerStyleClass", isCollapsable: "isCollapsable", isCollapsed: "isCollapsed", isLoading: "isLoading", isRemovable: "isRemovable", isSolid: "isSolid", loadingStyleClass: "loadingStyleClass", styleClass: "styleClass", contentColor: "contentColor", footer: "footer", footerColor: "footerColor", header: "header", headerColor: "headerColor", loadingColor: "loadingColor" }, outputs: { collapseDone: "collapseDone", collapseStart: "collapseStart" }, ngContentSelectors: _c16, decls: 1, vars: 1, consts: [["mkColorProperty", "border-color", "mkColorPrefix", "box", 3, "mkColor", "ngClass", "collapsed-box", "box-solid", "mkCollapseAnimation", "mkCollapseAnimation.done", 4, "ngIf"], ["mkColorProperty", "border-color", "mkColorPrefix", "box", 3, "mkColor", "ngClass", "mkCollapseAnimation", "mkCollapseAnimation.done"], ["mkColorProperty", "background-color", 3, "ngClass", "mkColor", "mkColorCondition", "with-border", 4, "ngIf"], [3, "ngClass", "mkFontColor", "mkCollapseAnimation", "mkCollapseAnimation.start", "mkCollapseAnimation.done"], [1, "box-body"], [4, "ngIf", "ngIfElse"], ["noDirective", ""], [3, "ngClass", "mkFontColor", 4, "ngIf"], ["class", "overlay", 4, "ngIf"], ["mkColorProperty", "background-color", 3, "ngClass", "mkColor", "mkColorCondition"], [1, "box-title", 3, "mkFontColor"], [1, "box-tools", "pull-right"], ["type", "button", 3, "ngClass", 4, "ngIf"], ["type", "button", 3, "ngClass"], ["toggleButtonElement", ""], [1, "fa", 3, "ngClass"], ["removeButtonElement", ""], [1, "fa", "fa-times"], [3, "ngClass", "mkFontColor"], [1, "overlay"]], template: function BoxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c15);
        ɵngcc0.ɵɵtemplate(0, BoxComponent_div_0_Template, 9, 15, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.removed);
    } }, directives: [ɵngcc2.NgIf, BackgroundColorDirective, ɵngcc2.NgClass, CollapseAnimationDirective, ColorDirective], styles: [".box.collapsed-box[_ngcontent-%COMP%]   .box-body[_ngcontent-%COMP%], .box.collapsed-box[_ngcontent-%COMP%]   .box-footer[_ngcontent-%COMP%]{display:inherit}.box-solid[_ngcontent-%COMP%]{border:1px solid}.box-body[_ngcontent-%COMP%]{background-color:#fff}.box.box-solid.bg-color[_ngcontent-%COMP%] > .box-header[_ngcontent-%COMP%]{color:#fff}"], changeDetection: 0 });
BoxComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NgZone },
    { type: Renderer2 }
];
BoxComponent.propDecorators = {
    boxColor: [{ type: Input }],
    buttonsStyleClass: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    contentColor: [{ type: Input }],
    footer: [{ type: Input }],
    footerColor: [{ type: Input }],
    footerStyleClass: [{ type: Input }],
    header: [{ type: Input }],
    headerBorder: [{ type: Input }],
    headerColor: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    isCollapsable: [{ type: Input }],
    isCollapsed: [{ type: Input }],
    isLoading: [{ type: Input }],
    isRemovable: [{ type: Input }],
    isSolid: [{ type: Input }],
    loadingColor: [{ type: Input }],
    loadingStyleClass: [{ type: Input }],
    styleClass: [{ type: Input }],
    collapseDone: [{ type: Output }],
    collapseStart: [{ type: Output }],
    boxHeaderDirective: [{ type: ContentChild, args: [BoxHeaderDirective,] }],
    boxFooterDirective: [{ type: ContentChild, args: [BoxFooterDirective,] }],
    boxContentDirective: [{ type: ContentChild, args: [BoxContentDirective,] }],
    boxToolsDirective: [{ type: ContentChild, args: [BoxToolsDirective,] }],
    toggleButtonElement: [{ type: ViewChild, args: ['toggleButtonElement',] }],
    removeButtonElement: [{ type: ViewChild, args: ['removeButtonElement',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxComponent, [{
        type: Component,
        args: [{
                selector: 'mk-box',
                template: "<div *ngIf=\"!removed\" [mkColor]=\"boxColor\" mkColorProperty=\"border-color\" mkColorPrefix=\"box\" [ngClass]=\"styleClass\" [class.collapsed-box]=\"isCollapsed && !isCollapsing\" [class.box-solid]=\"isSolid\" [mkCollapseAnimation]=\"remove\" (mkCollapseAnimation.done)=\"removedDone($event)\">\n  <div *ngIf=\"header || boxHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkColor]=\"boxColor\" [mkColorCondition]=\"isSolid\" mkColorProperty=\"background-color\" [class.with-border]=\"headerBorder\">\n    <h3 class=\"box-title\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </h3>\n    <div class=\"box-tools pull-right\">\n      <ng-content select=\"mk-box-tools\"></ng-content>\n      <button *ngIf=\"isCollapsable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #toggleButtonElement>\n        <i class=\"fa\" [ngClass]=\"{'fa-plus': isCollapsed, 'fa-minus': !isCollapsed}\"></i>\n      </button>\n      <button *ngIf=\"isRemovable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #removeButtonElement>\n        <i class=\"fa fa-times\"></i>\n      </button>\n    </div>\n  </div>\n  <div [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\" [mkCollapseAnimation]=\"isCollapsed\" (mkCollapseAnimation.start)=\"onCollapseStart($event)\" (mkCollapseAnimation.done)=\"onCollapseDone($event)\">\n    <div class=\"box-body\">\n      <ng-container *ngIf=\"boxHeaderDirective || boxContentDirective || boxFooterDirective || boxToolsDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </div>\n    <div *ngIf=\"footer || boxFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isLoading\" class=\"overlay\">\n    <i [ngClass]=\"loadingStyleClass\" [mkFontColor]=\"loadingColor\"></i>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".box.collapsed-box .box-body,.box.collapsed-box .box-footer{display:inherit}.box-solid{border:1px solid}.box-body{background-color:#fff}.box.box-solid.bg-color>.box-header{color:#fff}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { boxColor: [{
            type: Input
        }], buttonsStyleClass: [{
            type: Input
        }], contentStyleClass: [{
            type: Input
        }], footerStyleClass: [{
            type: Input
        }], headerBorder: [{
            type: Input
        }], headerStyleClass: [{
            type: Input
        }], isCollapsable: [{
            type: Input
        }], isCollapsed: [{
            type: Input
        }], isLoading: [{
            type: Input
        }], isRemovable: [{
            type: Input
        }], isSolid: [{
            type: Input
        }], loadingStyleClass: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], collapseDone: [{
            type: Output
        }], collapseStart: [{
            type: Output
        }], contentColor: [{
            type: Input
        }], footer: [{
            type: Input
        }], footerColor: [{
            type: Input
        }], header: [{
            type: Input
        }], headerColor: [{
            type: Input
        }], loadingColor: [{
            type: Input
        }], boxHeaderDirective: [{
            type: ContentChild,
            args: [BoxHeaderDirective]
        }], boxFooterDirective: [{
            type: ContentChild,
            args: [BoxFooterDirective]
        }], boxContentDirective: [{
            type: ContentChild,
            args: [BoxContentDirective]
        }], boxToolsDirective: [{
            type: ContentChild,
            args: [BoxToolsDirective]
        }], toggleButtonElement: [{
            type: ViewChild,
            args: ['toggleButtonElement']
        }], removeButtonElement: [{
            type: ViewChild,
            args: ['removeButtonElement']
        }] }); })();

class BoxModule {
}
BoxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BoxModule });
BoxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BoxModule_Factory(t) { return new (t || BoxModule)(); }, imports: [[CommonModule, AnimationsModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BoxModule, { declarations: function () { return [BoxComponent, BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective]; }, imports: function () { return [CommonModule, AnimationsModule, ColorModule]; }, exports: function () { return [BoxComponent, BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AnimationsModule, ColorModule],
                exports: [BoxComponent, BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective],
                declarations: [BoxComponent, BoxHeaderDirective, BoxContentDirective, BoxFooterDirective, BoxToolsDirective]
            }]
    }], null, null); })();

class BoxInfoContentDirective {
}
BoxInfoContentDirective.ɵfac = function BoxInfoContentDirective_Factory(t) { return new (t || BoxInfoContentDirective)(); };
BoxInfoContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxInfoContentDirective, selectors: [["mk-box-info-content"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxInfoContentDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-info-content'
            }]
    }], null, null); })();
class BoxInfoFooterDirective {
}
BoxInfoFooterDirective.ɵfac = function BoxInfoFooterDirective_Factory(t) { return new (t || BoxInfoFooterDirective)(); };
BoxInfoFooterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxInfoFooterDirective, selectors: [["mk-box-info-footer"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxInfoFooterDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-info-footer'
            }]
    }], null, null); })();
class BoxInfoHeaderDirective {
}
BoxInfoHeaderDirective.ɵfac = function BoxInfoHeaderDirective_Factory(t) { return new (t || BoxInfoHeaderDirective)(); };
BoxInfoHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxInfoHeaderDirective, selectors: [["mk-box-info-header"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxInfoHeaderDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-info-header'
            }]
    }], null, null); })();

class BoxInfoComponent {
    constructor() {
        this.contentStyleClass = 'info-box-number';
        this.footerStyleClass = 'progress-description';
        this.headerStyleClass = 'info-box-text';
        this.iconColor = '#fff';
        this.iconStyleClass = 'ion ion-bag';
        this.styleClass = 'info-box';
    }
    ngOnInit() {
        if (!this.backgroundColor) {
            this.progressBarBg = this.iconBackgroundColor;
        }
    }
}
BoxInfoComponent.ɵfac = function BoxInfoComponent_Factory(t) { return new (t || BoxInfoComponent)(); };
BoxInfoComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BoxInfoComponent, selectors: [["mk-box-info"]], contentQueries: function BoxInfoComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxInfoHeaderDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxInfoFooterDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxInfoContentDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxInfoHeaderDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxInfoFooterDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxInfoContentDirective = _t.first);
    } }, inputs: { contentStyleClass: "contentStyleClass", footerStyleClass: "footerStyleClass", headerStyleClass: "headerStyleClass", iconColor: "iconColor", iconStyleClass: "iconStyleClass", styleClass: "styleClass", backgroundColor: "backgroundColor", contentColor: "contentColor", footer: "footer", footerColor: "footerColor", header: "header", headerColor: "headerColor", iconBackgroundColor: "iconBackgroundColor", progressWidth: "progressWidth" }, ngContentSelectors: _c18, decls: 11, vars: 12, consts: [["mkColorProperty", "background-color", 3, "ngClass", "mkColor"], ["mkColorProperty", "background-color", 1, "info-box-icon", 3, "mkColor"], [3, "ngClass", "mkFontColor"], [1, "info-box-content"], [3, "ngClass", "mkFontColor", 4, "ngIf"], [4, "ngIf", "ngIfElse"], ["noDirective", ""], ["class", "progress", 4, "ngIf"], [1, "progress"], ["mkColorProperty", "background-color", 1, "progress-bar", 3, "mkColor"]], template: function BoxInfoComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c17);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵelement(2, "i", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵtemplate(4, BoxInfoComponent_span_4_Template, 3, 3, "span", 4);
        ɵngcc0.ɵɵelementStart(5, "span", 2);
        ɵngcc0.ɵɵtemplate(6, BoxInfoComponent_ng_container_6_Template, 2, 0, "ng-container", 5);
        ɵngcc0.ɵɵtemplate(7, BoxInfoComponent_ng_template_7_Template, 1, 0, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, BoxInfoComponent_div_9_Template, 2, 3, "div", 7);
        ɵngcc0.ɵɵtemplate(10, BoxInfoComponent_span_10_Template, 3, 3, "span", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵproperty("ngClass", ctx.styleClass)("mkColor", ctx.backgroundColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("mkColor", ctx.iconBackgroundColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.iconStyleClass)("mkFontColor", ctx.iconColor);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header || ctx.boxInfoHeaderDirective);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.contentStyleClass)("mkFontColor", ctx.contentColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.boxInfoHeaderDirective || ctx.boxInfoContentDirective || ctx.boxInfoFooterDirective)("ngIfElse", _r2);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.progressWidth);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footer || ctx.boxInfoFooterDirective);
    } }, directives: [ɵngcc2.NgClass, BackgroundColorDirective, ColorDirective, ɵngcc2.NgIf], styles: [".info-box.bg-color[_ngcontent-%COMP%] > .info-box-content[_ngcontent-%COMP%]{color:#fff}"] });
BoxInfoComponent.propDecorators = {
    backgroundColor: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    contentColor: [{ type: Input }],
    footer: [{ type: Input }],
    footerColor: [{ type: Input }],
    footerStyleClass: [{ type: Input }],
    header: [{ type: Input }],
    headerColor: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    iconBackgroundColor: [{ type: Input }],
    iconColor: [{ type: Input }],
    iconStyleClass: [{ type: Input }],
    progressWidth: [{ type: Input }],
    styleClass: [{ type: Input }],
    boxInfoHeaderDirective: [{ type: ContentChild, args: [BoxInfoHeaderDirective,] }],
    boxInfoFooterDirective: [{ type: ContentChild, args: [BoxInfoFooterDirective,] }],
    boxInfoContentDirective: [{ type: ContentChild, args: [BoxInfoContentDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxInfoComponent, [{
        type: Component,
        args: [{
                selector: 'mk-box-info',
                template: "<div [ngClass]=\"styleClass\" [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\">\n  <span class=\"info-box-icon\" [mkColor]=\"iconBackgroundColor\" mkColorProperty=\"background-color\">\n    <i [ngClass]=\"iconStyleClass\" [mkFontColor]=\"iconColor\"></i>\n  </span>\n  <div class=\"info-box-content\">\n    <span *ngIf=\"header || boxInfoHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </span>\n    <span [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\">\n      <ng-container *ngIf=\"boxInfoHeaderDirective || boxInfoContentDirective || boxInfoFooterDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </span>\n    <div *ngIf=\"progressWidth\" class=\"progress\">\n      <div class=\"progress-bar\" [mkColor]=\"progressBarBg\" mkColorProperty=\"background-color\" [style.width.%]=\"progressWidth\"></div>\n    </div>\n    <span *ngIf=\"footer || boxInfoFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </span>\n  </div>\n</div>\n",
                styles: [".info-box.bg-color>.info-box-content{color:#fff}"]
            }]
    }], function () { return []; }, { contentStyleClass: [{
            type: Input
        }], footerStyleClass: [{
            type: Input
        }], headerStyleClass: [{
            type: Input
        }], iconColor: [{
            type: Input
        }], iconStyleClass: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], backgroundColor: [{
            type: Input
        }], contentColor: [{
            type: Input
        }], footer: [{
            type: Input
        }], footerColor: [{
            type: Input
        }], header: [{
            type: Input
        }], headerColor: [{
            type: Input
        }], iconBackgroundColor: [{
            type: Input
        }], progressWidth: [{
            type: Input
        }], boxInfoHeaderDirective: [{
            type: ContentChild,
            args: [BoxInfoHeaderDirective]
        }], boxInfoFooterDirective: [{
            type: ContentChild,
            args: [BoxInfoFooterDirective]
        }], boxInfoContentDirective: [{
            type: ContentChild,
            args: [BoxInfoContentDirective]
        }] }); })();

class BoxInfoModule {
}
BoxInfoModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BoxInfoModule });
BoxInfoModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BoxInfoModule_Factory(t) { return new (t || BoxInfoModule)(); }, imports: [[CommonModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BoxInfoModule, { declarations: function () { return [BoxInfoComponent, BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective]; }, imports: function () { return [CommonModule, ColorModule]; }, exports: function () { return [BoxInfoComponent, BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxInfoModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ColorModule],
                exports: [BoxInfoComponent, BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective],
                declarations: [BoxInfoComponent, BoxInfoHeaderDirective, BoxInfoContentDirective, BoxInfoFooterDirective]
            }]
    }], null, null); })();

class BoxSmallFooterDirective {
}
BoxSmallFooterDirective.ɵfac = function BoxSmallFooterDirective_Factory(t) { return new (t || BoxSmallFooterDirective)(); };
BoxSmallFooterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxSmallFooterDirective, selectors: [["mk-box-small-footer"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxSmallFooterDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-small-footer'
            }]
    }], null, null); })();
class BoxSmallHeaderDirective {
}
BoxSmallHeaderDirective.ɵfac = function BoxSmallHeaderDirective_Factory(t) { return new (t || BoxSmallHeaderDirective)(); };
BoxSmallHeaderDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxSmallHeaderDirective, selectors: [["mk-box-small-header"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxSmallHeaderDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-small-header'
            }]
    }], null, null); })();
class BoxSmallContentDirective {
}
BoxSmallContentDirective.ɵfac = function BoxSmallContentDirective_Factory(t) { return new (t || BoxSmallContentDirective)(); };
BoxSmallContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BoxSmallContentDirective, selectors: [["mk-box-small-content"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxSmallContentDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-box-small-content'
            }]
    }], null, null); })();

class BoxSmallComponent {
    constructor() {
        this.contentStyleClass = 'small-box-content';
        this.footerStyleClass = 'small-box-footer';
        this.headerStyleClass = 'small-box-header';
        this.iconStyleClass = 'ion ion-bag';
        this.styleClass = 'small-box';
    }
}
BoxSmallComponent.ɵfac = function BoxSmallComponent_Factory(t) { return new (t || BoxSmallComponent)(); };
BoxSmallComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BoxSmallComponent, selectors: [["mk-box-small"]], contentQueries: function BoxSmallComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxSmallHeaderDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxSmallFooterDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, BoxSmallContentDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxSmallHeaderDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxSmallFooterDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.boxSmallContentDirective = _t.first);
    } }, inputs: { contentStyleClass: "contentStyleClass", footerStyleClass: "footerStyleClass", headerStyleClass: "headerStyleClass", iconStyleClass: "iconStyleClass", styleClass: "styleClass", backgroundColor: "backgroundColor", contentColor: "contentColor", footer: "footer", footerColor: "footerColor", header: "header", headerColor: "headerColor", iconColor: "iconColor" }, ngContentSelectors: _c20, decls: 9, vars: 9, consts: [["mkColorProperty", "background-color", 3, "ngClass", "mkColor"], [1, "inner"], [3, "ngClass", "mkFontColor", 4, "ngIf"], [3, "ngClass", "mkFontColor"], [4, "ngIf", "ngIfElse"], ["noDirective", ""], ["class", "icon", 4, "ngIf"], [1, "icon"]], template: function BoxSmallComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c19);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, BoxSmallComponent_h3_2_Template, 3, 3, "h3", 2);
        ɵngcc0.ɵɵelementStart(3, "p", 3);
        ɵngcc0.ɵɵtemplate(4, BoxSmallComponent_ng_container_4_Template, 2, 0, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(5, BoxSmallComponent_ng_template_5_Template, 1, 0, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, BoxSmallComponent_div_7_Template, 2, 2, "div", 6);
        ɵngcc0.ɵɵtemplate(8, BoxSmallComponent_span_8_Template, 3, 3, "span", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(6);
        ɵngcc0.ɵɵproperty("ngClass", ctx.styleClass)("mkColor", ctx.backgroundColor);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.header || ctx.boxSmallHeaderDirective);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.contentStyleClass)("mkFontColor", ctx.contentColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.boxSmallHeaderDirective || ctx.boxSmallContentDirective || ctx.boxSmallFooterDirective)("ngIfElse", _r2);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.iconStyleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.footer || ctx.boxSmallFooterDirective);
    } }, directives: [ɵngcc2.NgClass, BackgroundColorDirective, ɵngcc2.NgIf, ColorDirective], styles: [".small-box.bg-color[_ngcontent-%COMP%]{color:#fff}  .small-box-footer:hover{cursor:pointer}  .small-box-footer a{color:hsla(0,0%,100%,.8)}  .small-box-footer:hover a{color:#fff}"] });
BoxSmallComponent.propDecorators = {
    backgroundColor: [{ type: Input }],
    contentColor: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    footer: [{ type: Input }],
    footerColor: [{ type: Input }],
    footerStyleClass: [{ type: Input }],
    header: [{ type: Input }],
    headerColor: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    iconColor: [{ type: Input }],
    iconStyleClass: [{ type: Input }],
    styleClass: [{ type: Input }],
    boxSmallHeaderDirective: [{ type: ContentChild, args: [BoxSmallHeaderDirective,] }],
    boxSmallFooterDirective: [{ type: ContentChild, args: [BoxSmallFooterDirective,] }],
    boxSmallContentDirective: [{ type: ContentChild, args: [BoxSmallContentDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxSmallComponent, [{
        type: Component,
        args: [{
                selector: 'mk-box-small',
                template: "<div [ngClass]=\"styleClass\" [mkColor]=\"backgroundColor\" mkColorProperty=\"background-color\">\n  <div class=\"inner\">\n    <h3 *ngIf=\"header || boxSmallHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-small-header\"></ng-content>\n    </h3>\n    <p [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\">\n      <ng-container *ngIf=\"boxSmallHeaderDirective || boxSmallContentDirective || boxSmallFooterDirective; else noDirective\">\n        <ng-content select=\"mk-box-small-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </p>\n  </div>\n  <div *ngIf=\"iconStyleClass\" class=\"icon\">\n    <i [ngClass]=\"iconStyleClass\" [mkFontColor]=\"iconColor\"></i>\n  </div>\n  <span *ngIf=\"footer || boxSmallFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n    {{footer}}\n    <ng-content select=\"mk-box-small-footer\"></ng-content>\n  </span>\n</div>\n",
                styles: [".small-box.bg-color{color:#fff}/deep/ .small-box-footer:hover{cursor:pointer}/deep/ .small-box-footer a{color:hsla(0,0%,100%,.8)}/deep/ .small-box-footer:hover a{color:#fff}"]
            }]
    }], function () { return []; }, { contentStyleClass: [{
            type: Input
        }], footerStyleClass: [{
            type: Input
        }], headerStyleClass: [{
            type: Input
        }], iconStyleClass: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], backgroundColor: [{
            type: Input
        }], contentColor: [{
            type: Input
        }], footer: [{
            type: Input
        }], footerColor: [{
            type: Input
        }], header: [{
            type: Input
        }], headerColor: [{
            type: Input
        }], iconColor: [{
            type: Input
        }], boxSmallHeaderDirective: [{
            type: ContentChild,
            args: [BoxSmallHeaderDirective]
        }], boxSmallFooterDirective: [{
            type: ContentChild,
            args: [BoxSmallFooterDirective]
        }], boxSmallContentDirective: [{
            type: ContentChild,
            args: [BoxSmallContentDirective]
        }] }); })();

class BoxSmallModule {
}
BoxSmallModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BoxSmallModule });
BoxSmallModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BoxSmallModule_Factory(t) { return new (t || BoxSmallModule)(); }, imports: [[CommonModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BoxSmallModule, { declarations: function () { return [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]; }, imports: function () { return [CommonModule, ColorModule]; }, exports: function () { return [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxSmallModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ColorModule],
                exports: [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective],
                declarations: [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]
            }]
    }], null, null); })();

class DropdownToggleComponent {
}
DropdownToggleComponent.ɵfac = function DropdownToggleComponent_Factory(t) { return new (t || DropdownToggleComponent)(); };
DropdownToggleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownToggleComponent, selectors: [["mk-dropdown-toggle"]], contentQueries: function DropdownToggleComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c21, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toggleElement = _t.first);
    } }, viewQuery: function DropdownToggleComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function DropdownToggleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, DropdownToggleComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2, changeDetection: 0 });
DropdownToggleComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }],
    toggleElement: [{ type: ContentChild, args: ['toggleElement',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownToggleComponent, [{
        type: Component,
        args: [{
                selector: 'mk-dropdown-toggle',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }], toggleElement: [{
            type: ContentChild,
            args: ['toggleElement']
        }] }); })();
class DropdownMenuComponent {
}
DropdownMenuComponent.ɵfac = function DropdownMenuComponent_Factory(t) { return new (t || DropdownMenuComponent)(); };
DropdownMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownMenuComponent, selectors: [["mk-dropdown-menu"]], viewQuery: function DropdownMenuComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function DropdownMenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, DropdownMenuComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2, changeDetection: 0 });
DropdownMenuComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownMenuComponent, [{
        type: Component,
        args: [{
                selector: 'mk-dropdown-menu',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class DropdownComponent {
    constructor(changeDetectorRef, elementRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.elementRef = elementRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.buttonStyleClass = 'btn dropdown-toggle';
        this.buttonBackgroundColor = 'default';
        this.contentStyleClass = 'dropdown-menu';
        this.isCollapsed = true;
        this.isWrapper = true;
        this.styleClass = 'dropdown';
        this.collapseStart = new EventEmitter();
        this.collapseDone = new EventEmitter();
        this.listeners = [];
    }
    ngAfterViewInit() {
        const toggleNativeElement = this.dropdownToggleComponent && this.dropdownToggleComponent.toggleElement ?
            this.dropdownToggleComponent.toggleElement.nativeElement : this.toggleElement ?
            this.toggleElement : this.defaultToggleElement ?
            this.defaultToggleElement.nativeElement : null;
        if (toggleNativeElement) {
            this.ngZone.runOutsideAngular(() => {
                this.listeners.push(this.renderer2.listen(toggleNativeElement, 'click', (event) => {
                    this.toggleDropdown(event);
                    this.changeDetectorRef.detectChanges();
                }));
            });
        }
    }
    ngOnDestroy() {
        this.unBindDocumentClickListener();
        removeListeners(this.listeners);
    }
    toggleDropdown(event) {
        event.preventDefault();
        this.isCollapsed = !this.isCollapsed;
        if (!this.isCollapsed) {
            this.ngZone.runOutsideAngular(() => {
                setTimeout(() => {
                    this.bindDocumentClickListener();
                });
            });
        }
        else {
            this.unBindDocumentClickListener();
        }
    }
    onCollapseStart(event) {
        this.collapseStart.emit(event);
    }
    onCollapseDone(event) {
        this.collapseStart.emit(event);
    }
    bindDocumentClickListener() {
        this.ngZone.runOutsideAngular(() => {
            this.documentClickListener = this.renderer2.listen('document', 'click', () => {
                if (!this.isCollapsed) {
                    this.isCollapsed = true;
                    this.unBindDocumentClickListener();
                    this.changeDetectorRef.detectChanges();
                }
            });
        });
    }
    unBindDocumentClickListener() {
        if (this.documentClickListener) {
            this.documentClickListener();
        }
    }
}
DropdownComponent.ɵfac = function DropdownComponent_Factory(t) { return new (t || DropdownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
DropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownComponent, selectors: [["mk-dropdown"], ["", "mk-dropdown", ""]], contentQueries: function DropdownComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DropdownToggleComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, DropdownMenuComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownToggleComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownMenuComponent = _t.first);
    } }, viewQuery: function DropdownComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c21, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.defaultToggleElement = _t.first);
    } }, inputs: { buttonStyleClass: "buttonStyleClass", buttonBackgroundColor: "buttonBackgroundColor", contentStyleClass: "contentStyleClass", isCollapsed: "isCollapsed", isWrapper: "isWrapper", styleClass: "styleClass", toggleElement: "toggleElement", toggleText: "toggleText" }, outputs: { collapseStart: "collapseStart", collapseDone: "collapseDone" }, ngContentSelectors: _c4, decls: 5, vars: 2, consts: [["innerTemplate", ""], [3, "ngClass", 4, "ngIf", "ngIfElse"], ["noWrapper", ""], [3, "ngTemplateOutlet", 4, "ngIf", "ngIfElse"], ["noToggleElement", ""], [3, "ngClass", "mkCollapseAnimation", "mkCollapseAnimation.start", "mkCollapseAnimation.done"], ["noDropdownMenuComponent", ""], [3, "ngTemplateOutlet"], ["mkColorProperty", "background-color", "mkColorPrefix", "btn", 3, "mkColor", "ngClass", 4, "ngIf"], ["mkColorProperty", "background-color", "mkColorPrefix", "btn", 3, "mkColor", "ngClass"], ["toggleElement", ""], [3, "ngTemplateOutlet", 4, "ngIf"], [3, "ngClass"], [4, "ngTemplateOutlet"]], template: function DropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, DropdownComponent_ng_template_0_Template, 7, 6, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, DropdownComponent_div_2_Template, 2, 2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, DropdownComponent_ng_template_3_Template, 1, 1, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r3 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isWrapper)("ngIfElse", _r3);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, CollapseAnimationDirective, ɵngcc2.NgTemplateOutlet, BackgroundColorDirective], styles: [".dropdown-menu[_ngcontent-%COMP%]{display:block}.dropdown-menu.collapsing[_ngcontent-%COMP%]:not(.un-collapse){padding-bottom:0;padding-top:0;transition-property:height,padding-top,padding-bottom}"], changeDetection: 0 });
DropdownComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef },
    { type: NgZone },
    { type: Renderer2 }
];
DropdownComponent.propDecorators = {
    buttonStyleClass: [{ type: Input }],
    buttonBackgroundColor: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    isCollapsed: [{ type: Input }],
    isWrapper: [{ type: Input }],
    styleClass: [{ type: Input }],
    toggleElement: [{ type: Input }],
    toggleText: [{ type: Input }],
    collapseStart: [{ type: Output }],
    collapseDone: [{ type: Output }],
    dropdownToggleComponent: [{ type: ContentChild, args: [DropdownToggleComponent,] }],
    dropdownMenuComponent: [{ type: ContentChild, args: [DropdownMenuComponent,] }],
    defaultToggleElement: [{ type: ViewChild, args: ['toggleElement',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownComponent, [{
        type: Component,
        args: [{
                selector: 'mk-dropdown, [mk-dropdown]',
                template: "<ng-template #innerTemplate>\n  <ng-container *ngIf=\"dropdownToggleComponent && dropdownToggleComponent.toggleElement; else noToggleElement\" [ngTemplateOutlet]=\"dropdownToggleComponent.templateRef\"></ng-container>\n  <ng-template #noToggleElement>\n    <button *ngIf=\"toggleText || dropdownToggleComponent\" [mkColor]=\"buttonBackgroundColor\" mkColorProperty=\"background-color\" mkColorPrefix=\"btn\" [ngClass]=\"buttonStyleClass\" #toggleElement>\n      {{toggleText}}\n      <ng-container *ngIf=\"dropdownToggleComponent\" [ngTemplateOutlet]=\"dropdownToggleComponent.templateRef\"></ng-container>\n    </button>\n  </ng-template>\n  <ul [ngClass]=\"contentStyleClass\" [mkCollapseAnimation]=\"isCollapsed\" (mkCollapseAnimation.start)=\"onCollapseStart($event)\" (mkCollapseAnimation.done)=\"onCollapseDone($event)\">\n    <ng-container *ngIf=\"dropdownMenuComponent; else noDropdownMenuComponent\" [ngTemplateOutlet]=\"dropdownMenuComponent.templateRef\"></ng-container>\n    <ng-template #noDropdownMenuComponent>\n      <ng-content></ng-content>\n    </ng-template>\n  </ul>\n</ng-template>\n\n<div *ngIf=\"isWrapper; else noWrapper\" [ngClass]=\"styleClass\">\n  <ng-container *ngTemplateOutlet=\"innerTemplate\"></ng-container>\n</div>\n\n<ng-template #noWrapper>\n  <ng-container *ngTemplateOutlet=\"innerTemplate\"></ng-container>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".dropdown-menu{display:block}.dropdown-menu.collapsing:not(.un-collapse){padding-bottom:0;padding-top:0;transition-property:height,padding-top,padding-bottom}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { buttonStyleClass: [{
            type: Input
        }], buttonBackgroundColor: [{
            type: Input
        }], contentStyleClass: [{
            type: Input
        }], isCollapsed: [{
            type: Input
        }], isWrapper: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], collapseStart: [{
            type: Output
        }], collapseDone: [{
            type: Output
        }], toggleElement: [{
            type: Input
        }], toggleText: [{
            type: Input
        }], dropdownToggleComponent: [{
            type: ContentChild,
            args: [DropdownToggleComponent]
        }], dropdownMenuComponent: [{
            type: ContentChild,
            args: [DropdownMenuComponent]
        }], defaultToggleElement: [{
            type: ViewChild,
            args: ['toggleElement']
        }] }); })();

class DropdownModule {
}
DropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DropdownModule });
DropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DropdownModule_Factory(t) { return new (t || DropdownModule)(); }, imports: [[CommonModule, AnimationsModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownModule, { declarations: function () { return [DropdownComponent, DropdownToggleComponent, DropdownMenuComponent]; }, imports: function () { return [CommonModule, AnimationsModule, ColorModule]; }, exports: function () { return [DropdownComponent, DropdownToggleComponent, DropdownMenuComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, AnimationsModule, ColorModule],
                exports: [DropdownComponent, DropdownToggleComponent, DropdownMenuComponent],
                declarations: [DropdownComponent, DropdownToggleComponent, DropdownMenuComponent]
            }]
    }], null, null); })();

class ClassService {
    constructor(elementRef, renderer2) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.currentClasses = [];
    }
    applyClasses(cssClasses) {
        if (typeof cssClasses === 'string') {
            cssClasses = cssClasses.split(' ');
        }
        // Remove only classes that are not in cssClasses
        const classesToRemove = this.currentClasses.filter(x => cssClasses.indexOf(x) === -1);
        classesToRemove.forEach(cssClasse => {
            if (cssClasse) {
                this.renderer2.removeClass(this.elementRef.nativeElement, cssClasse);
            }
        });
        // Add only classes that are not in currentClasses
        const classesToAdd = cssClasses.filter(x => this.currentClasses.indexOf(x) === -1);
        classesToAdd.forEach(cssClasse => {
            if (cssClasse) {
                this.renderer2.addClass(this.elementRef.nativeElement, cssClasse);
            }
        });
        // Update current classes for future updates
        this.currentClasses = [...cssClasses];
    }
}
ClassService.ɵfac = function ClassService_Factory(t) { return new (t || ClassService)(ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(ɵngcc0.Renderer2)); };
ClassService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ClassService, factory: ClassService.ɵfac });
ClassService.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ClassService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();

// @TODO onFocus Color
class InputTextDirective {
    constructor(elementRef, renderer2, ngControl, colorService, classService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.ngControl = ngControl;
        this.colorService = colorService;
        this.classService = classService;
        this.defaultClass = 'form-control';
        this.isSetClass = false;
        this.onKeyUp = new Subject();
        this.onKeyup = this.onKeyUp.asObservable();
    }
    set borderColor(color) {
        this.colorService.setBackgroundColor(color, true, 'border-color', '');
    }
    set class(className) {
        this.isSetClass = true;
        this.classService.applyClasses(className);
    }
    set color(color) {
        this.colorService.setFontColor(color);
    }
    keyUpListener() {
        this.onKeyUp.next(this.ngControl);
    }
    ngOnInit() {
        if (!this.isSetClass) {
            this.classService.applyClasses(this.defaultClass);
        }
    }
}
InputTextDirective.ɵfac = function InputTextDirective_Factory(t) { return new (t || InputTextDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl), ɵngcc0.ɵɵdirectiveInject(ColorService), ɵngcc0.ɵɵdirectiveInject(ClassService)); };
InputTextDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputTextDirective, selectors: [["", "mkInputText", ""]], hostBindings: function InputTextDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup", function InputTextDirective_keyup_HostBindingHandler() { return ctx.keyUpListener(); });
    } }, inputs: { borderColor: "borderColor", class: "class", color: "color" }, features: [ɵngcc0.ɵɵProvidersFeature([ColorService, ClassService])] });
InputTextDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: NgControl },
    { type: ColorService },
    { type: ClassService }
];
InputTextDirective.propDecorators = {
    borderColor: [{ type: Input }],
    class: [{ type: Input }],
    color: [{ type: Input }],
    keyUpListener: [{ type: HostListener, args: ['keyup',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputTextDirective, [{
        type: Directive,
        args: [{
                selector: '[mkInputText]',
                providers: [ColorService, ClassService]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc4.NgControl }, { type: ColorService }, { type: ClassService }]; }, { borderColor: [{
            type: Input
        }], class: [{
            type: Input
        }], color: [{
            type: Input
        }], keyUpListener: [{
            type: HostListener,
            args: ['keyup']
        }] }); })();

class InputTextModule {
}
InputTextModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InputTextModule });
InputTextModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InputTextModule_Factory(t) { return new (t || InputTextModule)(); }, imports: [[
            CommonModule,
            ColorModule,
            FormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputTextModule, { declarations: function () { return [InputTextDirective]; }, imports: function () { return [CommonModule, ColorModule, FormsModule]; }, exports: function () { return [InputTextDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputTextModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    ColorModule,
                    FormsModule
                ],
                exports: [InputTextDirective],
                declarations: [InputTextDirective]
            }]
    }], null, null); })();

class InputGroupLabelDirective {
}
InputGroupLabelDirective.ɵfac = function InputGroupLabelDirective_Factory(t) { return new (t || InputGroupLabelDirective)(); };
InputGroupLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputGroupLabelDirective, selectors: [["mk-input-group-label"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputGroupLabelDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-input-group-label'
            }]
    }], null, null); })();
class InputGroupAddonLeftDirective {
}
InputGroupAddonLeftDirective.ɵfac = function InputGroupAddonLeftDirective_Factory(t) { return new (t || InputGroupAddonLeftDirective)(); };
InputGroupAddonLeftDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputGroupAddonLeftDirective, selectors: [["mk-input-group-addon-left"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputGroupAddonLeftDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-input-group-addon-left'
            }]
    }], null, null); })();
class InputGroupAddonRightDirective {
}
InputGroupAddonRightDirective.ɵfac = function InputGroupAddonRightDirective_Factory(t) { return new (t || InputGroupAddonRightDirective)(); };
InputGroupAddonRightDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputGroupAddonRightDirective, selectors: [["mk-input-group-addon-right"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputGroupAddonRightDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-input-group-addon-right'
            }]
    }], null, null); })();
class InputGroupContentDirective {
}
InputGroupContentDirective.ɵfac = function InputGroupContentDirective_Factory(t) { return new (t || InputGroupContentDirective)(); };
InputGroupContentDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: InputGroupContentDirective, selectors: [["mk-input-group-content"]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputGroupContentDirective, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'mk-input-group-content'
            }]
    }], null, null); })();

class InputGroupComponent {
    constructor() {
        this.inputColor = 'default';
        this.inputErrorColor = 'danger';
        this.inputValidColor = 'success';
        this.wrapperClasses = 'form-group';
        this.subscriptions = [];
    }
    ngAfterContentInit() {
        if (this.inputTextDirective) {
            this.subscriptions.push(this.inputTextDirective.onKeyup.subscribe((value) => {
                if (value.invalid) {
                    this.currentColor = this.inputErrorColor;
                    this.currentFontColor = this.inputErrorFontColor;
                }
                else if (!value.invalid) {
                    this.currentColor = this.inputValidColor;
                    this.currentFontColor = this.inputValidFontColor;
                }
                else {
                    this.currentColor = this.inputColor;
                    this.currentFontColor = this.inputFontColor;
                }
            }));
        }
    }
    ngOnDestroy() {
        removeSubscriptions(this.subscriptions);
    }
}
InputGroupComponent.ɵfac = function InputGroupComponent_Factory(t) { return new (t || InputGroupComponent)(); };
InputGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InputGroupComponent, selectors: [["mk-input-group"]], contentQueries: function InputGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, InputGroupLabelDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, InputGroupAddonLeftDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, InputGroupAddonRightDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, InputGroupContentDirective, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, InputTextDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputGroupLabelDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputGroupAddonLeftDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputGroupAddonRightDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputGroupContentDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputTextDirective = _t.first);
    } }, inputs: { inputColor: "inputColor", inputErrorColor: "inputErrorColor", inputValidColor: "inputValidColor", wrapperClasses: "wrapperClasses", addonLeft: "addonLeft", addonRight: "addonRight", inputFontColor: "inputFontColor", inputErrorFontColor: "inputErrorFontColor", inputValidFontColor: "inputValidFontColor", label: "label" }, ngContentSelectors: _c23, decls: 5, vars: 5, consts: [["mkColorPrefix", "has", 3, "ngClass", "mkColor"], [4, "ngIf"], ["class", "input-group", 4, "ngIf", "ngIfElse"], ["noAddon", ""], [1, "input-group"], ["class", "input-group-addon", 4, "ngIf"], [1, "input-group-addon"]], template: function InputGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c22);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, InputGroupComponent_label_1_Template, 3, 1, "label", 1);
        ɵngcc0.ɵɵtemplate(2, InputGroupComponent_div_2_Template, 4, 2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, InputGroupComponent_ng_template_3_Template, 1, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵproperty("ngClass", ctx.wrapperClasses)("mkColor", ctx.currentColor || ctx.inputColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.label || ctx.inputGroupLabelDirective);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.addonLeft || ctx.inputGroupAddonLeftDirective || ctx.addonRight || ctx.inputGroupAddonRightDirective)("ngIfElse", _r2);
    } }, directives: [ɵngcc2.NgClass, BackgroundColorDirective, ɵngcc2.NgIf], encapsulation: 2 });
InputGroupComponent.propDecorators = {
    addonLeft: [{ type: Input }],
    addonRight: [{ type: Input }],
    inputColor: [{ type: Input }],
    inputFontColor: [{ type: Input }],
    inputErrorColor: [{ type: Input }],
    inputErrorFontColor: [{ type: Input }],
    inputValidColor: [{ type: Input }],
    inputValidFontColor: [{ type: Input }],
    label: [{ type: Input }],
    wrapperClasses: [{ type: Input }],
    inputGroupLabelDirective: [{ type: ContentChild, args: [InputGroupLabelDirective,] }],
    inputGroupAddonLeftDirective: [{ type: ContentChild, args: [InputGroupAddonLeftDirective,] }],
    inputGroupAddonRightDirective: [{ type: ContentChild, args: [InputGroupAddonRightDirective,] }],
    inputGroupContentDirective: [{ type: ContentChild, args: [InputGroupContentDirective,] }],
    inputTextDirective: [{ type: ContentChild, args: [InputTextDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputGroupComponent, [{
        type: Component,
        args: [{
                selector: 'mk-input-group',
                template: "<div [ngClass]=\"wrapperClasses\" [mkColor]=\"currentColor || inputColor\" mkColorPrefix=\"has\">\n  <label *ngIf=\"label || inputGroupLabelDirective\">\n    {{label}}\n    <ng-content select=\"mk-input-group-label\"></ng-content>\n  </label>\n  <div *ngIf=\"addonLeft || inputGroupAddonLeftDirective || addonRight || inputGroupAddonRightDirective; else noAddon\" class=\"input-group\">\n    <span *ngIf=\"addonLeft || inputGroupAddonLeftDirective\" class=\"input-group-addon\">\n      {{addonLeft}}\n      <ng-content select=\"mk-input-group-addon-left\"></ng-content>\n    </span>\n    <ng-content select=\"mk-input-group-content\"></ng-content>\n    <span *ngIf=\"addonRight || inputGroupAddonRightDirective\" class=\"input-group-addon\">\n      {{addonRight}}\n      <ng-content select=\"mk-input-group-addon-right\"></ng-content>\n    </span>\n  </div>\n  <ng-template #noAddon><ng-content select=\"mk-input-group-content\"></ng-content></ng-template>\n</div>\n"
            }]
    }], function () { return []; }, { inputColor: [{
            type: Input
        }], inputErrorColor: [{
            type: Input
        }], inputValidColor: [{
            type: Input
        }], wrapperClasses: [{
            type: Input
        }], addonLeft: [{
            type: Input
        }], addonRight: [{
            type: Input
        }], inputFontColor: [{
            type: Input
        }], inputErrorFontColor: [{
            type: Input
        }], inputValidFontColor: [{
            type: Input
        }], label: [{
            type: Input
        }], inputGroupLabelDirective: [{
            type: ContentChild,
            args: [InputGroupLabelDirective]
        }], inputGroupAddonLeftDirective: [{
            type: ContentChild,
            args: [InputGroupAddonLeftDirective]
        }], inputGroupAddonRightDirective: [{
            type: ContentChild,
            args: [InputGroupAddonRightDirective]
        }], inputGroupContentDirective: [{
            type: ContentChild,
            args: [InputGroupContentDirective]
        }], inputTextDirective: [{
            type: ContentChild,
            args: [InputTextDirective]
        }] }); })();

class InputGroupModule {
}
InputGroupModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: InputGroupModule });
InputGroupModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function InputGroupModule_Factory(t) { return new (t || InputGroupModule)(); }, imports: [[
            CommonModule,
            ColorModule,
            FormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputGroupModule, { declarations: function () { return [InputGroupComponent, InputGroupLabelDirective, InputGroupAddonLeftDirective, InputGroupAddonRightDirective, InputGroupContentDirective]; }, imports: function () { return [CommonModule, ColorModule, FormsModule]; }, exports: function () { return [InputGroupComponent, InputGroupLabelDirective, InputGroupAddonLeftDirective, InputGroupAddonRightDirective, InputGroupContentDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InputGroupModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    ColorModule,
                    FormsModule
                ],
                exports: [InputGroupComponent, InputGroupLabelDirective, InputGroupAddonLeftDirective,
                    InputGroupAddonRightDirective, InputGroupContentDirective],
                declarations: [InputGroupComponent, InputGroupLabelDirective, InputGroupAddonLeftDirective,
                    InputGroupAddonRightDirective, InputGroupContentDirective]
            }]
    }], null, null); })();

class TabToggleDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
    }
}
TabToggleDirective.ɵfac = function TabToggleDirective_Factory(t) { return new (t || TabToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
TabToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TabToggleDirective, selectors: [["", "mkTabToggle", ""]], inputs: { tabComponent: ["mkTabToggle", "tabComponent"] } });
TabToggleDirective.ctorParameters = () => [
    { type: ElementRef }
];
TabToggleDirective.propDecorators = {
    tabComponent: [{ type: Input, args: ['mkTabToggle',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[mkTabToggle]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { tabComponent: [{
            type: Input,
            args: ['mkTabToggle']
        }] }); })();

class TabHeaderComponent {
}
TabHeaderComponent.ɵfac = function TabHeaderComponent_Factory(t) { return new (t || TabHeaderComponent)(); };
TabHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabHeaderComponent, selectors: [["mk-tab-header"]], viewQuery: function TabHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function TabHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabHeaderComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2, changeDetection: 0 });
TabHeaderComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mk-tab-header',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class TabContentComponent {
}
TabContentComponent.ɵfac = function TabContentComponent_Factory(t) { return new (t || TabContentComponent)(); };
TabContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabContentComponent, selectors: [["mk-tab-content"]], viewQuery: function TabContentComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function TabContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabContentComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2, changeDetection: 0 });
TabContentComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabContentComponent, [{
        type: Component,
        args: [{
                selector: 'mk-tab-content',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class TabComponent {
    constructor() {
        this.isDisabled = false;
        this.isActive = false;
    }
}
TabComponent.ɵfac = function TabComponent_Factory(t) { return new (t || TabComponent)(); };
TabComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabComponent, selectors: [["mk-tab"]], contentQueries: function TabComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabHeaderComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabContentComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabHeaderComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabContentComponent = _t.first);
    } }, viewQuery: function TabComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, inputs: { isDisabled: "isDisabled", header: "header", tabColor: "tabColor" }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function TabComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2, changeDetection: 0 });
TabComponent.propDecorators = {
    header: [{ type: Input }],
    isDisabled: [{ type: Input }],
    tabColor: [{ type: Input }],
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }],
    tabHeaderComponent: [{ type: ContentChild, args: [TabHeaderComponent,] }],
    tabContentComponent: [{ type: ContentChild, args: [TabContentComponent,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabComponent, [{
        type: Component,
        args: [{
                selector: 'mk-tab',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { isDisabled: [{
            type: Input
        }], header: [{
            type: Input
        }], tabColor: [{
            type: Input
        }], templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }], tabHeaderComponent: [{
            type: ContentChild,
            args: [TabHeaderComponent]
        }], tabContentComponent: [{
            type: ContentChild,
            args: [TabContentComponent]
        }] }); })();
class TabsHeaderComponent {
}
TabsHeaderComponent.ɵfac = function TabsHeaderComponent_Factory(t) { return new (t || TabsHeaderComponent)(); };
TabsHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsHeaderComponent, selectors: [["mk-tabs-header"]], viewQuery: function TabsHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c3, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c4, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function TabsHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, TabsHeaderComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2, changeDetection: 0 });
TabsHeaderComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mk-tabs-header',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
class TabsComponent {
    constructor(changeDetectorRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.headerStyleClass = 'header pull-left';
        this.navStyleClass = 'nav nav-tabs';
        this.contentStyleClass = 'tab-content';
        this.styleClass = 'nav-tabs-custom';
        this.closeTab = new EventEmitter();
        this.openTab = new EventEmitter();
        this.listeners = [];
        this.subscriptions = [];
    }
    set activeTabIndex(index) {
        this.activatedTabIndex = index;
        this.changeDetectorRef.detectChanges();
    }
    ngAfterContentInit() {
        // Set tab index on load.
        this.setTabIndex();
        // Update tab index if tabs is updated.
        if (this.tabs) {
            this.subscriptions.push(this.tabs.changes.subscribe(() => {
                this.setTabIndex();
            }));
        }
        // Open tab on load.
        this.openTabIndex();
    }
    ngAfterViewInit() {
        // Set tab toggles on load.
        this.setTabsToggle();
        // Update tab toggles if tabs is updated.
        if (this.tabToggleDirectives) {
            this.subscriptions.push(this.tabToggleDirectives.changes.subscribe(() => {
                this.setTabsToggle();
            }));
        }
    }
    ngOnChanges(changes) {
        if (changes.activeTabIndex) {
            this.openTabIndex();
        }
    }
    ngOnDestroy() {
        removeListeners(this.listeners);
        removeSubscriptions(this.subscriptions);
    }
    openTabIndex() {
        if (this.tabs) {
            this.tabs.forEach((tab) => {
                if (this.activatedTabIndex === tab.index || (this.activatedTabIndex === undefined && tab.index === 0)) {
                    tab.isActive = true;
                    this.openTab.emit({ index: tab.index });
                    this.changeDetectorRef.detectChanges();
                }
                else if (tab.isActive) {
                    tab.isActive = false;
                    this.closeTab.emit({ index: tab.index });
                    this.changeDetectorRef.detectChanges();
                }
            });
        }
    }
    onOpenTab(event, tabToOpen) {
        event.preventDefault();
        tabToOpen.isActive = true;
        this.openTab.emit({ event, index: tabToOpen.index });
        if (this.tabs) {
            this.tabs.forEach((tab) => {
                if (tab.isActive && tabToOpen !== tab) {
                    tab.isActive = false;
                    this.closeTab.emit({ event, index: tab.index });
                }
            });
        }
    }
    setTabIndex() {
        if (this.tabs) {
            this.tabs.forEach((tab, index) => {
                tab.index = index;
            });
        }
        this.changeDetectorRef.detectChanges();
    }
    setTabsToggle() {
        this.listeners = removeListeners(this.listeners);
        this.ngZone.runOutsideAngular(() => {
            var _a;
            (_a = this.tabToggleDirectives) === null || _a === void 0 ? void 0 : _a.forEach((tabToggle) => {
                this.listeners.push(this.renderer2.listen(tabToggle.elementRef.nativeElement, 'click', (event) => {
                    this.onOpenTab(event, tabToggle.tabComponent);
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
}
TabsComponent.ɵfac = function TabsComponent_Factory(t) { return new (t || TabsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
TabsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsComponent, selectors: [["mk-tabs"]], contentQueries: function TabsComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabsHeaderComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, TabComponent, false);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsHeaderComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);
    } }, viewQuery: function TabsComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(TabToggleDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabToggleDirectives = _t);
    } }, inputs: { headerStyleClass: "headerStyleClass", navStyleClass: "navStyleClass", contentStyleClass: "contentStyleClass", styleClass: "styleClass", activeTabIndex: "activeTabIndex", header: "header", tabsColor: "tabsColor" }, outputs: { closeTab: "closeTab", openTab: "openTab" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 6, vars: 8, consts: [[3, "ngClass"], ["mkColorProperty", "border-top-color", 3, "active", "mkColor", 4, "ngFor", "ngForOf"], [3, "ngClass", 4, "ngIf"], ["class", "tab-pane", 3, "active", 4, "ngFor", "ngForOf"], ["mkColorProperty", "border-top-color", 3, "mkColor"], ["href", "#", 3, "mkTabToggle", 4, "ngIf"], [3, "ngIf"], ["href", "#", 3, "mkTabToggle"], [4, "ngIf"], [3, "ngTemplateOutlet"], [1, "tab-pane"]], template: function TabsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 0);
        ɵngcc0.ɵɵtemplate(2, TabsComponent_li_2_Template, 3, 5, "li", 1);
        ɵngcc0.ɵɵtemplate(3, TabsComponent_li_3_Template, 3, 3, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 0);
        ɵngcc0.ɵɵtemplate(5, TabsComponent_div_5_Template, 3, 4, "div", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.styleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("pull-right", ctx.header || ctx.tabsHeaderComponent);
        ɵngcc0.ɵɵproperty("ngClass", ctx.navStyleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.tabsHeaderComponent || ctx.header);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.contentStyleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.tabs);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf, BackgroundColorDirective, TabToggleDirective, ɵngcc2.NgTemplateOutlet], styles: [".nav-tabs-custom[_ngcontent-%COMP%] > .nav-tabs[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{border-top-width:0}.nav-tabs-custom[_ngcontent-%COMP%] > .nav-tabs[_ngcontent-%COMP%] > li.active[_ngcontent-%COMP%]{border-top-width:3px}"], changeDetection: 0 });
TabsComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NgZone },
    { type: Renderer2 }
];
TabsComponent.propDecorators = {
    activeTabIndex: [{ type: Input }],
    header: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    navStyleClass: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    styleClass: [{ type: Input }],
    tabsColor: [{ type: Input }],
    closeTab: [{ type: Output }],
    openTab: [{ type: Output }],
    tabsHeaderComponent: [{ type: ContentChild, args: [TabsHeaderComponent,] }],
    tabs: [{ type: ContentChildren, args: [TabComponent,] }],
    tabToggleDirectives: [{ type: ViewChildren, args: [TabToggleDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsComponent, [{
        type: Component,
        args: [{
                selector: 'mk-tabs',
                template: "<div [ngClass]=\"styleClass\">\n  <ul [ngClass]=\"navStyleClass\" [class.pull-right]=\"header || tabsHeaderComponent\">\n    <li *ngFor=\"let tab of tabs\" [class.active]=\"tab.isActive\" [mkColor]=\"tab.tabColor || tabsColor\" mkColorProperty=\"border-top-color\">\n      <a *ngIf=\"!tab.isDisabled\" [mkTabToggle]=\"tab\" href=\"#\">\n        {{tab.header}}\n        <ng-template *ngIf=\"!tab.header && tab.tabHeaderComponent\" [ngTemplateOutlet]=\"tab.tabHeaderComponent.templateRef\"></ng-template>\n      </a>\n      <ng-template [ngIf]=\"tab.isDisabled\">\n        {{tab.header}}\n        <ng-template *ngIf=\"!tab.header && tab.tabHeaderComponent\" [ngTemplateOutlet]=\"tab.tabHeaderComponent.templateRef\"></ng-template>\n      </ng-template>\n    </li>\n    <li *ngIf=\"tabsHeaderComponent || header\" [ngClass]=\"headerStyleClass\">\n      {{header}}\n      <ng-template *ngIf=\"tabsHeaderComponent\" [ngTemplateOutlet]=\"tabsHeaderComponent.templateRef\"></ng-template>\n    </li>\n  </ul>\n  <div [ngClass]=\"contentStyleClass\">\n    <div *ngFor=\"let tab of tabs\" class=\"tab-pane\" [class.active]=\"tab.isActive\">\n      <ng-template *ngIf=\"!tab.tabContentComponent\" [ngTemplateOutlet]=\"tab.templateRef\"></ng-template>\n      <ng-template *ngIf=\"tab.tabContentComponent\" [ngTemplateOutlet]=\"tab.tabContentComponent.templateRef\"></ng-template>\n    </div>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".nav-tabs-custom>.nav-tabs>li{border-top-width:0}.nav-tabs-custom>.nav-tabs>li.active{border-top-width:3px}"]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { headerStyleClass: [{
            type: Input
        }], navStyleClass: [{
            type: Input
        }], contentStyleClass: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], closeTab: [{
            type: Output
        }], openTab: [{
            type: Output
        }], activeTabIndex: [{
            type: Input
        }], header: [{
            type: Input
        }], tabsColor: [{
            type: Input
        }], tabsHeaderComponent: [{
            type: ContentChild,
            args: [TabsHeaderComponent]
        }], tabs: [{
            type: ContentChildren,
            args: [TabComponent]
        }], tabToggleDirectives: [{
            type: ViewChildren,
            args: [TabToggleDirective]
        }] }); })();

class TabsModule {
}
TabsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TabsModule });
TabsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TabsModule_Factory(t) { return new (t || TabsModule)(); }, imports: [[CommonModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TabsModule, { declarations: function () { return [TabToggleDirective, TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent]; }, imports: function () { return [CommonModule, ColorModule]; }, exports: function () { return [TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ColorModule],
                exports: [TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent],
                declarations: [TabToggleDirective, TabsComponent, TabsHeaderComponent, TabComponent, TabHeaderComponent, TabContentComponent]
            }]
    }], null, null); })();

/*
 * Public API Surface of angular-admin-lte
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AccordionComponent, AccordionContentComponent, AccordionGroupComponent, AccordionHeaderComponent, AccordionModule, AccordionToggleDirective, AlertComponent, AlertModule, AnimationsModule, BackgroundColorDirective, BoxComponent, BoxContentDirective, BoxFooterDirective, BoxHeaderDirective, BoxInfoComponent, BoxInfoContentDirective, BoxInfoFooterDirective, BoxInfoHeaderDirective, BoxInfoModule, BoxModule, BoxSmallComponent, BoxSmallContentDirective, BoxSmallFooterDirective, BoxSmallHeaderDirective, BoxSmallModule, BoxToolsDirective, BreadcrumbsComponent, BreadcrumbsModule, CollapseAnimationDirective, ColorDirective, ColorModule, ContentComponent, ContentModule, DropdownComponent, DropdownMenuComponent, DropdownModule, DropdownToggleComponent, FooterComponent, FooterLeftComponent, FooterModule, FooterRightComponent, HeaderComponent, HeaderLogoComponent, HeaderLogoMiniComponent, HeaderModule, InputGroupAddonLeftDirective, InputGroupAddonRightDirective, InputGroupComponent, InputGroupContentDirective, InputGroupLabelDirective, InputGroupModule, InputTextDirective, InputTextModule, LayoutModule, LayoutService, LayoutState, LayoutStore, SidebarLeftComponent, SidebarLeftModule, SidebarLeftToggleDirective, SidebarRightComponent, SidebarRightModule, TabComponent, TabContentComponent, TabHeaderComponent, TabToggleDirective, TabsComponent, TabsHeaderComponent, TabsModule, WrapperComponent, WrapperModule };

//# sourceMappingURL=angular-admin-lte.js.map