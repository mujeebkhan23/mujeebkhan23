import { AfterViewInit, ChangeDetectorRef, EventEmitter, NgZone, OnDestroy, Renderer2 } from '@angular/core';
import { AnimationEvent } from '../animations/animations.interface';
import { BoxContentDirective, BoxFooterDirective, BoxHeaderDirective, BoxToolsDirective } from './box.directive';
import * as ɵngcc0 from '@angular/core';
export declare class BoxComponent implements AfterViewInit, OnDestroy {
    private changeDetectorRef;
    private ngZone;
    private renderer2;
    boxColor: string;
    buttonsStyleClass: string;
    contentStyleClass: string;
    contentColor?: string;
    footer?: string;
    footerColor?: string;
    footerStyleClass: string;
    header?: string;
    headerBorder: boolean;
    headerColor?: string;
    headerStyleClass: string;
    isCollapsable: boolean;
    isCollapsed: boolean;
    isLoading: boolean;
    isRemovable: boolean;
    isSolid: boolean;
    loadingColor?: string;
    loadingStyleClass: string;
    styleClass: string;
    collapseDone: EventEmitter<any>;
    collapseStart: EventEmitter<any>;
    boxHeaderDirective?: BoxHeaderDirective;
    boxFooterDirective?: BoxFooterDirective;
    boxContentDirective?: BoxContentDirective;
    boxToolsDirective?: BoxToolsDirective;
    private toggleButtonElement?;
    private removeButtonElement?;
    isCollapsing: boolean;
    remove: boolean;
    removed: boolean;
    private listeners;
    constructor(changeDetectorRef: ChangeDetectorRef, ngZone: NgZone, renderer2: Renderer2);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    removedDone(event: AnimationEvent): void;
    onCollapseStart(event: AnimationEvent): void;
    onCollapseDone(event: AnimationEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BoxComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BoxComponent, "mk-box", never, { "boxColor": "boxColor"; "buttonsStyleClass": "buttonsStyleClass"; "contentStyleClass": "contentStyleClass"; "footerStyleClass": "footerStyleClass"; "headerBorder": "headerBorder"; "headerStyleClass": "headerStyleClass"; "isCollapsable": "isCollapsable"; "isCollapsed": "isCollapsed"; "isLoading": "isLoading"; "isRemovable": "isRemovable"; "isSolid": "isSolid"; "loadingStyleClass": "loadingStyleClass"; "styleClass": "styleClass"; "contentColor": "contentColor"; "footer": "footer"; "footerColor": "footerColor"; "header": "header"; "headerColor": "headerColor"; "loadingColor": "loadingColor"; }, { "collapseDone": "collapseDone"; "collapseStart": "collapseStart"; }, ["boxHeaderDirective", "boxFooterDirective", "boxContentDirective", "boxToolsDirective"], ["mk-box-header", "mk-box-tools", "mk-box-content", "*", "mk-box-footer"]>;
}

//# sourceMappingURL=box.component.d.ts.map