import { ChangeDetectorRef, Component, ContentChild, ContentChildren, EventEmitter, Input, NgZone, Output, Renderer2, ViewChild, ViewChildren } from '@angular/core';
import { AccordionToggleDirective } from './accordion.directive';
import { removeListeners, removeSubscriptions } from '../helpers';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../color/color.directive';
import * as ɵngcc3 from './accordion.directive';
import * as ɵngcc4 from '../animations/animations.directive';

const _c0 = ["templateRef"];
function AccordionHeaderComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
const _c1 = ["*"];
function AccordionContentComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function AccordionComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
function AccordionGroupComponent_div_1_5_ng_template_0_Template(rf, ctx) { }
function AccordionGroupComponent_div_1_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccordionGroupComponent_div_1_5_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const accordion_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", accordion_r1.accordionHeaderComponent.templateRef);
} }
function AccordionGroupComponent_div_1_8_ng_template_0_Template(rf, ctx) { }
function AccordionGroupComponent_div_1_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccordionGroupComponent_div_1_8_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const accordion_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", accordion_r1.templateRef);
} }
function AccordionGroupComponent_div_1_9_ng_template_0_Template(rf, ctx) { }
function AccordionGroupComponent_div_1_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccordionGroupComponent_div_1_9_ng_template_0_Template, 0, 0, "ng-template", 8);
} if (rf & 2) {
    const accordion_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", accordion_r1.accordionContentComponent.templateRef);
} }
function AccordionGroupComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 0);
    ɵngcc0.ɵɵelementStart(2, "h4", 3);
    ɵngcc0.ɵɵelementStart(3, "a", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵtemplate(5, AccordionGroupComponent_div_1_5_Template, 1, 1, undefined, 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 6);
    ɵngcc0.ɵɵlistener("mkCollapseAnimation.start", function AccordionGroupComponent_div_1_Template_div_mkCollapseAnimation_start_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const accordion_r1 = ctx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onCollapseStart($event, accordion_r1); })("mkCollapseAnimation.done", function AccordionGroupComponent_div_1_Template_div_mkCollapseAnimation_done_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const accordion_r1 = ctx.$implicit; const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onCollapseDone($event, accordion_r1); });
    ɵngcc0.ɵɵelementStart(7, "div", 7);
    ɵngcc0.ɵɵtemplate(8, AccordionGroupComponent_div_1_8_Template, 1, 1, undefined, 5);
    ɵngcc0.ɵɵtemplate(9, AccordionGroupComponent_div_1_9_Template, 1, 1, undefined, 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const accordion_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("mkColor", accordion_r1.borderColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("no-border", accordion_r1.isCollapsed && !accordion_r1.isCollapsing);
    ɵngcc0.ɵɵproperty("ngClass", accordion_r1.headerStyleClass);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("collapsed", accordion_r1.isCollapsed);
    ɵngcc0.ɵɵproperty("mkAccordionToggle", accordion_r1)("mkFontColor", accordion_r1.headerStyleColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", accordion_r1.header, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !accordion_r1.header && accordion_r1.accordionHeaderComponent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("mkCollapseAnimation", accordion_r1.isCollapsed);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", accordion_r1.contentStyleClass)("mkFontColor", accordion_r1.contentColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !accordion_r1.accordionContentComponent);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", accordion_r1.accordionContentComponent);
} }
export class AccordionHeaderComponent {
}
AccordionHeaderComponent.ɵfac = function AccordionHeaderComponent_Factory(t) { return new (t || AccordionHeaderComponent)(); };
AccordionHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionHeaderComponent, selectors: [["mk-accordion-header"]], viewQuery: function AccordionHeaderComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function AccordionHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AccordionHeaderComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
AccordionHeaderComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion-header',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
export class AccordionContentComponent {
}
AccordionContentComponent.ɵfac = function AccordionContentComponent_Factory(t) { return new (t || AccordionContentComponent)(); };
AccordionContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionContentComponent, selectors: [["mk-accordion-content"]], viewQuery: function AccordionContentComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function AccordionContentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AccordionContentComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
AccordionContentComponent.propDecorators = {
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionContentComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion-content',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], null, { templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
export class AccordionComponent {
    constructor() {
        this.contentStyleClass = 'box-body';
        this.headerStyleClass = 'box-header with-border';
        this.isCollapsing = false;
        this.isCollapsed = false;
        this.index = 0;
    }
    ngOnInit() {
        this.headerStyleColor = this.headerColor;
    }
    ngAfterViewInit() {
        if (!this.header && !this.accordionHeaderComponent) {
            throw new Error('Attribute "header" OR Component "mk-accordion-header" is required for component "mk-accordion"');
        }
    }
}
AccordionComponent.ɵfac = function AccordionComponent_Factory(t) { return new (t || AccordionComponent)(); };
AccordionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionComponent, selectors: [["mk-accordion"]], contentQueries: function AccordionComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionHeaderComponent, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionContentComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionHeaderComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionContentComponent = _t.first);
    } }, viewQuery: function AccordionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
    } }, inputs: { contentStyleClass: "contentStyleClass", headerStyleClass: "headerStyleClass", borderColor: "borderColor", contentColor: "contentColor", header: "header", headerColor: "headerColor", headerColorHover: "headerColorHover" }, ngContentSelectors: _c1, decls: 2, vars: 0, consts: [["templateRef", ""]], template: function AccordionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, AccordionComponent_ng_template_0_Template, 1, 0, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, encapsulation: 2 });
AccordionComponent.propDecorators = {
    borderColor: [{ type: Input }],
    contentColor: [{ type: Input }],
    contentStyleClass: [{ type: Input }],
    header: [{ type: Input }],
    headerColor: [{ type: Input }],
    headerColorHover: [{ type: Input }],
    headerStyleClass: [{ type: Input }],
    accordionHeaderComponent: [{ type: ContentChild, args: [AccordionHeaderComponent,] }],
    accordionContentComponent: [{ type: ContentChild, args: [AccordionContentComponent,] }],
    templateRef: [{ type: ViewChild, args: ['templateRef', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion',
                template: '<ng-template #templateRef><ng-content></ng-content></ng-template>'
            }]
    }], function () { return []; }, { contentStyleClass: [{
            type: Input
        }], headerStyleClass: [{
            type: Input
        }], borderColor: [{
            type: Input
        }], contentColor: [{
            type: Input
        }], header: [{
            type: Input
        }], headerColor: [{
            type: Input
        }], headerColorHover: [{
            type: Input
        }], accordionHeaderComponent: [{
            type: ContentChild,
            args: [AccordionHeaderComponent]
        }], accordionContentComponent: [{
            type: ContentChild,
            args: [AccordionContentComponent]
        }], templateRef: [{
            type: ViewChild,
            args: ['templateRef', { static: true }]
        }] }); })();
export class AccordionGroupComponent {
    constructor(changeDetectorRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.isMultiple = false;
        this.styleClass = 'box-group';
        this.collapseStart = new EventEmitter();
        this.collapseDone = new EventEmitter();
        this.activeIndex = [0];
        this.listeners = [];
        // @TODO change types for subscriptions to all files
        this.subscriptions = [];
    }
    set _activeIndex(value) {
        this.activeIndex = value instanceof Array ? value : [value];
    }
    static headerMouseLeave(accordion) {
        accordion.headerStyleColor = accordion.headerColor;
    }
    static headerMouseEnter(accordion) {
        if (accordion.headerColorHover) {
            accordion.headerStyleColor = accordion.headerColorHover;
        }
    }
    ngAfterContentInit() {
        this.setAccordionsIndex();
        this.updateAccordionIsCollapsed();
        this.subscriptions.push(this.accordionComponents.changes.subscribe(() => {
            this.setAccordionsIndex();
        }));
    }
    ngAfterViewInit() {
        this.setAccordionsToggle();
        this.subscriptions.push(this.accordionToggleDirectives.changes.subscribe(() => {
            this.setAccordionsToggle();
        }));
    }
    ngOnChanges(changes) {
        if (!changes._activeIndex.firstChange) {
            this.updateAccordionIsCollapsed();
        }
    }
    ngOnDestroy() {
        removeListeners(this.listeners);
        removeSubscriptions(this.subscriptions);
    }
    toggleAccordion(event, toggleIndex) {
        event.preventDefault();
        const indexOf = this.activeIndex.indexOf(toggleIndex);
        if (indexOf === -1) {
            if (this.isMultiple) {
                this.activeIndex.push(toggleIndex);
            }
            else {
                this.activeIndex = [toggleIndex];
            }
        }
        else {
            if (this.isMultiple) {
                this.activeIndex.splice(indexOf, 1);
            }
            else {
                this.activeIndex = [];
            }
        }
        this.updateAccordionIsCollapsed();
    }
    onCollapseStart(event, accordion) {
        accordion.isCollapsing = true;
        this.collapseStart.emit({ animationEvent: event, index: accordion.index });
    }
    onCollapseDone(event, accordion) {
        accordion.isCollapsing = false;
        this.collapseDone.emit({ animationEvent: event, index: accordion.index });
    }
    setAccordionsIndex() {
        this.accordionComponents.forEach((accordion, index) => {
            accordion.index = index;
        });
    }
    setAccordionsToggle() {
        this.listeners = removeListeners(this.listeners);
        this.ngZone.runOutsideAngular(() => {
            this.accordionToggleDirectives.forEach((accordionToggle) => {
                this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'click', (event) => {
                    this.toggleAccordion(event, accordionToggle.accordionComponent.index);
                    this.changeDetectorRef.detectChanges();
                }));
                this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseenter', () => {
                    AccordionGroupComponent.headerMouseEnter(accordionToggle.accordionComponent);
                    this.changeDetectorRef.detectChanges();
                }));
                this.listeners.push(this.renderer2.listen(accordionToggle.elementRef.nativeElement, 'mouseleave', () => {
                    AccordionGroupComponent.headerMouseLeave(accordionToggle.accordionComponent);
                    this.changeDetectorRef.detectChanges();
                }));
            });
        });
    }
    updateAccordionIsCollapsed() {
        this.accordionComponents.forEach((accordion, index) => {
            accordion.isCollapsed = this.activeIndex.indexOf(index) === -1;
        });
    }
}
AccordionGroupComponent.ɵfac = function AccordionGroupComponent_Factory(t) { return new (t || AccordionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
AccordionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AccordionGroupComponent, selectors: [["mk-accordion-group"]], contentQueries: function AccordionGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, AccordionComponent, false);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionComponents = _t);
    } }, viewQuery: function AccordionGroupComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(AccordionToggleDirective, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accordionToggleDirectives = _t);
    } }, inputs: { isMultiple: "isMultiple", styleClass: "styleClass", _activeIndex: ["activeIndex", "_activeIndex"] }, outputs: { collapseStart: "collapseStart", collapseDone: "collapseDone" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[3, "ngClass"], ["class", "panel box", "mkColorProperty", "border-top-color", "mkColorPrefix", "box", 3, "mkColor", 4, "ngFor", "ngForOf"], ["mkColorProperty", "border-top-color", "mkColorPrefix", "box", 1, "panel", "box", 3, "mkColor"], [1, "box-title"], ["href", "#", 3, "mkAccordionToggle", "mkFontColor"], [4, "ngIf"], [1, "panel-collapse", 3, "mkCollapseAnimation", "mkCollapseAnimation.start", "mkCollapseAnimation.done"], [3, "ngClass", "mkFontColor"], [3, "ngTemplateOutlet"]], template: function AccordionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, AccordionGroupComponent_div_1_Template, 10, 15, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.styleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.accordionComponents);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc2.BackgroundColorDirective, ɵngcc3.AccordionToggleDirective, ɵngcc2.ColorDirective, ɵngcc1.NgIf, ɵngcc4.CollapseAnimationDirective, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
AccordionGroupComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: NgZone },
    { type: Renderer2 }
];
AccordionGroupComponent.propDecorators = {
    _activeIndex: [{ type: Input, args: ['activeIndex',] }],
    isMultiple: [{ type: Input }],
    styleClass: [{ type: Input }],
    collapseStart: [{ type: Output }],
    collapseDone: [{ type: Output }],
    accordionComponents: [{ type: ContentChildren, args: [AccordionComponent,] }],
    accordionToggleDirectives: [{ type: ViewChildren, args: [AccordionToggleDirective,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AccordionGroupComponent, [{
        type: Component,
        args: [{
                selector: 'mk-accordion-group',
                template: "<div [ngClass]=\"styleClass\">\n  <div *ngFor=\"let accordion of accordionComponents\" class=\"panel box\" [mkColor]=\"accordion.borderColor\" mkColorProperty=\"border-top-color\" mkColorPrefix=\"box\">\n    <div [ngClass]=\"accordion.headerStyleClass\" [class.no-border]=\"accordion.isCollapsed && !accordion.isCollapsing\">\n      <h4 class=\"box-title\">\n        <a [mkAccordionToggle]=\"accordion\" href=\"#\" [mkFontColor]=\"accordion.headerStyleColor\" [class.collapsed]=\"accordion.isCollapsed\">\n          {{accordion.header}}\n          <ng-template *ngIf=\"!accordion.header && accordion.accordionHeaderComponent\" [ngTemplateOutlet]=\"accordion.accordionHeaderComponent.templateRef\"></ng-template>\n        </a>\n      </h4>\n    </div>\n    <div class=\"panel-collapse\" [mkCollapseAnimation]=\"accordion.isCollapsed\" (mkCollapseAnimation.start)=\"onCollapseStart($event, accordion)\" (mkCollapseAnimation.done)=\"onCollapseDone($event, accordion)\">\n      <div [ngClass]=\"accordion.contentStyleClass\" [mkFontColor]=\"accordion.contentColor\">\n        <ng-template *ngIf=\"!accordion.accordionContentComponent\" [ngTemplateOutlet]=\"accordion.templateRef\"></ng-template>\n        <ng-template *ngIf=\"accordion.accordionContentComponent\" [ngTemplateOutlet]=\"accordion.accordionContentComponent.templateRef\"></ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { isMultiple: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], collapseStart: [{
            type: Output
        }], collapseDone: [{
            type: Output
        }], _activeIndex: [{
            type: Input,
            args: ['activeIndex']
        }], accordionComponents: [{
            type: ContentChildren,
            args: [AccordionComponent]
        }], accordionToggleDirectives: [{
            type: ViewChildren,
            args: [AccordionToggleDirective]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,