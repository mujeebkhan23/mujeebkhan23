import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ColorModule } from '../color/color.module';
import { BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective } from './box-small.directive';
import { BoxSmallComponent } from './box-small.component';
import * as ɵngcc0 from '@angular/core';
export { BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective } from './box-small.directive';
export { BoxSmallComponent } from './box-small.component';
export class BoxSmallModule {
}
BoxSmallModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BoxSmallModule });
BoxSmallModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BoxSmallModule_Factory(t) { return new (t || BoxSmallModule)(); }, imports: [[CommonModule, ColorModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BoxSmallModule, { declarations: function () { return [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]; }, imports: function () { return [CommonModule, ColorModule]; }, exports: function () { return [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BoxSmallModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, ColorModule],
                exports: [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective],
                declarations: [BoxSmallComponent, BoxSmallHeaderDirective, BoxSmallContentDirective, BoxSmallFooterDirective]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94LXNtYWxsLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicmFyeS9hbmd1bGFyLWFkbWluLWx0ZS9zcmMvbGliL2JveC1zbWFsbC9ib3gtc21hbGwubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNuSCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFFMUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLHdCQUF3QixFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkgsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFPMUQsTUFBTSxPQUFPLGNBQWM7QUFDM0I7NENBTkMsUUFBUSxTQUFDO09BQ04sT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQyxtQkFDcEMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLEVBQUUsdUJBQXVCLENBQUM7U0FDeEcsWUFBWSxFQUFFLENBQUMsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLEVBQUUsdUJBQXVCLENBQUMsZUFDaEg7Ozs7Ozs7OztBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgQ29sb3JNb2R1bGUgfSBmcm9tICcuLi9jb2xvci9jb2xvci5tb2R1bGUnO1xuaW1wb3J0IHsgQm94U21hbGxIZWFkZXJEaXJlY3RpdmUsIEJveFNtYWxsQ29udGVudERpcmVjdGl2ZSwgQm94U21hbGxGb290ZXJEaXJlY3RpdmUgfSBmcm9tICcuL2JveC1zbWFsbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQm94U21hbGxDb21wb25lbnQgfSBmcm9tICcuL2JveC1zbWFsbC5jb21wb25lbnQnO1xuXG5leHBvcnQgeyBCb3hTbWFsbEhlYWRlckRpcmVjdGl2ZSwgQm94U21hbGxDb250ZW50RGlyZWN0aXZlLCBCb3hTbWFsbEZvb3RlckRpcmVjdGl2ZSB9IGZyb20gJy4vYm94LXNtYWxsLmRpcmVjdGl2ZSc7XG5leHBvcnQgeyBCb3hTbWFsbENvbXBvbmVudCB9IGZyb20gJy4vYm94LXNtYWxsLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQ29sb3JNb2R1bGVdLFxuICAgIGV4cG9ydHM6IFtCb3hTbWFsbENvbXBvbmVudCwgQm94U21hbGxIZWFkZXJEaXJlY3RpdmUsIEJveFNtYWxsQ29udGVudERpcmVjdGl2ZSwgQm94U21hbGxGb290ZXJEaXJlY3RpdmVdLFxuICAgIGRlY2xhcmF0aW9uczogW0JveFNtYWxsQ29tcG9uZW50LCBCb3hTbWFsbEhlYWRlckRpcmVjdGl2ZSwgQm94U21hbGxDb250ZW50RGlyZWN0aXZlLCBCb3hTbWFsbEZvb3RlckRpcmVjdGl2ZV1cbn0pXG5leHBvcnQgY2xhc3MgQm94U21hbGxNb2R1bGUge31cbiJdfQ==