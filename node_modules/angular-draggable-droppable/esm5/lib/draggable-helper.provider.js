/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Subject } from 'rxjs';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
export function CurrentDragData() { }
if (false) {
    /** @type {?} */
    CurrentDragData.prototype.clientX;
    /** @type {?} */
    CurrentDragData.prototype.clientY;
    /** @type {?} */
    CurrentDragData.prototype.dropData;
    /** @type {?} */
    CurrentDragData.prototype.target;
}
var DraggableHelper = /** @class */ (function () {
    function DraggableHelper() {
        this.currentDrag = new Subject();
    }
    /** @nocollapse */ DraggableHelper.ngInjectableDef = i0.defineInjectable({ factory: function DraggableHelper_Factory() { return new DraggableHelper(); }, token: DraggableHelper, providedIn: "root" });
DraggableHelper.ɵfac = function DraggableHelper_Factory(t) { return new (t || DraggableHelper)(); };
DraggableHelper.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DraggableHelper, factory: function (t) { return DraggableHelper.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DraggableHelper, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return DraggableHelper;
}());
export { DraggableHelper };
if (false) {
    /** @type {?} */
    DraggableHelper.prototype.currentDrag;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZ2dhYmxlLWhlbHBlci5wcm92aWRlci5qcyIsInNvdXJjZXMiOlsiYW5ndWxhci1kcmFnZ2FibGUtZHJvcHBhYmxlL2xpYi9kcmFnZ2FibGUtaGVscGVyLnByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQy9CLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0M7QUFDRztBQUFLO0FBQ1A7O0FBRkQscUNBS0M7QUFFRDtBQUNBO0FBQ0EsSUFSRSxrQ0FBZ0I7QUFDakI7QUFDRyxJQURGLGtDQUFnQjtBQUNqQjtBQUNLLElBREosbUNBQWM7QUFDZjtBQUNELElBREUsaUNBQW9CO0FBQ3JCO0FBRUQ7QUFHYSxJQUhiO0FBQ2dCLFFBR2QsZ0JBQVcsR0FBRyxJQUFJLE9BQU8sRUFBNEIsQ0FBQztBQUN2RCxLQUFBLEFBRlM7b0RBSFQsVUFBVSxTQUFDLHVCQUNWLFVBQVUsRUFBRSxNQUFNLG9CQUNuQixwSUFDVzs7Ozs7Ozs7Z0RBR2tIO0FBQUUsMEJBaEJoSTtBQUFHLENBZUYsQUFMRCxJQUtDO0FBQ0EsU0FIWSxlQUFlO0FBQzFCO0FBQWM7QUFBc0IsSUFBcEMsc0NBQXNEOztBQWRBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFLQSxBQUpBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFHQSxBQUFBLEFBSUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUxBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFaQSxBQWVBLEFBTEEsQUFLQSxBQUZBLEFBQUEsQUFDQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1cnJlbnREcmFnRGF0YSB7XG4gIGNsaWVudFg6IG51bWJlcjtcbiAgY2xpZW50WTogbnVtYmVyO1xuICBkcm9wRGF0YTogYW55O1xuICB0YXJnZXQ6IEV2ZW50VGFyZ2V0O1xufVxuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgRHJhZ2dhYmxlSGVscGVyIHtcbiAgY3VycmVudERyYWcgPSBuZXcgU3ViamVjdDxTdWJqZWN0PEN1cnJlbnREcmFnRGF0YT4+KCk7XG59XG4iXX0=